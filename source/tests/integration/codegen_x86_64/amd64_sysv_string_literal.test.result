.intel_syntax prefix
.section .note.GNU-stack,"",%progbits

.section .text

.extern __kefirrt_nop_impl
.extern __kefirrt_jmp_impl
.extern __kefirrt_ijmp_impl
.extern __kefirrt_branch_impl
.extern __kefirrt_pushi_impl
.extern __kefirrt_pop_impl
.extern __kefirrt_pick_impl
.extern __kefirrt_xchg_impl
.extern __kefirrt_iadd_impl
.extern __kefirrt_iadd1_impl
.extern __kefirrt_isub_impl
.extern __kefirrt_imul_impl
.extern __kefirrt_idiv_impl
.extern __kefirrt_imod_impl
.extern __kefirrt_udiv_impl
.extern __kefirrt_umod_impl
.extern __kefirrt_ineg_impl
.extern __kefirrt_inot_impl
.extern __kefirrt_iand_impl
.extern __kefirrt_ior_impl
.extern __kefirrt_ixor_impl
.extern __kefirrt_ishr_impl
.extern __kefirrt_isar_impl
.extern __kefirrt_ishl_impl
.extern __kefirrt_iequals_impl
.extern __kefirrt_igreater_impl
.extern __kefirrt_ilesser_impl
.extern __kefirrt_iabove_impl
.extern __kefirrt_ibelow_impl
.extern __kefirrt_band_impl
.extern __kefirrt_bor_impl
.extern __kefirrt_bnot_impl
.extern __kefirrt_trunc1_impl
.extern __kefirrt_extend8_impl
.extern __kefirrt_extend16_impl
.extern __kefirrt_extend32_impl
.extern __kefirrt_iaddx_impl
.extern __kefirrt_load8u_impl
.extern __kefirrt_load8i_impl
.extern __kefirrt_load16u_impl
.extern __kefirrt_load16i_impl
.extern __kefirrt_load32u_impl
.extern __kefirrt_load32i_impl
.extern __kefirrt_load64_impl
.extern __kefirrt_loadld_impl
.extern __kefirrt_store8_impl
.extern __kefirrt_store16_impl
.extern __kefirrt_store32_impl
.extern __kefirrt_store64_impl
.extern __kefirrt_storeld_impl
.extern __kefirrt_bzero_impl
.extern __kefirrt_bcopy_impl
.extern __kefirrt_extubits_impl
.extern __kefirrt_extsbits_impl
.extern __kefirrt_insertbits_impl
.extern __kefirrt_getlocal_impl
.extern __kefirrt_f32add_impl
.extern __kefirrt_f32sub_impl
.extern __kefirrt_f32mul_impl
.extern __kefirrt_f32div_impl
.extern __kefirrt_f32neg_impl
.extern __kefirrt_f64add_impl
.extern __kefirrt_f64sub_impl
.extern __kefirrt_f64mul_impl
.extern __kefirrt_f64div_impl
.extern __kefirrt_f64neg_impl
.extern __kefirrt_ldadd_impl
.extern __kefirrt_ldsub_impl
.extern __kefirrt_ldmul_impl
.extern __kefirrt_lddiv_impl
.extern __kefirrt_ldneg_impl
.extern __kefirrt_f32equals_impl
.extern __kefirrt_f32greater_impl
.extern __kefirrt_f32lesser_impl
.extern __kefirrt_f64equals_impl
.extern __kefirrt_f64greater_impl
.extern __kefirrt_f64lesser_impl
.extern __kefirrt_ldequals_impl
.extern __kefirrt_ldgreater_impl
.extern __kefirrt_ldlesser_impl
.extern __kefirrt_ldtrunc1_impl
.extern __kefirrt_f32cint_impl
.extern __kefirrt_f64cint_impl
.extern __kefirrt_intcf32_impl
.extern __kefirrt_intcf64_impl
.extern __kefirrt_uintcf32_impl
.extern __kefirrt_uintcf64_impl
.extern __kefirrt_f32cf64_impl
.extern __kefirrt_f64cf32_impl
.extern __kefirrt_alloca_impl
.extern __kefirrt_intcld_impl
.extern __kefirrt_uintcld_impl
.extern __kefirrt_ldcint_impl
.extern __kefirrt_f32cld_impl
.extern __kefirrt_f64cld_impl
.extern __kefirrt_ldcf32_impl
.extern __kefirrt_ldcf64_impl
.extern __kefirrt_pushscope_impl
.extern __kefirrt_popscope_impl
.extern __kefirrt_setldh_impl
.extern __kefirrt_setldl_impl
.extern __kefirrt_preserve_state
.extern __kefirrt_restore_state
.extern __kefirrt_save_registers
.extern __kefirrt_load_integer_vararg
.extern __kefirrt_load_sse_vararg
.extern __kefirrt_copy_vararg



func1:
call __kefirrt_preserve_state
sub %rsp, 16
call __kefirrt_generic_prologue
lea %rbx, [__func1_body]
jmp [%rbx]
__func1_body:
.quad __kefirrt_pushi_impl, __kefirrt_string_literal0
.quad __kefirrt_pushi_impl, __kefirrt_string_literal1
.quad __kefirrt_pushi_impl, __kefirrt_string_literal2
.quad __kefirrt_pushi_impl, __kefirrt_string_literal3
.quad __kefirrt_pushi_impl, __kefirrt_string_literal4
.quad __func1_epilogue, 0
__func1_epilogue:
mov %rsp, %r14
add %rsp, 16
jmp __kefirrt_restore_state

.section .rodata
__kefirrt_string_literal0:
.ascii "Hello, world!\000"
__kefirrt_string_literal1:
.ascii "Hello,\ncruel\tworld!\000"
__kefirrt_string_literal2:
.ascii "\n\n\n\t\t\t   \t\t\t\013\013\013\n\000"
__kefirrt_string_literal3:
.ascii "'\"Hey ho!\"'\\\"\000"
__kefirrt_string_literal4:
.ascii "\000\000\000\n\000\000"
