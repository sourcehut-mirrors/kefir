.intel_syntax prefix
.section .note.GNU-stack,"",%progbits

.global func1
.type func1, @function

.section .text
__kefir_text_section_begin:
func1:
__kefir_text_func_func1_begin:
    push %rbp
    mov %rbp, %rsp
_kefir_func_func1_label0:
    xor %eax, %eax
    mov %rcx, 0
    mov BYTE PTR [%rcx], %al
    mov %rcx, 0
    mov %al, BYTE PTR [%rcx]
    mov %rcx, 0
    mov BYTE PTR [%rcx], %al
    xor %eax, %eax
    mov %rcx, 0
    mov DWORD PTR [%rcx], %eax
    mov %rcx, 0
    mov %eax, DWORD PTR [%rcx]
    mov %rcx, 0
    mov DWORD PTR [%rcx], %eax
    xor %eax, %eax
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx]
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    xor %eax, %eax
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 8], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 16], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 24], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 32], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx]
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 8]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 8], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 16]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 16], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 24]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 24], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 32]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 32], %rax
    xor %eax, %eax
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 8], %rax
    mov %rcx, 0
    mov QWORD PTR [%rcx + 16], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx]
    mov %rcx, 0
    mov QWORD PTR [%rcx], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 8]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 8], %rax
    mov %rcx, 0
    mov %rax, QWORD PTR [%rcx + 16]
    mov %rcx, 0
    mov QWORD PTR [%rcx + 16], %rax
    pop %rbp
    ret
__kefir_text_func_func1_end:

__kefir_text_section_end:

