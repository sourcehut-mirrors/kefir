.intel_syntax prefix
.section .note.GNU-stack,"",%progbits

.global func1
.type func1, @function
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
func1:
__kefir_text_func_func1_begin:
    push %rbp
    mov %rbp, %rsp
_kefir_func_func1_label0:
_kefir_func_func1_label1:
    mov %rdx, 0
    mov %rdi, %rdx
    mov %rax, 0
    mov %rcx, 1
    rep stosb
    mov %al, BYTE PTR [%rdx]
    mov BYTE PTR [%rdx], %al
    mov %rdx, 0
    mov %rdi, %rdx
    mov %rax, 0
    mov %rcx, 4
    rep stosb
    mov %eax, DWORD PTR [%rdx]
    mov DWORD PTR [%rdx], %eax
    mov %rdx, 0
    mov %rdi, %rdx
    mov %rax, 0
    mov %rcx, 8
    rep stosb
    mov %rax, QWORD PTR [%rdx]
    mov QWORD PTR [%rdx], %rax
    mov %rdx, 0
    mov %rdi, %rdx
    mov %rax, 0
    mov %rcx, 40
    rep stosb
    mov %rax, QWORD PTR [%rdx]
    mov QWORD PTR [%rdx], %rax
    mov %rax, QWORD PTR [%rdx + 8]
    mov QWORD PTR [%rdx + 8], %rax
    mov %rax, QWORD PTR [%rdx + 16]
    mov QWORD PTR [%rdx + 16], %rax
    mov %rax, QWORD PTR [%rdx + 24]
    mov QWORD PTR [%rdx + 24], %rax
    mov %rax, QWORD PTR [%rdx + 32]
    mov QWORD PTR [%rdx + 32], %rax
    mov %rdx, 0
    mov %rdi, %rdx
    mov %rax, 0
    mov %rcx, 24
    rep stosb
    mov %rax, QWORD PTR [%rdx]
    mov QWORD PTR [%rdx], %rax
    mov %rax, QWORD PTR [%rdx + 8]
    mov QWORD PTR [%rdx + 8], %rax
    mov %rax, QWORD PTR [%rdx + 16]
    mov QWORD PTR [%rdx + 16], %rax
    pop %rbp
    ret
__kefir_text_func_func1_end:

__kefir_text_section_end:

