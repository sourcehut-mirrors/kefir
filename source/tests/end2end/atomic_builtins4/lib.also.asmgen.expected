.att_syntax
.section .note.GNU-stack,"",%progbits

.global test_atomic_compare_exchange8
.type test_atomic_compare_exchange8, @function
.global test2_atomic_compare_exchange16
.type test2_atomic_compare_exchange16, @function
.global test2_atomic_compare_exchange32
.type test2_atomic_compare_exchange32, @function
.global test2_atomic_compare_exchange64
.type test2_atomic_compare_exchange64, @function
.global test2_atomic_compare_exchange8
.type test2_atomic_compare_exchange8, @function
.global test_atomic_compare_exchange16
.type test_atomic_compare_exchange16, @function
.global test_atomic_compare_exchange32
.type test_atomic_compare_exchange32, @function
.global test_atomic_compare_exchange64
.type test_atomic_compare_exchange64, @function
.extern __atomic_compare_exchange
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
test_atomic_compare_exchange8:
__kefir_text_func_test_atomic_compare_exchange8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movb %dl, -1(%rbp)
    mov $1, %rdx
    lea -1(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_compare_exchange8_end:

test2_atomic_compare_exchange16:
__kefir_text_func_test2_atomic_compare_exchange16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movsx %dx, %rdx
    movw %dx, -2(%rbp)
    mov $2, %rdx
    lea -2(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_compare_exchange16_end:

test2_atomic_compare_exchange32:
__kefir_text_func_test2_atomic_compare_exchange32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movsx %edx, %rdx
    movl %edx, -4(%rbp)
    mov $4, %rdx
    lea -4(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_compare_exchange32_end:

test2_atomic_compare_exchange64:
__kefir_text_func_test2_atomic_compare_exchange64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movq %rdx, -8(%rbp)
    mov $8, %rdx
    lea -8(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_compare_exchange64_end:

test2_atomic_compare_exchange8:
__kefir_text_func_test2_atomic_compare_exchange8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movsx %dl, %rdx
    movb %dl, -1(%rbp)
    mov $1, %rdx
    lea -1(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_compare_exchange8_end:

test_atomic_compare_exchange16:
__kefir_text_func_test_atomic_compare_exchange16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movw %dx, -2(%rbp)
    mov $2, %rdx
    lea -2(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_compare_exchange16_end:

test_atomic_compare_exchange32:
__kefir_text_func_test_atomic_compare_exchange32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movl %edx, -4(%rbp)
    mov $4, %rdx
    lea -4(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_compare_exchange32_end:

test_atomic_compare_exchange64:
__kefir_text_func_test_atomic_compare_exchange64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    mov %rsi, %rcx
    movq %rdx, -8(%rbp)
    mov $8, %rdx
    lea -8(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rax, %rsi
    mov %rcx, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_compare_exchange64_end:

__kefir_text_section_end:

