.att_syntax
.section .note.GNU-stack,"",%progbits

.extern x
.extern y
.global or
.type or, @function
.global add
.type add, @function
.global and
.type and, @function
.global sub
.type sub, @function
.global xor
.type xor, @function
.global idiv
.type idiv, @function
.global imod
.type imod, @function
.global imul
.type imul, @function
.global udiv
.type udiv, @function
.global umod
.type umod, @function
.global umul
.type umul, @function
.global lshift
.type lshift, @function
.global rshift
.type rshift, @function
.global arshift
.type arshift, @function

.section .text
__kefir_text_section_begin:
or:
__kefir_text_func_or_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_or_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -56(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -96(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -88(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -80(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -32(%rbp)
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -72(%rbp), %rax
    mov %rax, %rsi
    mov $150, %rdx
    call __kefir_bigint_or
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_or_end:

add:
__kefir_text_func_add_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_add_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -56(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -96(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -88(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -80(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -32(%rbp)
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -72(%rbp), %rax
    mov %rax, %rsi
    mov $150, %rdx
    call __kefir_bigint_add
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_end:

and:
__kefir_text_func_and_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_and_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -56(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -96(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -88(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -80(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -32(%rbp)
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -72(%rbp), %rax
    mov %rax, %rsi
    mov $150, %rdx
    call __kefir_bigint_and
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_and_end:

sub:
__kefir_text_func_sub_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_sub_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -56(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -96(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -88(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -80(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -32(%rbp)
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -72(%rbp), %rax
    mov %rax, %rsi
    mov $150, %rdx
    call __kefir_bigint_subtract
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_sub_end:

xor:
__kefir_text_func_xor_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_xor_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -56(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -96(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -88(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -80(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -32(%rbp)
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -72(%rbp), %rax
    mov %rax, %rsi
    mov $150, %rdx
    call __kefir_bigint_xor
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_xor_end:

idiv:
__kefir_text_func_idiv_begin:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
    mov %rdi, %r10
_kefir_func_idiv_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -104(%rbp)
    movq x@GOTPCREL(%rip), %r9
    movq (%r9), %rax
    movq %rax, -144(%rbp)
    movq 8(%r9), %rax
    movq %rax, -136(%rbp)
    movq 16(%r9), %rax
    movq %rax, -128(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -128(%rbp), %rax
    movq %rax, -64(%rbp)
    movq %r9, -144(%rbp)
    movq %r10, -136(%rbp)
    leaq -80(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $300, %rdx
    call __kefir_bigint_cast_signed
    movq -144(%rbp), %r9
    movq -136(%rbp), %r10
    movq -120(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -128(%rbp)
    movq %r9, -40(%rbp)
    movq %r10, -32(%rbp)
    leaq -80(%rbp), %rax
    mov %rax, %rdi
    leaq -120(%rbp), %rax
    mov %rax, %rsi
    leaq -144(%rbp), %rax
    mov %rax, %rdx
    mov $300, %rcx
    mov $150, %r8
    call __kefir_bigint_signed_divide
    movq -40(%rbp), %r9
    movq -32(%rbp), %r10
    movq -80(%rbp), %rax
    movq %rax, (%r9)
    movq -72(%rbp), %rax
    movq %rax, 8(%r9)
    movq -64(%rbp), %rax
    movq %rax, 16(%r9)
    mov %r10, %rax
    movq -80(%rbp), %rcx
    movq %rcx, (%rax)
    movq -72(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -64(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_idiv_end:

imod:
__kefir_text_func_imod_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
    mov %rdi, %r10
_kefir_func_imod_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -40(%rbp)
    movq x@GOTPCREL(%rip), %r9
    movq (%r9), %rax
    movq %rax, -160(%rbp)
    movq 8(%r9), %rax
    movq %rax, -152(%rbp)
    movq 16(%r9), %rax
    movq %rax, -144(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -120(%rbp)
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -136(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $300, %rdx
    call __kefir_bigint_cast_signed
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -136(%rbp), %rax
    mov %rax, %rdi
    leaq -96(%rbp), %rax
    mov %rax, %rsi
    leaq -56(%rbp), %rax
    mov %rax, %rdx
    mov $300, %rcx
    mov $150, %r8
    call __kefir_bigint_signed_divide
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq -96(%rbp), %rax
    movq %rax, (%r9)
    movq -88(%rbp), %rax
    movq %rax, 8(%r9)
    movq -80(%rbp), %rax
    movq %rax, 16(%r9)
    mov %r10, %rax
    movq -96(%rbp), %rcx
    movq %rcx, (%rax)
    movq -88(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -80(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_imod_end:

imul:
__kefir_text_func_imul_begin:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
    mov %rdi, %r11
_kefir_func_imul_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -80(%rbp)
    movq x@GOTPCREL(%rip), %r10
    movq (%r10), %rax
    movq %rax, -144(%rbp)
    movq 8(%r10), %rax
    movq %rax, -136(%rbp)
    movq 16(%r10), %rax
    movq %rax, -128(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -128(%rbp), %rax
    movq %rax, -104(%rbp)
    movq %r10, -48(%rbp)
    movq %r11, -40(%rbp)
    leaq -72(%rbp), %rax
    mov %rax, %rdi
    leaq -144(%rbp), %rax
    mov %rax, %rsi
    leaq -120(%rbp), %rax
    mov %rax, %rdx
    leaq -96(%rbp), %rax
    mov %rax, %rcx
    mov $150, %r8
    mov $150, %r9
    call __kefir_bigint_signed_multiply
    movq -48(%rbp), %r10
    movq -40(%rbp), %r11
    movq -72(%rbp), %rax
    movq %rax, (%r10)
    movq -64(%rbp), %rax
    movq %rax, 8(%r10)
    movq -56(%rbp), %rax
    movq %rax, 16(%r10)
    mov %r11, %rax
    movq -72(%rbp), %rcx
    movq %rcx, (%rax)
    movq -64(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -56(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_imul_end:

udiv:
__kefir_text_func_udiv_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
    mov %rdi, %r10
_kefir_func_udiv_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -80(%rbp)
    movq y@GOTPCREL(%rip), %r9
    movq (%r9), %rax
    movq %rax, -160(%rbp)
    movq 8(%r9), %rax
    movq %rax, -152(%rbp)
    movq 16(%r9), %rax
    movq %rax, -144(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -56(%rbp)
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -72(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $300, %rdx
    call __kefir_bigint_cast_unsigned
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -72(%rbp), %rax
    mov %rax, %rdi
    leaq -136(%rbp), %rax
    mov %rax, %rsi
    leaq -96(%rbp), %rax
    mov %rax, %rdx
    mov $300, %rcx
    mov $150, %r8
    call __kefir_bigint_unsigned_divide
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq -72(%rbp), %rax
    movq %rax, (%r9)
    movq -64(%rbp), %rax
    movq %rax, 8(%r9)
    movq -56(%rbp), %rax
    movq %rax, 16(%r9)
    mov %r10, %rax
    movq -72(%rbp), %rcx
    movq %rcx, (%rax)
    movq -64(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -56(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_udiv_end:

umod:
__kefir_text_func_umod_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
    mov %rdi, %r10
_kefir_func_umod_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -40(%rbp)
    movq y@GOTPCREL(%rip), %r9
    movq (%r9), %rax
    movq %rax, -160(%rbp)
    movq 8(%r9), %rax
    movq %rax, -152(%rbp)
    movq 16(%r9), %rax
    movq %rax, -144(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -120(%rbp)
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -136(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $300, %rdx
    call __kefir_bigint_cast_unsigned
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq %r9, -160(%rbp)
    movq %r10, -152(%rbp)
    leaq -136(%rbp), %rax
    mov %rax, %rdi
    leaq -96(%rbp), %rax
    mov %rax, %rsi
    leaq -56(%rbp), %rax
    mov %rax, %rdx
    mov $300, %rcx
    mov $150, %r8
    call __kefir_bigint_unsigned_divide
    movq -160(%rbp), %r9
    movq -152(%rbp), %r10
    movq -96(%rbp), %rax
    movq %rax, (%r9)
    movq -88(%rbp), %rax
    movq %rax, 8(%r9)
    movq -80(%rbp), %rax
    movq %rax, 16(%r9)
    mov %r10, %rax
    movq -96(%rbp), %rcx
    movq %rcx, (%rax)
    movq -88(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -80(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_umod_end:

umul:
__kefir_text_func_umul_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    mov %rdi, %r10
_kefir_func_umul_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -96(%rbp)
    movq y@GOTPCREL(%rip), %r9
    movq (%r9), %rax
    movq %rax, -88(%rbp)
    movq 8(%r9), %rax
    movq %rax, -80(%rbp)
    movq 16(%r9), %rax
    movq %rax, -72(%rbp)
    movq %r9, -40(%rbp)
    movq %r10, -32(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    leaq -88(%rbp), %rax
    mov %rax, %rsi
    leaq -112(%rbp), %rax
    mov %rax, %rdx
    mov $150, %rcx
    mov $150, %r8
    call __kefir_bigint_unsigned_multiply
    movq -40(%rbp), %r9
    movq -32(%rbp), %r10
    movq -64(%rbp), %rax
    movq %rax, (%r9)
    movq -56(%rbp), %rax
    movq %rax, 8(%r9)
    movq -48(%rbp), %rax
    movq %rax, 16(%r9)
    mov %r10, %rax
    movq -64(%rbp), %rcx
    movq %rcx, (%rax)
    movq -56(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -48(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_umul_end:

lshift:
__kefir_text_func_lshift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_lshift_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -80(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -72(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -64(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -56(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -96(%rbp), %rsi
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rdx
    call __kefir_bigint_left_shift
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_lshift_end:

rshift:
__kefir_text_func_rshift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_rshift_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -80(%rbp)
    movq y@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -72(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -64(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -56(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -96(%rbp), %rsi
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rdx
    call __kefir_bigint_right_shift
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_rshift_end:

arshift:
__kefir_text_func_arshift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    mov %rdi, %r8
_kefir_func_arshift_label0:
    lea 16(%rbp), %rax
    movq (%rax), %rcx
    movq %rcx, -24(%rbp)
    movq 8(%rax), %rcx
    movq %rcx, -16(%rbp)
    movq 16(%rax), %rcx
    movq %rcx, -8(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -80(%rbp)
    movq x@GOTPCREL(%rip), %rcx
    movq (%rcx), %rax
    movq %rax, -72(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -64(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -56(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -96(%rbp), %rsi
    movq %rcx, -96(%rbp)
    movq %r8, -88(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rdx
    call __kefir_bigint_arithmetic_right_shift
    movq -96(%rbp), %rcx
    movq -88(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, (%rcx)
    movq -40(%rbp), %rax
    movq %rax, 8(%rcx)
    movq -32(%rbp), %rax
    movq %rax, 16(%rcx)
    mov %r8, %rax
    movq -48(%rbp), %rcx
    movq %rcx, (%rax)
    movq -40(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -32(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_arshift_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_is_zero:
__kefir_text_func___kefir_bigint_is_zero_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_is_zero_label0:
    movq %rsi, -56(%rbp)
    movq %rdi, -48(%rbp)
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label9
_kefir_func___kefir_bigint_is_zero_label1:
    movq -56(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -40(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -32(%rbp)
_kefir_func___kefir_bigint_is_zero_label2:
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label4
_kefir_func___kefir_bigint_is_zero_label3:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_is_zero_label4:
    movq -48(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movb %al, -24(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label8
_kefir_func___kefir_bigint_is_zero_label5:
    movb -24(%rbp), %al
    test %al, %al
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label7
_kefir_func___kefir_bigint_is_zero_label6:
    movq -32(%rbp), %rax
    add $1, %rax
    movq %rax, -32(%rbp)
    jmp _kefir_func___kefir_bigint_is_zero_label2
_kefir_func___kefir_bigint_is_zero_label7:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_is_zero_label8:
    movq -56(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -56(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -8(%rbp)
    movq -8(%rbp), %rcx
    mov $1, %rdx
    movsx %edx, %rax
    add %rax, %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -20(%rbp)
    movl -20(%rbp), %eax
    movb -24(%rbp), %cl
    and $255, %rcx
    and %eax, %ecx
    movb %cl, -24(%rbp)
    jmp _kefir_func___kefir_bigint_is_zero_label5
_kefir_func___kefir_bigint_is_zero_label9:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_is_zero_end:

__kefir_bigint_invert:
__kefir_text_func___kefir_bigint_invert_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
_kefir_func___kefir_bigint_invert_label0:
    movq %rsi, -32(%rbp)
    movq %rdi, -24(%rbp)
    movq -32(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_invert_label1:
    movq -8(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_invert_label3
_kefir_func___kefir_bigint_invert_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_invert_label3:
    movq -24(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -24(%rbp), %rcx
    movq -8(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    and $255, %rax
    not %eax
    movb %al, (%rcx)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_invert_label1
__kefir_text_func___kefir_bigint_invert_end:

__kefir_bigint_negate:
__kefir_text_func___kefir_bigint_negate_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func___kefir_bigint_negate_label0:
    movq %rsi, -16(%rbp)
    movq %rdi, -8(%rbp)
    movq -8(%rbp), %rdi
    movq -16(%rbp), %rsi
    call __kefir_bigint_invert
    movq -8(%rbp), %rdi
    movq -16(%rbp), %rdx
    mov $1, %rsi
    call __kefir_bigint_util_add_digit_zero_extended
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_negate_end:

__kefir_bigint_right_shift_whole_digits:
__kefir_text_func___kefir_bigint_right_shift_whole_digits_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_right_shift_whole_digits_label0:
    movq %rcx, -32(%rbp)
    movl %edx, -48(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -24(%rbp)
    movq -32(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movl -48(%rbp), %eax
    test %eax, %eax
    jz _kefir_func___kefir_bigint_right_shift_whole_digits_label15
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label1
_kefir_func___kefir_bigint_right_shift_whole_digits_label15:
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label14
_kefir_func___kefir_bigint_right_shift_whole_digits_label1:
    mov $0, %rax
    and $255, %rax
    not %eax
    leaq -44(%rbp), %rcx
_kefir_func___kefir_bigint_right_shift_whole_digits_label2:
    movb %al, (%rcx)
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_whole_digits_label10
_kefir_func___kefir_bigint_right_shift_whole_digits_label3:
    movl $0, -8(%rbp)
_kefir_func___kefir_bigint_right_shift_whole_digits_label4:
    movl -8(%rbp), %eax
    movq -16(%rbp), %rcx
    movq -40(%rbp), %rdx
    movabs $4294967295, %rsi
    and %rsi, %rax
    sub %rdx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_whole_digits_label9
_kefir_func___kefir_bigint_right_shift_whole_digits_label5:
    movl -8(%rbp), %eax
    movq -16(%rbp), %rcx
    movabs $4294967295, %rdx
    and %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_whole_digits_label8
_kefir_func___kefir_bigint_right_shift_whole_digits_label6:
_kefir_func___kefir_bigint_right_shift_whole_digits_label7:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_right_shift_whole_digits_label8:
    movb -44(%rbp), %al
    movq -24(%rbp), %rcx
    movl -8(%rbp), %edx
    movabs $4294967295, %rsi
    and %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -8(%rbp), %eax
    add $1, %eax
    movl %eax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label5
_kefir_func___kefir_bigint_right_shift_whole_digits_label9:
    movq -24(%rbp), %rax
    movl -8(%rbp), %ecx
    movq -40(%rbp), %rdx
    movabs $4294967295, %rsi
    and %rsi, %rcx
    add %rdx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -24(%rbp), %rcx
    movl -8(%rbp), %edx
    movabs $4294967295, %rsi
    and %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -8(%rbp), %eax
    add $1, %eax
    movl %eax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label4
_kefir_func___kefir_bigint_right_shift_whole_digits_label10:
    movl $0, -8(%rbp)
_kefir_func___kefir_bigint_right_shift_whole_digits_label11:
    movl -8(%rbp), %eax
    movq -16(%rbp), %rcx
    movabs $4294967295, %rdx
    and %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_whole_digits_label13
_kefir_func___kefir_bigint_right_shift_whole_digits_label12:
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label7
_kefir_func___kefir_bigint_right_shift_whole_digits_label13:
    movb -44(%rbp), %al
    movq -24(%rbp), %rcx
    movl -8(%rbp), %edx
    movabs $4294967295, %rsi
    and %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -8(%rbp), %eax
    add $1, %eax
    movl %eax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label11
_kefir_func___kefir_bigint_right_shift_whole_digits_label14:
    mov $0, %rax
    and $255, %rax
    leaq -44(%rbp), %rcx
    jmp _kefir_func___kefir_bigint_right_shift_whole_digits_label2
__kefir_text_func___kefir_bigint_right_shift_whole_digits_end:

__kefir_bigint_unsigned_divide:
__kefir_text_func___kefir_bigint_unsigned_divide_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
_kefir_func___kefir_bigint_unsigned_divide_label0:
    movq %r8, -64(%rbp)
    movq %rcx, -72(%rbp)
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -56(%rbp)
    movq -32(%rbp), %rdi
    movq -72(%rbp), %rsi
    call __kefir_bigint_zero
    movq -72(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_divide_label10
_kefir_func___kefir_bigint_unsigned_divide_label1:
    movq -48(%rbp), %rdi
    movq -64(%rbp), %rsi
    call __kefir_bigint_is_zero
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_divide_label9
_kefir_func___kefir_bigint_unsigned_divide_label2:
    movq -72(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -72(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -40(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_unsigned_divide_label3:
    movq -16(%rbp), %rax
    movq -72(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_divide_label5
_kefir_func___kefir_bigint_unsigned_divide_label4:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_divide_label5:
    movq -56(%rbp), %rax
    movq -24(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -40(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -4(%rbp)
    movq -32(%rbp), %rdi
    movq -72(%rbp), %rdx
    mov $1, %rax
    movsx %eax, %rsi
    call __kefir_bigint_left_shift
    movq -56(%rbp), %rdi
    movq -72(%rbp), %rdx
    mov $1, %rax
    movsx %eax, %rsi
    call __kefir_bigint_left_shift
    movl -4(%rbp), %eax
    movq -32(%rbp), %rcx
    mov $0, %rsi
    movsx %esi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    movq -32(%rbp), %rdi
    movq -48(%rbp), %rsi
    movq -72(%rbp), %rdx
    movq -64(%rbp), %rcx
    call __kefir_bigint_subtract_zero_extend
    movq -32(%rbp), %rax
    movq -24(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -40(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_divide_label8
_kefir_func___kefir_bigint_unsigned_divide_label6:
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %cl
    and $255, %rcx
    or $1, %ecx
    movb %cl, (%rax)
_kefir_func___kefir_bigint_unsigned_divide_label7:
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_divide_label3
_kefir_func___kefir_bigint_unsigned_divide_label8:
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %cl
    and $255, %rcx
    mov $1, %rdx
    and $255, %rdx
    not %edx
    and %edx, %ecx
    movb %cl, (%rax)
    movq -32(%rbp), %rdi
    movq -48(%rbp), %rsi
    movq -72(%rbp), %rdx
    movq -64(%rbp), %rcx
    call __kefir_bigint_add_zero_extend
    jmp _kefir_func___kefir_bigint_unsigned_divide_label7
_kefir_func___kefir_bigint_unsigned_divide_label9:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_divide_label10:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_unsigned_divide_end:

__kefir_bigint_or:
__kefir_text_func___kefir_bigint_or_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_or_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_or_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_or_label3
_kefir_func___kefir_bigint_or_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_or_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -8(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movl -8(%rbp), %eax
    movl -4(%rbp), %ecx
    movq -40(%rbp), %rdx
    movq -16(%rbp), %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    or %ecx, %eax
    movb %al, (%rdx)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_or_label1
__kefir_text_func___kefir_bigint_or_end:

__kefir_bigint_cast_signed:
__kefir_text_func___kefir_bigint_cast_signed_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func___kefir_bigint_cast_signed_label0:
    movq %rdx, -32(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -88(%rbp)
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -56(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label17
_kefir_func___kefir_bigint_cast_signed_label1:
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label13
_kefir_func___kefir_bigint_cast_signed_label2:
    movq -40(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -24(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -64(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -80(%rbp)
    movq -64(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    mov $0, %rcx
    cmp %rdx, %rax
    setb %cl
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label10
_kefir_func___kefir_bigint_cast_signed_label3:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_signed_label4:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label6
_kefir_func___kefir_bigint_cast_signed_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label6:
    movl -80(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label9
_kefir_func___kefir_bigint_cast_signed_label7:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
_kefir_func___kefir_bigint_cast_signed_label8:
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_signed_label4
_kefir_func___kefir_bigint_cast_signed_label9:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    mov $0, %rcx
    and $255, %rcx
    not %ecx
    movb %cl, (%rax)
    jmp _kefir_func___kefir_bigint_cast_signed_label8
_kefir_func___kefir_bigint_cast_signed_label10:
    movl -80(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label12
_kefir_func___kefir_bigint_cast_signed_label11:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label3
_kefir_func___kefir_bigint_cast_signed_label12:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label3
_kefir_func___kefir_bigint_cast_signed_label13:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_signed_label14:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label16
_kefir_func___kefir_bigint_cast_signed_label15:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label16:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_signed_label14
_kefir_func___kefir_bigint_cast_signed_label17:
    movq -88(%rbp), %rax
    movq -48(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -56(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label20
_kefir_func___kefir_bigint_cast_signed_label18:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
_kefir_func___kefir_bigint_cast_signed_label19:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label20:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label19
__kefir_text_func___kefir_bigint_cast_signed_end:

__kefir_bigint_subtract_zero_extend:
__kefir_text_func___kefir_bigint_subtract_zero_extend_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func___kefir_bigint_subtract_zero_extend_label0:
    movq %rcx, -72(%rbp)
    movq %rdx, -80(%rbp)
    movq %rsi, -56(%rbp)
    movq %rdi, -64(%rbp)
    movq -80(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -40(%rbp)
    movl $0, -88(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -32(%rbp)
_kefir_func___kefir_bigint_subtract_zero_extend_label1:
    movq -32(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_subtract_zero_extend_label3
_kefir_func___kefir_bigint_subtract_zero_extend_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_subtract_zero_extend_label3:
    movq -64(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -84(%rbp)
    movl $0, -24(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_subtract_zero_extend_label8
_kefir_func___kefir_bigint_subtract_zero_extend_label4:
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_subtract_zero_extend_label7
_kefir_func___kefir_bigint_subtract_zero_extend_label5:
    movl $0, -24(%rbp)
_kefir_func___kefir_bigint_subtract_zero_extend_label6:
    movl -84(%rbp), %eax
    movl -24(%rbp), %ecx
    movl -88(%rbp), %edx
    sub %ecx, %eax
    sub %edx, %eax
    movl %eax, -20(%rbp)
    movl -20(%rbp), %eax
    movq -64(%rbp), %rcx
    movq -32(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -20(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    and $1, %eax
    movl %eax, -88(%rbp)
    movq -32(%rbp), %rax
    add $1, %rax
    movq %rax, -32(%rbp)
    jmp _kefir_func___kefir_bigint_subtract_zero_extend_label1
_kefir_func___kefir_bigint_subtract_zero_extend_label7:
    movq -56(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -24(%rbp)
    movq -72(%rbp), %rcx
    movq -72(%rbp), %rax
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    mov $0, %rdx
    div %rsi
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    movq %rcx, -8(%rbp)
    movq -8(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -16(%rbp)
    movl -16(%rbp), %eax
    movl -24(%rbp), %ecx
    and %eax, %ecx
    movl %ecx, -24(%rbp)
    jmp _kefir_func___kefir_bigint_subtract_zero_extend_label6
_kefir_func___kefir_bigint_subtract_zero_extend_label8:
    movq -56(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -24(%rbp)
    jmp _kefir_func___kefir_bigint_subtract_zero_extend_label6
__kefir_text_func___kefir_bigint_subtract_zero_extend_end:

__kefir_bigint_right_shift:
__kefir_text_func___kefir_bigint_right_shift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_right_shift_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -56(%rbp)
    movq %rdi, -40(%rbp)
    movq -56(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_label9
_kefir_func___kefir_bigint_right_shift_label1:
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -56(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -48(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -32(%rbp)
    movq -32(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -64(%rbp)
    movl -64(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    movq -24(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_label8
_kefir_func___kefir_bigint_right_shift_label2:
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_label4
_kefir_func___kefir_bigint_right_shift_label3:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_right_shift_label4:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_right_shift_label5:
    movq -8(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_right_shift_label7
_kefir_func___kefir_bigint_right_shift_label6:
    movl -64(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rax
    movq -16(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rax
    movb (%rax), %dl
    shr %cl, %dl
    movb %dl, (%rax)
    jmp _kefir_func___kefir_bigint_right_shift_label3
_kefir_func___kefir_bigint_right_shift_label7:
    movq -40(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rdx
    movq -8(%rbp), %rsi
    mov $1, %r8
    movsx %r8d, %rdi
    add %rdi, %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    movb (%rdx), %dl
    movq -56(%rbp), %rsi
    movq -40(%rbp), %rdi
    movq -8(%rbp), %r8
    imul $1, %r8, %r8
    add %r8, %rdi
    and $255, %rax
    sar %cl, %eax
    and $255, %rdx
    mov $8, %rcx
    movsx %ecx, %r8
    mov $1, %rcx
    imul %r8, %rcx
    sub %rsi, %rcx
    shl %cl, %edx
    or %edx, %eax
    movb %al, (%rdi)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_label5
_kefir_func___kefir_bigint_right_shift_label8:
    movq -40(%rbp), %rdi
    movq -24(%rbp), %rsi
    movq -48(%rbp), %rcx
    mov $0, %rdx
    call __kefir_bigint_right_shift_whole_digits
    movq -24(%rbp), %rax
    movq -56(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    movq %rcx, -56(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_label2
_kefir_func___kefir_bigint_right_shift_label9:
    movq -48(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func___kefir_bigint_right_shift_label1
__kefir_text_func___kefir_bigint_right_shift_end:

__kefir_bigint_signed_divide:
__kefir_text_func___kefir_bigint_signed_divide_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_signed_divide_label0:
    movq %r8, -32(%rbp)
    movq %rcx, -40(%rbp)
    movq %rdx, -16(%rbp)
    movq %rsi, -8(%rbp)
    movq %rdi, -24(%rbp)
    movq -24(%rbp), %rdi
    movq -40(%rbp), %rsi
    call __kefir_bigint_get_sign
    movl %eax, -48(%rbp)
    movq -16(%rbp), %rdi
    movq -32(%rbp), %rsi
    call __kefir_bigint_get_sign
    movl %eax, -44(%rbp)
    movq -16(%rbp), %rdi
    movq -32(%rbp), %rsi
    call __kefir_bigint_is_zero
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_divide_label10
_kefir_func___kefir_bigint_signed_divide_label1:
    movl -48(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_divide_label9
_kefir_func___kefir_bigint_signed_divide_label2:
    movl -44(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_divide_label8
_kefir_func___kefir_bigint_signed_divide_label3:
    movq -24(%rbp), %rdi
    movq -8(%rbp), %rsi
    movq -16(%rbp), %rdx
    movq -40(%rbp), %rcx
    movq -32(%rbp), %r8
    call __kefir_bigint_unsigned_divide
    movl -48(%rbp), %eax
    movl -44(%rbp), %ecx
    xor %ecx, %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_divide_label7
_kefir_func___kefir_bigint_signed_divide_label4:
    movl -48(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_divide_label6
_kefir_func___kefir_bigint_signed_divide_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_divide_label6:
    movq -8(%rbp), %rdi
    movq -40(%rbp), %rsi
    call __kefir_bigint_negate
    jmp _kefir_func___kefir_bigint_signed_divide_label5
_kefir_func___kefir_bigint_signed_divide_label7:
    movq -24(%rbp), %rdi
    movq -40(%rbp), %rsi
    call __kefir_bigint_negate
    jmp _kefir_func___kefir_bigint_signed_divide_label4
_kefir_func___kefir_bigint_signed_divide_label8:
    movq -16(%rbp), %rdi
    movq -32(%rbp), %rsi
    call __kefir_bigint_negate
    jmp _kefir_func___kefir_bigint_signed_divide_label3
_kefir_func___kefir_bigint_signed_divide_label9:
    movq -24(%rbp), %rdi
    movq -40(%rbp), %rsi
    call __kefir_bigint_negate
    jmp _kefir_func___kefir_bigint_signed_divide_label2
_kefir_func___kefir_bigint_signed_divide_label10:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_signed_divide_end:

__kefir_bigint_arithmetic_right_shift:
__kefir_text_func___kefir_bigint_arithmetic_right_shift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
_kefir_func___kefir_bigint_arithmetic_right_shift_label0:
    movq %rdx, -64(%rbp)
    movq %rsi, -72(%rbp)
    movq %rdi, -56(%rbp)
    movq -64(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label20
_kefir_func___kefir_bigint_arithmetic_right_shift_label1:
    movq -72(%rbp), %rax
    movq -64(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label19
_kefir_func___kefir_bigint_arithmetic_right_shift_label2:
    movq -64(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -40(%rbp)
    movq -64(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -64(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -32(%rbp)
    movq -56(%rbp), %rax
    movq -24(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -32(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movsx %eax, %rax
    movq %rax, -80(%rbp)
    movq -80(%rbp), %rax
    test %rax, %rax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label18
_kefir_func___kefir_bigint_arithmetic_right_shift_label3:
    movq -32(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -16(%rbp)
    movl -16(%rbp), %eax
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
_kefir_func___kefir_bigint_arithmetic_right_shift_label4:
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -48(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label17
_kefir_func___kefir_bigint_arithmetic_right_shift_label5:
    movq -72(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label7
_kefir_func___kefir_bigint_arithmetic_right_shift_label6:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_arithmetic_right_shift_label7:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_arithmetic_right_shift_label8:
    movq -8(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label16
_kefir_func___kefir_bigint_arithmetic_right_shift_label9:
    movq -72(%rbp), %rcx
    movq -56(%rbp), %rax
    movq -40(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rax
    movb (%rax), %dl
    shr %cl, %dl
    movb %dl, (%rax)
    movq -32(%rbp), %rax
    movq -72(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label21
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label10
_kefir_func___kefir_bigint_arithmetic_right_shift_label21:
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label15
_kefir_func___kefir_bigint_arithmetic_right_shift_label10:
    movq -32(%rbp), %rax
    movq -72(%rbp), %rcx
    sub %rcx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    leaq -16(%rbp), %rcx
_kefir_func___kefir_bigint_arithmetic_right_shift_label11:
    movq %rax, (%rcx)
    movq -80(%rbp), %rax
    test %rax, %rax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_arithmetic_right_shift_label14
_kefir_func___kefir_bigint_arithmetic_right_shift_label12:
    movq -16(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
_kefir_func___kefir_bigint_arithmetic_right_shift_label13:
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label6
_kefir_func___kefir_bigint_arithmetic_right_shift_label14:
    movq -16(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label13
_kefir_func___kefir_bigint_arithmetic_right_shift_label15:
    mov $0, %rcx
    movsx %ecx, %rax
    leaq -16(%rbp), %rcx
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label11
_kefir_func___kefir_bigint_arithmetic_right_shift_label16:
    movq -56(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -72(%rbp), %rcx
    movq -56(%rbp), %rdx
    movq -8(%rbp), %rsi
    mov $1, %r8
    movsx %r8d, %rdi
    add %rdi, %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    movb (%rdx), %dl
    movq -72(%rbp), %rsi
    movq -56(%rbp), %rdi
    movq -8(%rbp), %r8
    imul $1, %r8, %r8
    add %r8, %rdi
    and $255, %rax
    sar %cl, %eax
    and $255, %rdx
    mov $8, %rcx
    movsx %ecx, %r8
    mov $1, %rcx
    imul %r8, %rcx
    sub %rsi, %rcx
    shl %cl, %edx
    or %edx, %eax
    movb %al, (%rdi)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label8
_kefir_func___kefir_bigint_arithmetic_right_shift_label17:
    movq -56(%rbp), %rdi
    movq -48(%rbp), %rsi
    movq -80(%rbp), %rdx
    movq -64(%rbp), %rcx
    call __kefir_bigint_right_shift_whole_digits
    movq -48(%rbp), %rax
    movq -72(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    movq %rcx, -72(%rbp)
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label5
_kefir_func___kefir_bigint_arithmetic_right_shift_label18:
    movq -32(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -16(%rbp)
    movl -16(%rbp), %eax
    movq -56(%rbp), %rcx
    movq -40(%rbp), %rdx
    mov $1, %rdi
    movsx %edi, %rsi
    sub %rsi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label4
_kefir_func___kefir_bigint_arithmetic_right_shift_label19:
    movq -64(%rbp), %rax
    movq %rax, -72(%rbp)
    jmp _kefir_func___kefir_bigint_arithmetic_right_shift_label2
_kefir_func___kefir_bigint_arithmetic_right_shift_label20:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_arithmetic_right_shift_end:

__kefir_bigint_left_shift:
__kefir_text_func___kefir_bigint_left_shift_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_left_shift_label0:
    movq %rdx, -40(%rbp)
    movq %rsi, -48(%rbp)
    movq %rdi, -32(%rbp)
    movq -48(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_label9
_kefir_func___kefir_bigint_left_shift_label1:
    movq -40(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_label8
_kefir_func___kefir_bigint_left_shift_label2:
    movq -48(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_label4
_kefir_func___kefir_bigint_left_shift_label3:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_left_shift_label4:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_left_shift_label5:
    movq -8(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_label7
_kefir_func___kefir_bigint_left_shift_label6:
    movq -48(%rbp), %rcx
    movq -32(%rbp), %rax
    mov $0, %rsi
    movsx %esi, %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rax
    movb (%rax), %dl
    shl %cl, %dl
    movb %dl, (%rax)
    jmp _kefir_func___kefir_bigint_left_shift_label3
_kefir_func___kefir_bigint_left_shift_label7:
    movq -32(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -48(%rbp), %rcx
    movq -32(%rbp), %rdx
    movq -8(%rbp), %rsi
    mov $1, %r8
    movsx %r8d, %rdi
    sub %rdi, %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    movb (%rdx), %dl
    movq -48(%rbp), %rsi
    movq -32(%rbp), %rdi
    movq -8(%rbp), %r8
    imul $1, %r8, %r8
    add %r8, %rdi
    and $255, %rax
    shl %cl, %eax
    and $255, %rdx
    mov $8, %rcx
    movsx %ecx, %r8
    mov $1, %rcx
    imul %r8, %rcx
    sub %rsi, %rcx
    sar %cl, %edx
    or %edx, %eax
    movb %al, (%rdi)
    movq -8(%rbp), %rax
    add $-1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_left_shift_label5
_kefir_func___kefir_bigint_left_shift_label8:
    movq -32(%rbp), %rdi
    movq -24(%rbp), %rsi
    movq -40(%rbp), %rdx
    call __kefir_bigint_left_shift_whole_digits
    movq -24(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    movq %rcx, -48(%rbp)
    jmp _kefir_func___kefir_bigint_left_shift_label2
_kefir_func___kefir_bigint_left_shift_label9:
    movq -40(%rbp), %rax
    movq %rax, -48(%rbp)
    jmp _kefir_func___kefir_bigint_left_shift_label1
__kefir_text_func___kefir_bigint_left_shift_end:

__kefir_bigint_zero:
__kefir_text_func___kefir_bigint_zero_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
_kefir_func___kefir_bigint_zero_label0:
    movq %rsi, -32(%rbp)
    movq %rdi, -24(%rbp)
    movq -32(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_zero_label1:
    movq -8(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_zero_label3
_kefir_func___kefir_bigint_zero_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_zero_label3:
    movq -24(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_zero_label1
__kefir_text_func___kefir_bigint_zero_end:

__kefir_bigint_add:
__kefir_text_func___kefir_bigint_add_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_add_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movl $0, -56(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_add_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_add_label3
_kefir_func___kefir_bigint_add_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_add_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -8(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movl -56(%rbp), %eax
    movl -8(%rbp), %ecx
    movl -4(%rbp), %edx
    add %ecx, %eax
    add %edx, %eax
    movl %eax, -52(%rbp)
    movl -52(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -52(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    movl %eax, -56(%rbp)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_add_label1
__kefir_text_func___kefir_bigint_add_end:

__kefir_bigint_and:
__kefir_text_func___kefir_bigint_and_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_and_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_and_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_and_label3
_kefir_func___kefir_bigint_and_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_and_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -8(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movl -8(%rbp), %eax
    movl -4(%rbp), %ecx
    movq -40(%rbp), %rdx
    movq -16(%rbp), %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    and %ecx, %eax
    movb %al, (%rdx)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_and_label1
__kefir_text_func___kefir_bigint_and_end:

__kefir_bigint_xor:
__kefir_text_func___kefir_bigint_xor_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_xor_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_xor_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_xor_label3
_kefir_func___kefir_bigint_xor_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_xor_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -8(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movl -8(%rbp), %eax
    movl -4(%rbp), %ecx
    movq -40(%rbp), %rdx
    movq -16(%rbp), %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    xor %ecx, %eax
    movb %al, (%rdx)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_xor_label1
__kefir_text_func___kefir_bigint_xor_end:

__kefir_bigint_get_sign:
__kefir_text_func___kefir_bigint_get_sign_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
_kefir_func___kefir_bigint_get_sign_label0:
    movq %rsi, -32(%rbp)
    movq %rdi, -24(%rbp)
    movq -32(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_get_sign_label2
_kefir_func___kefir_bigint_get_sign_label1:
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -8(%rbp)
    movq -24(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -8(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_get_sign_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_get_sign_end:

__kefir_bigint_subtract:
__kefir_text_func___kefir_bigint_subtract_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_subtract_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movl $0, -56(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_subtract_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_subtract_label3
_kefir_func___kefir_bigint_subtract_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_subtract_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -52(%rbp)
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -8(%rbp)
    movl -52(%rbp), %eax
    movl -8(%rbp), %ecx
    movl -56(%rbp), %edx
    sub %ecx, %eax
    sub %edx, %eax
    movl %eax, -4(%rbp)
    movl -4(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -4(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    and $1, %eax
    movl %eax, -56(%rbp)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_subtract_label1
__kefir_text_func___kefir_bigint_subtract_end:

__kefir_bigint_unsigned_multiply:
__kefir_text_func___kefir_bigint_unsigned_multiply_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
_kefir_func___kefir_bigint_unsigned_multiply_label0:
    movq %r8, -88(%rbp)
    movq %rcx, -56(%rbp)
    movq %rdx, -96(%rbp)
    movq %rsi, -104(%rbp)
    movq %rdi, -72(%rbp)
    movq -72(%rbp), %rdi
    movq -56(%rbp), %rsi
    call __kefir_bigint_zero
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label18
_kefir_func___kefir_bigint_unsigned_multiply_label1:
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label17
_kefir_func___kefir_bigint_unsigned_multiply_label2:
    movq -88(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -56(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -80(%rbp)
    movq -88(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movb %al, -108(%rbp)
    mov $8, %rcx
    movsx %ecx, %rax
    mov $1, %rcx
    imul %rax, %rcx
    mov $1, %rax
    shl %cl, %rax
    movl %eax, -112(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -40(%rbp)
_kefir_func___kefir_bigint_unsigned_multiply_label3:
    movq -40(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label5
_kefir_func___kefir_bigint_unsigned_multiply_label4:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_multiply_label5:
    movl $0, -32(%rbp)
    movq -96(%rbp), %rax
    movq -40(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movb %al, -107(%rbp)
    movq -40(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label16
_kefir_func___kefir_bigint_unsigned_multiply_label6:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_unsigned_multiply_label7:
    movq -16(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label11
_kefir_func___kefir_bigint_unsigned_multiply_label8:
    movq -40(%rbp), %rax
    movq -48(%rbp), %rcx
    add %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    movq -80(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label10
_kefir_func___kefir_bigint_unsigned_multiply_label9:
    movq -40(%rbp), %rax
    add $1, %rax
    movq %rax, -40(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label3
_kefir_func___kefir_bigint_unsigned_multiply_label10:
    movl -32(%rbp), %eax
    movq -72(%rbp), %rcx
    movq -24(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label9
_kefir_func___kefir_bigint_unsigned_multiply_label11:
    movq -16(%rbp), %rax
    movq -40(%rbp), %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
    movq -8(%rbp), %rax
    movq -80(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label15
_kefir_func___kefir_bigint_unsigned_multiply_label12:
    movq -104(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movb %al, -106(%rbp)
    movq -16(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_multiply_label14
_kefir_func___kefir_bigint_unsigned_multiply_label13:
    movq -72(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movl -32(%rbp), %ecx
    movb -106(%rbp), %dl
    movb -107(%rbp), %sil
    and $255, %rax
    add %ecx, %eax
    mov %rdx, %rcx
    and $255, %rcx
    and $255, %rsi
    imul %esi, %ecx
    add %ecx, %eax
    movl %eax, -28(%rbp)
    movl -28(%rbp), %eax
    movl -112(%rbp), %ecx
    movq -72(%rbp), %rdx
    movq -8(%rbp), %rsi
    imul $1, %rsi, %rsi
    mov %rdx, %rdi
    add %rsi, %rdi
    mov $0, %edx
    div %ecx
    movb %dl, (%rdi)
    movl -28(%rbp), %eax
    movl -112(%rbp), %ecx
    mov $0, %edx
    div %ecx
    movl %eax, -32(%rbp)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label7
_kefir_func___kefir_bigint_unsigned_multiply_label14:
    movb -108(%rbp), %al
    movb -106(%rbp), %cl
    and $255, %rcx
    and $255, %rax
    and %eax, %ecx
    movb %cl, -106(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label13
_kefir_func___kefir_bigint_unsigned_multiply_label15:
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label8
_kefir_func___kefir_bigint_unsigned_multiply_label16:
    movb -108(%rbp), %al
    movb -107(%rbp), %cl
    and $255, %rcx
    and $255, %rax
    and %eax, %ecx
    movb %cl, -107(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label6
_kefir_func___kefir_bigint_unsigned_multiply_label17:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_multiply_label18:
    movq -88(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    jmp _kefir_func___kefir_bigint_unsigned_multiply_label1
__kefir_text_func___kefir_bigint_unsigned_multiply_end:

__kefir_bigint_cast_unsigned:
__kefir_text_func___kefir_bigint_cast_unsigned_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
_kefir_func___kefir_bigint_cast_unsigned_label0:
    movq %rdx, -32(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -80(%rbp)
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -32(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -56(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label12
_kefir_func___kefir_bigint_cast_unsigned_label1:
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label8
_kefir_func___kefir_bigint_cast_unsigned_label2:
    movq -40(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -64(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    mov $0, %rcx
    cmp %rdx, %rax
    setb %cl
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label7
_kefir_func___kefir_bigint_cast_unsigned_label3:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label4:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label6
_kefir_func___kefir_bigint_cast_unsigned_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label6:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label4
_kefir_func___kefir_bigint_cast_unsigned_label7:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label3
_kefir_func___kefir_bigint_cast_unsigned_label8:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label9:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label11
_kefir_func___kefir_bigint_cast_unsigned_label10:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label11:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label9
_kefir_func___kefir_bigint_cast_unsigned_label12:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_cast_unsigned_end:

__kefir_bigint_add_zero_extend:
__kefir_text_func___kefir_bigint_add_zero_extend_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func___kefir_bigint_add_zero_extend_label0:
    movq %rcx, -72(%rbp)
    movq %rdx, -80(%rbp)
    movq %rsi, -56(%rbp)
    movq %rdi, -64(%rbp)
    movq -80(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -40(%rbp)
    movl $0, -88(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -32(%rbp)
_kefir_func___kefir_bigint_add_zero_extend_label1:
    movq -32(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_add_zero_extend_label3
_kefir_func___kefir_bigint_add_zero_extend_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_add_zero_extend_label3:
    movq -64(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -24(%rbp)
    movl $0, -20(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_add_zero_extend_label8
_kefir_func___kefir_bigint_add_zero_extend_label4:
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_add_zero_extend_label7
_kefir_func___kefir_bigint_add_zero_extend_label5:
    movl $0, -20(%rbp)
_kefir_func___kefir_bigint_add_zero_extend_label6:
    movl -88(%rbp), %eax
    movl -24(%rbp), %ecx
    movl -20(%rbp), %edx
    add %ecx, %eax
    add %edx, %eax
    movl %eax, -84(%rbp)
    movl -84(%rbp), %eax
    movq -64(%rbp), %rcx
    movq -32(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -84(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    movl %eax, -88(%rbp)
    movq -32(%rbp), %rax
    add $1, %rax
    movq %rax, -32(%rbp)
    jmp _kefir_func___kefir_bigint_add_zero_extend_label1
_kefir_func___kefir_bigint_add_zero_extend_label7:
    movq -56(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -20(%rbp)
    movq -72(%rbp), %rcx
    movq -72(%rbp), %rax
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    mov $0, %rdx
    div %rsi
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    movq %rcx, -8(%rbp)
    movq -8(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -16(%rbp)
    movl -16(%rbp), %eax
    movl -20(%rbp), %ecx
    and %eax, %ecx
    movl %ecx, -20(%rbp)
    jmp _kefir_func___kefir_bigint_add_zero_extend_label6
_kefir_func___kefir_bigint_add_zero_extend_label8:
    movq -56(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -20(%rbp)
    jmp _kefir_func___kefir_bigint_add_zero_extend_label6
__kefir_text_func___kefir_bigint_add_zero_extend_end:

__kefir_bigint_util_add_digit_zero_extended:
__kefir_text_func___kefir_bigint_util_add_digit_zero_extended_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label0:
    movq %rdx, -48(%rbp)
    movb %sil, -52(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movl $0, -32(%rbp)
    movl $0, -56(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_util_add_digit_zero_extended_label3
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movq -16(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    jz _kefir_func___kefir_bigint_util_add_digit_zero_extended_label7
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label4
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label7:
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label6
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label4:
    movb -52(%rbp), %al
    and $255, %rax
    leaq -28(%rbp), %rcx
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label5:
    movl %eax, (%rcx)
    movl -56(%rbp), %eax
    movl -4(%rbp), %ecx
    movl -28(%rbp), %edx
    add %ecx, %eax
    add %edx, %eax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -8(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    movl %eax, -56(%rbp)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label1
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label6:
    movl -32(%rbp), %eax
    leaq -28(%rbp), %rcx
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label5
__kefir_text_func___kefir_bigint_util_add_digit_zero_extended_end:

__kefir_bigint_left_shift_whole_digits:
__kefir_text_func___kefir_bigint_left_shift_whole_digits_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_left_shift_whole_digits_label0:
    movq %rdx, -40(%rbp)
    movq %rsi, -48(%rbp)
    movq %rdi, -32(%rbp)
    movq -40(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_left_shift_whole_digits_label1:
    movq -16(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_whole_digits_label6
_kefir_func___kefir_bigint_left_shift_whole_digits_label2:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_left_shift_whole_digits_label3:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_left_shift_whole_digits_label5
_kefir_func___kefir_bigint_left_shift_whole_digits_label4:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_left_shift_whole_digits_label5:
    movq -32(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_left_shift_whole_digits_label3
_kefir_func___kefir_bigint_left_shift_whole_digits_label6:
    movq -32(%rbp), %rax
    movq -16(%rbp), %rcx
    movq -48(%rbp), %rdx
    sub %rdx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -32(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movq -16(%rbp), %rax
    add $-1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_left_shift_whole_digits_label1
__kefir_text_func___kefir_bigint_left_shift_whole_digits_end:

__kefir_bigint_signed_multiply:
__kefir_text_func___kefir_bigint_signed_multiply_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func___kefir_bigint_signed_multiply_label0:
    movq %r9, -64(%rbp)
    movq %r8, -40(%rbp)
    movq %rcx, -80(%rbp)
    movq %rdx, -88(%rbp)
    movq %rsi, -32(%rbp)
    movq %rdi, -56(%rbp)
    movq -56(%rbp), %rdi
    movq -40(%rbp), %rsi
    call __kefir_bigint_zero
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_multiply_label15
_kefir_func___kefir_bigint_signed_multiply_label1:
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_multiply_label14
_kefir_func___kefir_bigint_signed_multiply_label2:
    movq -64(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movq -64(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -32(%rbp), %rdi
    movq -64(%rbp), %rsi
    call __kefir_bigint_zero
    movl $0, -48(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_signed_multiply_label3:
    movq -16(%rbp), %rax
    movq -64(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_multiply_label5
_kefir_func___kefir_bigint_signed_multiply_label4:
    movq -56(%rbp), %rdi
    movq -32(%rbp), %rsi
    movq -64(%rbp), %rdx
    call __kefir_bigint_or
    movq -56(%rbp), %rdi
    movq -64(%rbp), %rsi
    movq -40(%rbp), %rdx
    call __kefir_bigint_left_shift
    movq -56(%rbp), %rdi
    movq -88(%rbp), %rsi
    movq -64(%rbp), %rdx
    call __kefir_bigint_or
    movq -56(%rbp), %rdi
    movq -64(%rbp), %rsi
    movq -40(%rbp), %rdx
    mov $2, %rcx
    movsx %ecx, %rax
    imul %rax, %rsi
    call __kefir_bigint_cast_signed
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_multiply_label5:
    movq -88(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    and $1, %eax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    test %eax, %eax
    setne %al
    movzx %al, %rax
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func___kefir_bigint_signed_multiply_label13
_kefir_func___kefir_bigint_signed_multiply_label6:
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_multiply_label12
_kefir_func___kefir_bigint_signed_multiply_label7:
    movl -8(%rbp), %eax
    mov $0, %rcx
    test %eax, %eax
    sete %cl
    mov %rcx, %rax
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func___kefir_bigint_signed_multiply_label11
_kefir_func___kefir_bigint_signed_multiply_label8:
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_multiply_label10
_kefir_func___kefir_bigint_signed_multiply_label9:
    movl -8(%rbp), %eax
    movl %eax, -48(%rbp)
    movq -32(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    and $1, %eax
    movl %eax, -44(%rbp)
    movq -32(%rbp), %rdi
    movq -64(%rbp), %rdx
    mov $1, %rax
    movsx %eax, %rsi
    call __kefir_bigint_arithmetic_right_shift
    movq -88(%rbp), %rdi
    movq -64(%rbp), %rdx
    mov $1, %rax
    movsx %eax, %rsi
    call __kefir_bigint_right_shift
    movl -44(%rbp), %eax
    movq -72(%rbp), %rcx
    movq -88(%rbp), %rdx
    movq -24(%rbp), %rsi
    imul $1, %rsi, %rsi
    add %rsi, %rdx
    movb (%rdx), %sil
    and $255, %rsi
    shl %cl, %eax
    or %eax, %esi
    movb %sil, (%rdx)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_signed_multiply_label3
_kefir_func___kefir_bigint_signed_multiply_label10:
    movq -32(%rbp), %rdi
    movq -80(%rbp), %rsi
    movq -64(%rbp), %rdx
    call __kefir_bigint_add
    jmp _kefir_func___kefir_bigint_signed_multiply_label9
_kefir_func___kefir_bigint_signed_multiply_label11:
    movl -48(%rbp), %eax
    test %eax, %eax
    setne %al
    movzx %al, %rax
    jmp _kefir_func___kefir_bigint_signed_multiply_label8
_kefir_func___kefir_bigint_signed_multiply_label12:
    movq -32(%rbp), %rdi
    movq -80(%rbp), %rsi
    movq -64(%rbp), %rdx
    call __kefir_bigint_subtract
    jmp _kefir_func___kefir_bigint_signed_multiply_label9
_kefir_func___kefir_bigint_signed_multiply_label13:
    movl -48(%rbp), %eax
    mov $0, %rcx
    test %eax, %eax
    sete %cl
    mov %rcx, %rax
    jmp _kefir_func___kefir_bigint_signed_multiply_label6
_kefir_func___kefir_bigint_signed_multiply_label14:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_multiply_label15:
    movq -64(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    jmp _kefir_func___kefir_bigint_signed_multiply_label1
__kefir_text_func___kefir_bigint_signed_multiply_end:


