.att_syntax
.section .note.GNU-stack,"",%progbits

.global sum_progression
.extern sum10
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint

.section .text
sum_progression:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    push %r12
    push %r13
    push %r14
    sub $544, %rsp
    fstcw -40(%rbp)
_kefir_func_sum_progression_label0:
    lea 16(%rbp), %rax
    lea 32(%rbp), %rcx
_kefir_func_sum_progression_label1:
    lea -544(%rbp), %rdx
    fldt (%rcx)
    fstpt (%rdx)
    lea -560(%rbp), %rcx
    fldt (%rax)
    fstpt (%rcx)
    lea -560(%rbp), %rax
    lea -560(%rbp), %rcx
    lea -544(%rbp), %rdx
    lea -192(%rbp), %rsi
    fldt (%rdx)
    fldt (%rcx)
    faddp
    fstpt (%rsi)
    lea -560(%rbp), %rcx
    mov $2, %rdx
    lea -176(%rbp), %rdi
    push %rdx
    fildq (%rsp)
    add $8, %rsp
    fstpt (%rdi)
    lea -544(%rbp), %rdx
    lea -176(%rbp), %r8
    fldt (%rdx)
    fldt (%rdi)
    fmulp
    fstpt (%r8)
    lea -160(%rbp), %rdx
    fldt (%r8)
    fldt (%rcx)
    faddp
    fstpt (%rdx)
    lea -560(%rbp), %rcx
    mov $3, %rdi
    lea -144(%rbp), %r8
    push %rdi
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r8)
    lea -544(%rbp), %rdi
    lea -144(%rbp), %r9
    fldt (%rdi)
    fldt (%r8)
    fmulp
    fstpt (%r9)
    lea -128(%rbp), %rdi
    fldt (%r9)
    fldt (%rcx)
    faddp
    fstpt (%rdi)
    lea -560(%rbp), %rcx
    mov $4, %r8
    lea -112(%rbp), %r9
    push %r8
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r9)
    lea -544(%rbp), %r8
    lea -112(%rbp), %r10
    fldt (%r8)
    fldt (%r9)
    fmulp
    fstpt (%r10)
    lea -96(%rbp), %r8
    fldt (%r10)
    fldt (%rcx)
    faddp
    fstpt (%r8)
    lea -560(%rbp), %rcx
    mov $5, %r9
    lea -80(%rbp), %r10
    push %r9
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r10)
    lea -544(%rbp), %r9
    lea -80(%rbp), %r11
    fldt (%r9)
    fldt (%r10)
    fmulp
    fstpt (%r11)
    lea -64(%rbp), %r9
    fldt (%r11)
    fldt (%rcx)
    faddp
    fstpt (%r9)
    lea -560(%rbp), %rcx
    mov $6, %r10
    lea -528(%rbp), %r11
    push %r10
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r11)
    lea -544(%rbp), %r10
    lea -528(%rbp), %rbx
    fldt (%r10)
    fldt (%r11)
    fmulp
    fstpt (%rbx)
    lea -512(%rbp), %r10
    fldt (%rbx)
    fldt (%rcx)
    faddp
    fstpt (%r10)
    lea -560(%rbp), %rcx
    mov $7, %r11
    lea -496(%rbp), %rbx
    push %r11
    fildq (%rsp)
    add $8, %rsp
    fstpt (%rbx)
    lea -544(%rbp), %r11
    lea -496(%rbp), %r12
    fldt (%r11)
    fldt (%rbx)
    fmulp
    fstpt (%r12)
    lea -480(%rbp), %r11
    fldt (%r12)
    fldt (%rcx)
    faddp
    fstpt (%r11)
    lea -560(%rbp), %rcx
    mov $8, %rbx
    lea -464(%rbp), %r12
    push %rbx
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r12)
    lea -544(%rbp), %rbx
    lea -464(%rbp), %r13
    fldt (%rbx)
    fldt (%r12)
    fmulp
    fstpt (%r13)
    lea -448(%rbp), %rbx
    fldt (%r13)
    fldt (%rcx)
    faddp
    fstpt (%rbx)
    lea -560(%rbp), %rcx
    mov $9, %r12
    lea -432(%rbp), %r13
    push %r12
    fildq (%rsp)
    add $8, %rsp
    fstpt (%r13)
    lea -544(%rbp), %r12
    lea -432(%rbp), %r14
    fldt (%r12)
    fldt (%r13)
    fmulp
    fstpt (%r14)
    lea -416(%rbp), %r12
    fldt (%r14)
    fldt (%rcx)
    faddp
    fstpt (%r12)
    sub $160, %rsp
    fldt (%rax)
    fstpt (%rsp)
    fldt (%rsi)
    fstpt 16(%rsp)
    fldt (%rdx)
    fstpt 32(%rsp)
    fldt (%rdi)
    fstpt 48(%rsp)
    fldt (%r8)
    fstpt 64(%rsp)
    fldt (%r9)
    fstpt 80(%rsp)
    fldt (%r10)
    fstpt 96(%rsp)
    fldt (%r11)
    fstpt 112(%rsp)
    fldt (%rbx)
    fstpt 128(%rsp)
    fldt (%r12)
    fstpt 144(%rsp)
    call sum10@PLT
    fstpt -576(%rbp)
    lea -576(%rbp), %rax
    add $160, %rsp
    lea -240(%rbp), %rdx
    mov %rdx, %rdi
    mov %rax, %rsi
    mov $16, %rcx
    rep movsb
    fldt (%rdx)
    fldcw -40(%rbp)
    lea -32(%rbp), %rsp
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret


