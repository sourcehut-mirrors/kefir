.att_syntax
.section .note.GNU-stack,"",%progbits

.global sum_progression
.extern sum10
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint

.section .text
sum_progression:
    push %rbp
    mov %rsp, %rbp
    sub $304, %rsp
    fstcw -8(%rbp)
_kefir_func_sum_progression_label0:
    lea 16(%rbp), %rax
    lea 32(%rbp), %rcx
_kefir_func_sum_progression_label1:
    lea -80(%rbp), %rdx
    fldt (%rcx)
    fstpt (%rdx)
    lea -96(%rbp), %rcx
    fldt (%rax)
    fstpt (%rcx)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -288(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -272(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -256(%rbp)
    fldt -256(%rbp)
    fldt -272(%rbp)
    faddp
    fstpt -272(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -256(%rbp)
    mov $2, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -240(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -224(%rbp)
    fldt -224(%rbp)
    fldt -240(%rbp)
    fmulp
    fstpt -240(%rbp)
    fldt -240(%rbp)
    fldt -256(%rbp)
    faddp
    fstpt -256(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -240(%rbp)
    mov $3, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -224(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -208(%rbp)
    fldt -208(%rbp)
    fldt -224(%rbp)
    fmulp
    fstpt -224(%rbp)
    fldt -224(%rbp)
    fldt -240(%rbp)
    faddp
    fstpt -240(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -224(%rbp)
    mov $4, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -208(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -192(%rbp)
    fldt -192(%rbp)
    fldt -208(%rbp)
    fmulp
    fstpt -208(%rbp)
    fldt -208(%rbp)
    fldt -224(%rbp)
    faddp
    fstpt -224(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -208(%rbp)
    mov $5, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -192(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -176(%rbp)
    fldt -176(%rbp)
    fldt -192(%rbp)
    fmulp
    fstpt -192(%rbp)
    fldt -192(%rbp)
    fldt -208(%rbp)
    faddp
    fstpt -208(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -192(%rbp)
    mov $6, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -176(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -160(%rbp)
    fldt -160(%rbp)
    fldt -176(%rbp)
    fmulp
    fstpt -176(%rbp)
    fldt -176(%rbp)
    fldt -192(%rbp)
    faddp
    fstpt -192(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -176(%rbp)
    mov $7, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -160(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -144(%rbp)
    fldt -144(%rbp)
    fldt -160(%rbp)
    fmulp
    fstpt -160(%rbp)
    fldt -160(%rbp)
    fldt -176(%rbp)
    faddp
    fstpt -176(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -160(%rbp)
    mov $8, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -144(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -128(%rbp)
    fldt -128(%rbp)
    fldt -144(%rbp)
    fmulp
    fstpt -144(%rbp)
    fldt -144(%rbp)
    fldt -160(%rbp)
    faddp
    fstpt -160(%rbp)
    lea -96(%rbp), %rax
    fldt (%rax)
    fstpt -144(%rbp)
    mov $9, %rax
    push %rax
    fildq (%rsp)
    add $8, %rsp
    fstpt -128(%rbp)
    lea -80(%rbp), %rax
    fldt (%rax)
    fstpt -112(%rbp)
    fldt -112(%rbp)
    fldt -128(%rbp)
    fmulp
    fstpt -128(%rbp)
    fldt -128(%rbp)
    fldt -144(%rbp)
    faddp
    fstpt -144(%rbp)
    sub $160, %rsp
    fldt -288(%rbp)
    fstpt (%rsp)
    fldt -272(%rbp)
    fstpt 16(%rsp)
    fldt -256(%rbp)
    fstpt 32(%rsp)
    fldt -240(%rbp)
    fstpt 48(%rsp)
    fldt -224(%rbp)
    fstpt 64(%rsp)
    fldt -208(%rbp)
    fstpt 80(%rsp)
    fldt -192(%rbp)
    fstpt 96(%rsp)
    fldt -176(%rbp)
    fstpt 112(%rsp)
    fldt -160(%rbp)
    fstpt 128(%rsp)
    fldt -144(%rbp)
    fstpt 144(%rsp)
    call sum10@PLT
    fstpt -304(%rbp)
    lea -304(%rbp), %rax
    add $160, %rsp
    lea -48(%rbp), %rdx
    mov %rdx, %rdi
    mov %rax, %rsi
    mov $16, %rcx
    rep movsb
    fldt (%rdx)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret


