.att_syntax
.section .note.GNU-stack,"",%progbits

.global test1
.type test1, @function
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
test1:
__kefir_text_func_test1_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    push %r12
    push %r13
    push %r14
    sub $32, %rsp
    stmxcsr -40(%rbp)
_kefir_func_test1_label0:
_kefir_func_test1_label1:
    movq %xmm0, -56(%rbp)
    movq %rdi, -48(%rbp)
    movq -48(%rbp), %rax
    movq -56(%rbp), %rcx
    movq -48(%rbp), %rdx
    mov $1, %rsi
    movsx %esi, %rsi
    add %rsi, %rdx
    movq -56(%rbp), %rsi
    mov $1, %rdi
    movsx %edi, %rdi
    cvtsi2sd %rdi, %xmm0
    movq %rsi, %xmm1
    addsd %xmm0, %xmm1
    movq -48(%rbp), %rsi
    cvtsi2sd %rsi, %xmm0
    movq -56(%rbp), %rsi
    movq %rsi, %xmm2
    addsd %xmm2, %xmm0
    movq -48(%rbp), %rsi
    cvtsi2sd %rsi, %xmm2
    movq -56(%rbp), %rsi
    movq %rsi, %xmm3
    mulsd %xmm3, %xmm2
    movq -48(%rbp), %rsi
    cvtsi2sd %rsi, %xmm3
    movq -56(%rbp), %rsi
    movq %rsi, %xmm4
    divsd %xmm4, %xmm3
    movq -48(%rbp), %rsi
    neg %rsi
    cvtsi2sd %rsi, %xmm4
    movq -56(%rbp), %rsi
    movq %rsi, %xmm5
    subsd %xmm5, %xmm4
    movq -48(%rbp), %rsi
    neg %rsi
    cvtsi2sd %rsi, %xmm5
    movq -56(%rbp), %rsi
    movq %rsi, %xmm6
    divsd %xmm6, %xmm5
    movq -48(%rbp), %r11
    mov %r11, %rsi
    add $1, %rsi
    movq %rsi, -48(%rbp)
    movq -56(%rbp), %rbx
    movq _kefir_func_test1_label2(%rip), %xmm6
    movq %rbx, %xmm7
    addsd %xmm6, %xmm7
    movq %xmm7, -56(%rbp)
    mov %rax, %rsi
    mov %rcx, %rdi
    mov %rdx, %r8
    movq %xmm1, %r9
    movq %xmm0, %r10
    movq %xmm2, %r12
    movq %xmm3, %r14
    movq %xmm4, %xmm1
    movq %xmm5, %xmm2
    movq %r11, %xmm4
    movq %rbx, %xmm5
# %rsi, %rdi, %r8, %r9, %r10, %r12, %r14, %xmm1, %xmm2, %xmm4, %xmm5
    ldmxcsr -40(%rbp)
    lea -32(%rbp), %rsp
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
__kefir_text_func_test1_end:
.section .rodata
    .align 8
_kefir_func_test1_label2:
    .quad 4607182418800017408
.section .text

__kefir_text_section_end:

