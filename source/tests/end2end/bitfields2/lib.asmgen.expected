.att_syntax
.section .note.GNU-stack,"",%progbits

.global get_a
.global get_b
.global get_c
.global get_d
.global get_e
.global get_f
.global get_g
.global get_h
.global set_a
.global set_b
.global set_c
.global set_d
.global set_e
.global set_f
.global set_g
.global set_h
.extern s
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
get_a:
    movq s@GOTPCREL(%rip), %rax
    movzxb (%rax), %rax
    shl $57, %rax
    sar $57, %rax
    ret

get_b:
    movq s@GOTPCREL(%rip), %rax
    add $1, %rax
    movzxw (%rax), %rax
    shl $49, %rax
    sar $49, %rax
    ret

get_c:
    movq s@GOTPCREL(%rip), %rax
    add $3, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $5, %rcx
    movzxb (%rcx), %rcx
    shl $16, %rcx
    movzxw (%rax), %rax
    or %rax, %rcx
    shl $41, %rcx
    sar $41, %rcx
    mov %rcx, %rax
    ret

get_d:
    movq s@GOTPCREL(%rip), %rax
    add $8, %rax
    movl (%rax), %eax
    shl $33, %rax
    sar $33, %rax
    ret

get_e:
    movq s@GOTPCREL(%rip), %rax
    add $16, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $20, %rcx
    movzxb (%rcx), %rcx
    shl $32, %rcx
    movl (%rax), %eax
    or %rax, %rcx
    shl $25, %rcx
    sar $25, %rcx
    mov %rcx, %rax
    ret

get_f:
    movq s@GOTPCREL(%rip), %rax
    add $24, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $28, %rcx
    movzxw (%rcx), %rcx
    shl $32, %rcx
    movl (%rax), %eax
    or %rax, %rcx
    shl $17, %rcx
    sar $17, %rcx
    mov %rcx, %rax
    ret

get_g:
    movq s@GOTPCREL(%rip), %rax
    add $32, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $38, %rcx
    movzxb (%rcx), %rcx
    shl $48, %rcx
    movq s@GOTPCREL(%rip), %rdx
    add $36, %rdx
    movzxw (%rdx), %rdx
    shl $32, %rdx
    movl (%rax), %eax
    or %rax, %rdx
    or %rdx, %rcx
    shl $9, %rcx
    sar $9, %rcx
    mov %rcx, %rax
    ret

get_h:
    movq s@GOTPCREL(%rip), %rax
    add $40, %rax
    movq (%rax), %rax
    shl $1, %rax
    sar $1, %rax
    ret

set_a:
    movq s@GOTPCREL(%rip), %rax
    movzxb (%rax), %rax
    movabs $18446744073709551488, %rcx
    and %rax, %rcx
    shl $57, %rdi
    shr $57, %rdi
    or %rcx, %rdi
    movq s@GOTPCREL(%rip), %rax
    movb %dil, (%rax)
    ret

set_b:
    movq s@GOTPCREL(%rip), %rax
    add $1, %rax
    movzxw (%rax), %rax
    movabs $18446744073709518848, %rcx
    and %rax, %rcx
    shl $49, %rdi
    shr $49, %rdi
    or %rcx, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $1, %rax
    movw %di, (%rax)
    ret

set_c:
    movq s@GOTPCREL(%rip), %rax
    add $3, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $5, %rcx
    movzxb (%rcx), %rcx
    shl $16, %rcx
    movzxw (%rax), %rax
    or %rax, %rcx
    movabs $18446744073701163008, %rax
    and %rcx, %rax
    shl $41, %rdi
    shr $41, %rdi
    or %rax, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $3, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $5, %rcx
    mov %rdi, %rdx
    shr $16, %rdx
    movb %dl, (%rcx)
    movw %di, (%rax)
    ret

set_d:
    movq s@GOTPCREL(%rip), %rax
    add $8, %rax
    movl (%rax), %eax
    movabs $18446744071562067968, %rcx
    and %rax, %rcx
    shl $33, %rdi
    shr $33, %rdi
    or %rcx, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $8, %rax
    movl %edi, (%rax)
    ret

set_e:
    movq s@GOTPCREL(%rip), %rax
    add $16, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $20, %rcx
    movzxb (%rcx), %rcx
    shl $32, %rcx
    movl (%rax), %eax
    or %rax, %rcx
    movabs $18446743523953737728, %rax
    and %rcx, %rax
    shl $25, %rdi
    shr $25, %rdi
    or %rax, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $16, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $20, %rcx
    mov %rdi, %rdx
    shr $32, %rdx
    movb %dl, (%rcx)
    movl %edi, (%rax)
    ret

set_f:
    movq s@GOTPCREL(%rip), %rax
    add $24, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $28, %rcx
    movzxw (%rcx), %rcx
    shl $32, %rcx
    movl (%rax), %eax
    or %rax, %rcx
    movabs $18446603336221196288, %rax
    and %rcx, %rax
    shl $17, %rdi
    shr $17, %rdi
    or %rax, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $24, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $28, %rcx
    mov %rdi, %rdx
    shr $32, %rdx
    movw %dx, (%rcx)
    movl %edi, (%rax)
    ret

set_g:
    movq s@GOTPCREL(%rip), %rax
    add $32, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $38, %rcx
    movzxb (%rcx), %rcx
    shl $48, %rcx
    movq s@GOTPCREL(%rip), %rdx
    add $36, %rdx
    movzxw (%rdx), %rdx
    shl $32, %rdx
    movl (%rax), %eax
    or %rax, %rdx
    or %rdx, %rcx
    movabs $18410715276690587648, %rax
    and %rcx, %rax
    shl $9, %rdi
    shr $9, %rdi
    or %rax, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $32, %rax
    movq s@GOTPCREL(%rip), %rcx
    add $38, %rcx
    mov %rdi, %rdx
    shr $48, %rdx
    movb %dl, (%rcx)
    movq s@GOTPCREL(%rip), %rcx
    add $36, %rcx
    mov %rdi, %rdx
    shr $32, %rdx
    movw %dx, (%rcx)
    movl %edi, (%rax)
    ret

set_h:
    movq s@GOTPCREL(%rip), %rax
    add $40, %rax
    movq (%rax), %rax
    movabs $9223372036854775808, %rcx
    and %rax, %rcx
    shl $1, %rdi
    shr $1, %rdi
    or %rcx, %rdi
    movq s@GOTPCREL(%rip), %rax
    add $40, %rax
    movq %rdi, (%rax)
    ret


