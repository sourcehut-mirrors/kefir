.att_syntax
.section .note.GNU-stack,"",%progbits

.extern getlarge
.extern getsmall
.extern my_memcmp
.global testlarge
.type testlarge, @function
.global testsmall
.type testsmall, @function
.global testlarge2
.type testlarge2, @function

.section .text
__kefir_text_section_begin:
testlarge:
__kefir_text_func_testlarge_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    sub $520, %rsp
    mov %rdi, %rax
    leaq -520(%rbp), %rbx
    movq %rax, -528(%rbp)
    mov %rax, %rsi
    mov %rbx, %rdi
    call getlarge@PLT
    movq -528(%rbp), %rax
    movsx %eax, %rax
    imul $4, %rax, %rax
    add %rax, %rbx
    movl (%rbx), %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
__kefir_text_func_testlarge_end:

testsmall:
__kefir_text_func_testsmall_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    sub $56, %rsp
    stmxcsr -16(%rbp)
    mov %rdi, %rcx
    leaq -48(%rbp), %rbx
    movq %rcx, -64(%rbp)
    mov %rcx, %rdi
    call getsmall@PLT
    movq %rax, (%rbx)
    movq %xmm0, 8(%rbx)
    movq -64(%rbp), %rcx
    movq (%rbx), %rdx
    leaq -32(%rbp), %rbx
    movq %rdx, -64(%rbp)
    mov %rcx, %rdi
    call getsmall@PLT
    movq %rax, (%rbx)
    movq %xmm0, 8(%rbx)
    movq -64(%rbp), %rdx
    add $8, %rbx
    movl (%rbx), %eax
    cvtsi2ss %rdx, %xmm0
    movd %eax, %xmm1
    addss %xmm1, %xmm0
    ldmxcsr -16(%rbp)
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
__kefir_text_func_testsmall_end:

testlarge2:
__kefir_text_func_testlarge2_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    sub $1032, %rsp
    mov %rsi, %rax
    leaq -1032(%rbp), %rbx
    movq %rax, -1040(%rbp)
    mov %rdi, %rsi
    mov %rbx, %rdi
    call getlarge@PLT
    movq -1040(%rbp), %rax
    leaq -520(%rbp), %rbx
    mov %rax, %rsi
    mov %rbx, %rdi
    call getlarge@PLT
    leaq -1032(%rbp), %rdi
    leaq -520(%rbp), %rsi
    mov $512, %rdx
    call my_memcmp@PLT
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
__kefir_text_func_testlarge2_end:

__kefir_text_section_end:

