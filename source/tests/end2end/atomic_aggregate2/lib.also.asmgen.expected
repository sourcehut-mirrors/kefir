.att_syntax
.section .note.GNU-stack,"",%progbits

.global load_buffer
.type load_buffer, @function
.global store_buffer
.type store_buffer, @function
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
load_buffer:
__kefir_text_func_load_buffer_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    movq %rdi, -80(%rbp)
    lea -64(%rbp), %r8
    movq %r8, -72(%rbp)
    mov %r8, %rdx
    mov $64, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -72(%rbp), %r8
    movq -80(%rbp), %rax
    movdqu (%r8), %xmm0
    movdqu %xmm0, (%rax)
    movdqu 16(%r8), %xmm0
    movdqu %xmm0, 16(%rax)
    movdqu 32(%r8), %xmm0
    movdqu %xmm0, 32(%rax)
    movdqu 48(%r8), %xmm0
    movdqu %xmm0, 48(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_load_buffer_end:

store_buffer:
__kefir_text_func_store_buffer_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rsi, %rax
    mov %rdi, %rsi
    mov %rax, %rdx
    mov $64, %rdi
    mov $5, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_store_buffer_end:

__kefir_text_section_end:

