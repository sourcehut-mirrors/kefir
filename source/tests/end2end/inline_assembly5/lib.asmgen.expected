.att_syntax
.section .note.GNU-stack,"",%progbits

.global set8
.type set8, @function
.global set16
.type set16, @function
.global set32
.type set32, @function
.global set64
.type set64, @function
.global clear8
.type clear8, @function
.global clear16
.type clear16, @function
.global clear32
.type clear32, @function
.global clear64
.type clear64, @function
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
set8:
__kefir_text_func_set8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_set8_label0:
_kefir_func_set8_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    mov %rax, %rcx
xor %al, %al
not %al
movb %al, (%rcx)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set8_end:

set16:
__kefir_text_func_set16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_set16_label0:
_kefir_func_set16_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    mov %rax, %rcx
xor %ax, %ax
not %ax
movw %ax, (%rcx)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set16_end:

set32:
__kefir_text_func_set32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_set32_label0:
_kefir_func_set32_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    mov %rax, %rcx
xor %eax, %eax
not %eax
movl %eax, (%rcx)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set32_end:

set64:
__kefir_text_func_set64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_set64_label0:
_kefir_func_set64_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    mov %rax, %rcx
xor %rax, %rax
not %rax
movq %rax, (%rcx)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set64_end:

clear8:
__kefir_text_func_clear8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_clear8_label0:
_kefir_func_clear8_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    movq %rax, -16(%rbp)
movb $0, %al
    movq -16(%rbp), %rdi
    mov %rax, (%rdi)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_clear8_end:

clear16:
__kefir_text_func_clear16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_clear16_label0:
_kefir_func_clear16_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    movq %rax, -16(%rbp)
movw $0, %ax
    movq -16(%rbp), %rdi
    mov %rax, (%rdi)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_clear16_end:

clear32:
__kefir_text_func_clear32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_clear32_label0:
_kefir_func_clear32_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    movq %rax, -16(%rbp)
movl $0, %eax
    movq -16(%rbp), %rdi
    mov %rax, (%rdi)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_clear32_end:

clear64:
__kefir_text_func_clear64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_clear64_label0:
_kefir_func_clear64_label1:
    movq %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    movq %rax, -16(%rbp)
movq $0, %rax
    movq -16(%rbp), %rdi
    mov %rax, (%rdi)
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_clear64_end:

__kefir_text_section_end:

