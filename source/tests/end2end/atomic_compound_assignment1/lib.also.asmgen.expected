.att_syntax
.section .note.GNU-stack,"",%progbits

.global add_i8
.global add_ld
.global ior_i8
.global shl_i8
.global shr_i8
.global add_f32
.global add_f64
.global add_i16
.global add_i32
.global add_i64
.global add_ptr
.global iand_i8
.global ior_i16
.global ior_i32
.global ior_i64
.global ixor_i8
.global shl_i16
.global shl_i32
.global shl_i64
.global shr_i16
.global shr_i32
.global shr_i64
.global iand_i16
.global iand_i32
.global iand_i64
.global ixor_i16
.global ixor_i32
.global ixor_i64
.global divide_i8
.global divide_ld
.global modulo_i8
.global divide_f32
.global divide_f64
.global divide_i16
.global divide_i32
.global divide_i64
.global modulo_i16
.global modulo_i32
.global modulo_i64
.global multiply_i8
.global multiply_ld
.global subtract_i8
.global subtract_ld
.global multiply_f32
.global multiply_f64
.global multiply_i16
.global multiply_i32
.global multiply_i64
.global subtract_f32
.global subtract_f64
.global subtract_i16
.global subtract_i32
.global subtract_i64
.global subtract_ptr
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint

.section .text
add_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_add_i8_label0:
_kefir_func_add_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    add %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_add_i8_label5
    jmp _kefir_func_add_i8_label4
_kefir_func_add_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_add_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i8_label2
_kefir_func_add_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

add_ld:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    fstcw -8(%rbp)
_kefir_func_add_ld_label0:
    lea 16(%rbp), %rax
_kefir_func_add_ld_label1:
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -176(%rbp)
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_add_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt -176(%rbp)
    fldt -128(%rbp)
    faddp
    fstpt -96(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -96(%rbp)
    movq $0, -104(%rbp)
    fstpt -112(%rbp)
    lea -112(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %rax, %rax
    jz _kefir_func_add_ld_label5
    movq -96(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_add_ld_label4
_kefir_func_add_ld_label5:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -128(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -120(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_add_ld_label3:
    fnclex
    mov %rax, %r10
    movq -128(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_add_ld_label2
_kefir_func_add_ld_label4:
    lea -112(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

ior_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ior_i8_label0:
_kefir_func_ior_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    or %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ior_i8_label5
    jmp _kefir_func_ior_i8_label4
_kefir_func_ior_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ior_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i8_label2
_kefir_func_ior_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shl_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shl_i8_label0:
_kefir_func_shl_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %rdx
    shl %cl, %edx
    movsx %dl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shl_i8_label5
    jmp _kefir_func_shl_i8_label4
_kefir_func_shl_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shl_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i8_label2
_kefir_func_shl_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shr_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shr_i8_label0:
_kefir_func_shr_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %rdx
    sar %cl, %dl
    movsx %dl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shr_i8_label5
    jmp _kefir_func_shr_i8_label4
_kefir_func_shr_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shr_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i8_label2
_kefir_func_shr_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

add_f32:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_add_f32_label0:
_kefir_func_add_f32_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_add_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    addss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_add_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_add_f32_label4
_kefir_func_add_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_add_f32_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_add_f32_label2
_kefir_func_add_f32_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

add_f64:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_add_f64_label0:
_kefir_func_add_f64_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_add_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    addsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_add_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_add_f64_label4
_kefir_func_add_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_add_f64_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_add_f64_label2
_kefir_func_add_f64_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

add_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_add_i16_label0:
_kefir_func_add_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    add %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_add_i16_label5
    jmp _kefir_func_add_i16_label4
_kefir_func_add_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_add_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i16_label2
_kefir_func_add_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

add_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_add_i32_label0:
_kefir_func_add_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    add %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_add_i32_label5
    jmp _kefir_func_add_i32_label4
_kefir_func_add_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_add_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i32_label2
_kefir_func_add_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

add_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_add_i64_label0:
_kefir_func_add_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_add_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    add %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_add_i64_label5
    jmp _kefir_func_add_i64_label4
_kefir_func_add_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_add_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i64_label2
_kefir_func_add_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

add_ptr:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_add_ptr_label0:
_kefir_func_add_ptr_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_add_ptr_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    imul $4, %r10, %rcx
    mov %rax, %r11
    add %rcx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_add_ptr_label5
    jmp _kefir_func_add_ptr_label4
_kefir_func_add_ptr_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_add_ptr_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_ptr_label2
_kefir_func_add_ptr_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

iand_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_iand_i8_label0:
_kefir_func_iand_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    and %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_iand_i8_label5
    jmp _kefir_func_iand_i8_label4
_kefir_func_iand_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_iand_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i8_label2
_kefir_func_iand_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ior_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ior_i16_label0:
_kefir_func_ior_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    or %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ior_i16_label5
    jmp _kefir_func_ior_i16_label4
_kefir_func_ior_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ior_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i16_label2
_kefir_func_ior_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ior_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ior_i32_label0:
_kefir_func_ior_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    or %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ior_i32_label5
    jmp _kefir_func_ior_i32_label4
_kefir_func_ior_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ior_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i32_label2
_kefir_func_ior_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ior_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ior_i64_label0:
_kefir_func_ior_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_ior_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    or %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ior_i64_label5
    jmp _kefir_func_ior_i64_label4
_kefir_func_ior_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ior_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i64_label2
_kefir_func_ior_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ixor_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ixor_i8_label0:
_kefir_func_ixor_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    xor %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ixor_i8_label5
    jmp _kefir_func_ixor_i8_label4
_kefir_func_ixor_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ixor_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i8_label2
_kefir_func_ixor_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shl_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shl_i16_label0:
_kefir_func_shl_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %rdx
    shl %cl, %edx
    movsx %dx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shl_i16_label5
    jmp _kefir_func_shl_i16_label4
_kefir_func_shl_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shl_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i16_label2
_kefir_func_shl_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shl_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shl_i32_label0:
_kefir_func_shl_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shl_i32_label5
    jmp _kefir_func_shl_i32_label4
_kefir_func_shl_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shl_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i32_label2
_kefir_func_shl_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shl_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shl_i64_label0:
_kefir_func_shl_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_shl_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shl_i64_label5
    jmp _kefir_func_shl_i64_label4
_kefir_func_shl_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shl_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i64_label2
_kefir_func_shl_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shr_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shr_i16_label0:
_kefir_func_shr_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %rdx
    sar %cl, %dx
    movsx %dx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shr_i16_label5
    jmp _kefir_func_shr_i16_label4
_kefir_func_shr_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shr_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i16_label2
_kefir_func_shr_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shr_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shr_i32_label0:
_kefir_func_shr_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shr_i32_label5
    jmp _kefir_func_shr_i32_label4
_kefir_func_shr_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shr_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i32_label2
_kefir_func_shr_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

shr_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_shr_i64_label0:
_kefir_func_shr_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_shr_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_shr_i64_label5
    jmp _kefir_func_shr_i64_label4
_kefir_func_shr_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_shr_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i64_label2
_kefir_func_shr_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

iand_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_iand_i16_label0:
_kefir_func_iand_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    and %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_iand_i16_label5
    jmp _kefir_func_iand_i16_label4
_kefir_func_iand_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_iand_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i16_label2
_kefir_func_iand_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

iand_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_iand_i32_label0:
_kefir_func_iand_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    and %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_iand_i32_label5
    jmp _kefir_func_iand_i32_label4
_kefir_func_iand_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_iand_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i32_label2
_kefir_func_iand_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

iand_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_iand_i64_label0:
_kefir_func_iand_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_iand_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    and %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_iand_i64_label5
    jmp _kefir_func_iand_i64_label4
_kefir_func_iand_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_iand_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i64_label2
_kefir_func_iand_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ixor_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ixor_i16_label0:
_kefir_func_ixor_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    xor %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ixor_i16_label5
    jmp _kefir_func_ixor_i16_label4
_kefir_func_ixor_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ixor_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i16_label2
_kefir_func_ixor_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ixor_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ixor_i32_label0:
_kefir_func_ixor_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    xor %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ixor_i32_label5
    jmp _kefir_func_ixor_i32_label4
_kefir_func_ixor_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ixor_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i32_label2
_kefir_func_ixor_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

ixor_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_ixor_i64_label0:
_kefir_func_ixor_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_ixor_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    xor %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_ixor_i64_label5
    jmp _kefir_func_ixor_i64_label4
_kefir_func_ixor_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_ixor_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i64_label2
_kefir_func_ixor_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_divide_i8_label0:
_kefir_func_divide_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %rcx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_divide_i8_label5
    jmp _kefir_func_divide_i8_label4
_kefir_func_divide_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_divide_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i8_label2
_kefir_func_divide_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_ld:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    fstcw -8(%rbp)
_kefir_func_divide_ld_label0:
    lea 16(%rbp), %rax
_kefir_func_divide_ld_label1:
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -176(%rbp)
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_divide_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt -176(%rbp)
    fldt -128(%rbp)
    fdivp
    fstpt -96(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -96(%rbp)
    movq $0, -104(%rbp)
    fstpt -112(%rbp)
    lea -112(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %rax, %rax
    jz _kefir_func_divide_ld_label5
    movq -96(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_divide_ld_label4
_kefir_func_divide_ld_label5:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -128(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -120(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_divide_ld_label3:
    fnclex
    mov %rax, %r10
    movq -128(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_divide_ld_label2
_kefir_func_divide_ld_label4:
    lea -112(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

modulo_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_modulo_i8_label0:
_kefir_func_modulo_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %rax
    movsx %al, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_modulo_i8_label5
    jmp _kefir_func_modulo_i8_label4
_kefir_func_modulo_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_modulo_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i8_label2
_kefir_func_modulo_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_f32:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_divide_f32_label0:
_kefir_func_divide_f32_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_divide_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    divss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_divide_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_divide_f32_label4
_kefir_func_divide_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_divide_f32_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_divide_f32_label2
_kefir_func_divide_f32_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_f64:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_divide_f64_label0:
_kefir_func_divide_f64_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_divide_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    divsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_divide_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_divide_f64_label4
_kefir_func_divide_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_divide_f64_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_divide_f64_label2
_kefir_func_divide_f64_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_divide_i16_label0:
_kefir_func_divide_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %rcx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_divide_i16_label5
    jmp _kefir_func_divide_i16_label4
_kefir_func_divide_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_divide_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i16_label2
_kefir_func_divide_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_divide_i32_label0:
_kefir_func_divide_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_divide_i32_label5
    jmp _kefir_func_divide_i32_label4
_kefir_func_divide_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_divide_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i32_label2
_kefir_func_divide_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

divide_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_divide_i64_label0:
_kefir_func_divide_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_divide_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    mov %rax, %rsi
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rsi, %rax
    cqo
    idiv %r10
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_divide_i64_label5
    jmp _kefir_func_divide_i64_label4
_kefir_func_divide_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_divide_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i64_label2
_kefir_func_divide_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

modulo_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_modulo_i16_label0:
_kefir_func_modulo_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %rax
    movsx %ax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_modulo_i16_label5
    jmp _kefir_func_modulo_i16_label4
_kefir_func_modulo_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_modulo_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i16_label2
_kefir_func_modulo_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

modulo_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_modulo_i32_label0:
_kefir_func_modulo_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_modulo_i32_label5
    jmp _kefir_func_modulo_i32_label4
_kefir_func_modulo_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_modulo_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i32_label2
_kefir_func_modulo_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

modulo_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_modulo_i64_label0:
_kefir_func_modulo_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_modulo_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    mov %rax, %rsi
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rsi, %rax
    cqo
    idiv %r10
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_modulo_i64_label5
    jmp _kefir_func_modulo_i64_label4
_kefir_func_modulo_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_modulo_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i64_label2
_kefir_func_modulo_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_multiply_i8_label0:
_kefir_func_multiply_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    imul %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_multiply_i8_label5
    jmp _kefir_func_multiply_i8_label4
_kefir_func_multiply_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_multiply_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i8_label2
_kefir_func_multiply_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_ld:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    fstcw -8(%rbp)
_kefir_func_multiply_ld_label0:
    lea 16(%rbp), %rax
_kefir_func_multiply_ld_label1:
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -176(%rbp)
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_multiply_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt -176(%rbp)
    fldt -128(%rbp)
    fmulp
    fstpt -96(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -96(%rbp)
    movq $0, -104(%rbp)
    fstpt -112(%rbp)
    lea -112(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %rax, %rax
    jz _kefir_func_multiply_ld_label5
    movq -96(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_multiply_ld_label4
_kefir_func_multiply_ld_label5:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -128(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -120(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_multiply_ld_label3:
    fnclex
    mov %rax, %r10
    movq -128(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_multiply_ld_label2
_kefir_func_multiply_ld_label4:
    lea -112(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_i8:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_subtract_i8_label0:
_kefir_func_subtract_i8_label1:
    movsx %sil, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    sub %r10d, %ecx
    movsx %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_subtract_i8_label5
    jmp _kefir_func_subtract_i8_label4
_kefir_func_subtract_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_subtract_i8_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i8_label2
_kefir_func_subtract_i8_label4:
    movsx %r11b, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_ld:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    fstcw -8(%rbp)
_kefir_func_subtract_ld_label0:
    lea 16(%rbp), %rax
_kefir_func_subtract_ld_label1:
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -176(%rbp)
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_subtract_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt -176(%rbp)
    fldt -128(%rbp)
    fsubp
    fstpt -96(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -96(%rbp)
    movq $0, -104(%rbp)
    fstpt -112(%rbp)
    lea -112(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %rax, %rax
    jz _kefir_func_subtract_ld_label5
    movq -96(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_subtract_ld_label4
_kefir_func_subtract_ld_label5:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -128(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -120(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_subtract_ld_label3:
    fnclex
    mov %rax, %r10
    movq -128(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_subtract_ld_label2
_kefir_func_subtract_ld_label4:
    lea -112(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_f32:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_multiply_f32_label0:
_kefir_func_multiply_f32_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_multiply_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    mulss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_multiply_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_multiply_f32_label4
_kefir_func_multiply_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_multiply_f32_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_multiply_f32_label2
_kefir_func_multiply_f32_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_f64:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_multiply_f64_label0:
_kefir_func_multiply_f64_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_multiply_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    mulsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_multiply_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_multiply_f64_label4
_kefir_func_multiply_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_multiply_f64_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_multiply_f64_label2
_kefir_func_multiply_f64_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_multiply_i16_label0:
_kefir_func_multiply_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    imul %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_multiply_i16_label5
    jmp _kefir_func_multiply_i16_label4
_kefir_func_multiply_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_multiply_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i16_label2
_kefir_func_multiply_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_multiply_i32_label0:
_kefir_func_multiply_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    imul %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_multiply_i32_label5
    jmp _kefir_func_multiply_i32_label4
_kefir_func_multiply_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_multiply_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i32_label2
_kefir_func_multiply_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

multiply_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_multiply_i64_label0:
_kefir_func_multiply_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_multiply_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    imul %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_multiply_i64_label5
    jmp _kefir_func_multiply_i64_label4
_kefir_func_multiply_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_multiply_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i64_label2
_kefir_func_multiply_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_f32:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_subtract_f32_label0:
_kefir_func_subtract_f32_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_subtract_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    subss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_subtract_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_subtract_f32_label4
_kefir_func_subtract_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_subtract_f32_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_subtract_f32_label2
_kefir_func_subtract_f32_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_f64:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
_kefir_func_subtract_f64_label0:
_kefir_func_subtract_f64_label1:
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_subtract_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movq -72(%rbp), %xmm0
    movq %rax, %xmm1
    subsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movq -48(%rbp), %xmm0
    movq -32(%rbp), %xmm1
    test %rax, %rax
    jz _kefir_func_subtract_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_subtract_f64_label4
_kefir_func_subtract_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm1
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_subtract_f64_label3:
    fnclex
    mov %rax, %r9
    movq %xmm1, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_subtract_f64_label2
_kefir_func_subtract_f64_label4:
    movdqu %xmm1, -112(%rbp)
    lea -80(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_i16:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_subtract_i16_label0:
_kefir_func_subtract_i16_label1:
    movsx %si, %rax
    movsx %eax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %eax, %rax
    mov %rax, %rcx
    sub %r10d, %ecx
    movsx %cx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_subtract_i16_label5
    jmp _kefir_func_subtract_i16_label4
_kefir_func_subtract_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_subtract_i16_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i16_label2
_kefir_func_subtract_i16_label4:
    movsx %r11w, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_i32:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_subtract_i32_label0:
_kefir_func_subtract_i32_label1:
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    sub %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_subtract_i32_label5
    jmp _kefir_func_subtract_i32_label4
_kefir_func_subtract_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_subtract_i32_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i32_label2
_kefir_func_subtract_i32_label4:
    movsx %r11d, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_i64:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_subtract_i64_label0:
_kefir_func_subtract_i64_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_subtract_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    sub %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_subtract_i64_label5
    jmp _kefir_func_subtract_i64_label4
_kefir_func_subtract_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_subtract_i64_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i64_label2
_kefir_func_subtract_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

subtract_ptr:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_subtract_ptr_label0:
_kefir_func_subtract_ptr_label1:
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_subtract_ptr_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    imul $4, %r10, %rcx
    mov %rax, %r11
    sub %rcx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %rax, %rax
    jz _kefir_func_subtract_ptr_label5
    jmp _kefir_func_subtract_ptr_label4
_kefir_func_subtract_ptr_label5:
    mov %r9, %rax
    mov %r10, %rcx
_kefir_func_subtract_ptr_label3:
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_ptr_label2
_kefir_func_subtract_ptr_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret


