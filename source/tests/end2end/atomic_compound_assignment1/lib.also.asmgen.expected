.att_syntax
.section .note.GNU-stack,"",%progbits

.global add_i8
.type add_i8, @function
.global add_ld
.type add_ld, @function
.global ior_i8
.type ior_i8, @function
.global shl_i8
.type shl_i8, @function
.global shr_i8
.type shr_i8, @function
.global add_f32
.type add_f32, @function
.global add_f64
.type add_f64, @function
.global add_i16
.type add_i16, @function
.global add_i32
.type add_i32, @function
.global add_i64
.type add_i64, @function
.global add_ptr
.type add_ptr, @function
.global iand_i8
.type iand_i8, @function
.global ior_i16
.type ior_i16, @function
.global ior_i32
.type ior_i32, @function
.global ior_i64
.type ior_i64, @function
.global ixor_i8
.type ixor_i8, @function
.global shl_i16
.type shl_i16, @function
.global shl_i32
.type shl_i32, @function
.global shl_i64
.type shl_i64, @function
.global shr_i16
.type shr_i16, @function
.global shr_i32
.type shr_i32, @function
.global shr_i64
.type shr_i64, @function
.global iand_i16
.type iand_i16, @function
.global iand_i32
.type iand_i32, @function
.global iand_i64
.type iand_i64, @function
.global ixor_i16
.type ixor_i16, @function
.global ixor_i32
.type ixor_i32, @function
.global ixor_i64
.type ixor_i64, @function
.global divide_i8
.type divide_i8, @function
.global divide_ld
.type divide_ld, @function
.global modulo_i8
.type modulo_i8, @function
.global divide_f32
.type divide_f32, @function
.global divide_f64
.type divide_f64, @function
.global divide_i16
.type divide_i16, @function
.global divide_i32
.type divide_i32, @function
.global divide_i64
.type divide_i64, @function
.global modulo_i16
.type modulo_i16, @function
.global modulo_i32
.type modulo_i32, @function
.global modulo_i64
.type modulo_i64, @function
.global multiply_i8
.type multiply_i8, @function
.global multiply_ld
.type multiply_ld, @function
.global subtract_i8
.type subtract_i8, @function
.global subtract_ld
.type subtract_ld, @function
.global multiply_f32
.type multiply_f32, @function
.global multiply_f64
.type multiply_f64, @function
.global multiply_i16
.type multiply_i16, @function
.global multiply_i32
.type multiply_i32, @function
.global multiply_i64
.type multiply_i64, @function
.global subtract_f32
.type subtract_f32, @function
.global subtract_f64
.type subtract_f64, @function
.global subtract_i16
.type subtract_i16, @function
.global subtract_i32
.type subtract_i32, @function
.global subtract_i64
.type subtract_i64, @function
.global subtract_ptr
.type subtract_ptr, @function

.section .text
__kefir_text_section_begin:
add_i8:
__kefir_text_func_add_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    add %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_add_i8_label4
_kefir_func_add_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i8_label2
_kefir_func_add_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_i8_end:

add_ld:
__kefir_text_func_add_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $208, %rsp
    fstcw -8(%rbp)
    lea 16(%rbp), %rax
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -208(%rbp)
    fnstenv -192(%rbp)
    stmxcsr -164(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_add_ld_label2:
    movq %r10, -144(%rbp)
    lea -160(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -144(%rbp), %r10
    fldt -208(%rbp)
    fldt -160(%rbp)
    faddp
    fstpt -128(%rbp)
    movq %r10, -112(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -160(%rbp)
    movq $0, -152(%rbp)
    fstpt -160(%rbp)
    lea -160(%rbp), %rdx
    fldt -128(%rbp)
    movq $0, -136(%rbp)
    fstpt -144(%rbp)
    lea -144(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_add_ld_label5
    movq -192(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -184(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -176(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_add_ld_label4
_kefir_func_add_ld_label5:
    mov %r10, %rax
    movq -208(%rbp), %rcx
    movq %rcx, -160(%rbp)
    movq -200(%rbp), %rcx
    movq %rcx, -152(%rbp)
    movq -192(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -184(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -176(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -80(%rbp)
    fnclex
    mov %rax, %r10
    movq -160(%rbp), %rax
    movq %rax, -208(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -200(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -192(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -184(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -168(%rbp)
    jmp _kefir_func_add_ld_label2
_kefir_func_add_ld_label4:
    stmxcsr -208(%rbp)
    mov -208(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -160(%rbp)
    ldmxcsr -132(%rbp)
    stmxcsr -208(%rbp)
    orl %eax, -208(%rbp)
    ldmxcsr -208(%rbp)
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_ld_end:

ior_i8:
__kefir_text_func_ior_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    or %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ior_i8_label4
_kefir_func_ior_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i8_label2
_kefir_func_ior_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ior_i8_end:

shl_i8:
__kefir_text_func_shl_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shl_i8_label4
_kefir_func_shl_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i8_label2
_kefir_func_shl_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shl_i8_end:

shr_i8:
__kefir_text_func_shr_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11b
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shr_i8_label4
_kefir_func_shr_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i8_label2
_kefir_func_shr_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shr_i8_end:

add_f32:
__kefir_text_func_add_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_add_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    addss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_add_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_add_f32_label4
_kefir_func_add_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_add_f32_label2
_kefir_func_add_f32_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_f32_end:

add_f64:
__kefir_text_func_add_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_add_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    addsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_add_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_add_f64_label4
_kefir_func_add_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_add_f64_label2
_kefir_func_add_f64_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_f64_end:

add_i16:
__kefir_text_func_add_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    add %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_add_i16_label4
_kefir_func_add_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i16_label2
_kefir_func_add_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_i16_end:

add_i32:
__kefir_text_func_add_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_add_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    add %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_add_i32_label4
_kefir_func_add_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i32_label2
_kefir_func_add_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_i32_end:

add_i64:
__kefir_text_func_add_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_add_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    add %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_add_i64_label4
_kefir_func_add_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_i64_label2
_kefir_func_add_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_i64_end:

add_ptr:
__kefir_text_func_add_ptr_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_add_ptr_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    imul $4, %r10, %rcx
    mov %rax, %r11
    add %rcx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_add_ptr_label4
_kefir_func_add_ptr_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_add_ptr_label2
_kefir_func_add_ptr_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_add_ptr_end:

iand_i8:
__kefir_text_func_iand_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    and %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_iand_i8_label4
_kefir_func_iand_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i8_label2
_kefir_func_iand_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_iand_i8_end:

ior_i16:
__kefir_text_func_ior_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    or %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ior_i16_label4
_kefir_func_ior_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i16_label2
_kefir_func_ior_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ior_i16_end:

ior_i32:
__kefir_text_func_ior_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ior_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    or %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ior_i32_label4
_kefir_func_ior_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i32_label2
_kefir_func_ior_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ior_i32_end:

ior_i64:
__kefir_text_func_ior_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_ior_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    or %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ior_i64_label4
_kefir_func_ior_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ior_i64_label2
_kefir_func_ior_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ior_i64_end:

ixor_i8:
__kefir_text_func_ixor_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    xor %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ixor_i8_label4
_kefir_func_ixor_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i8_label2
_kefir_func_ixor_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ixor_i8_end:

shl_i16:
__kefir_text_func_shl_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shl_i16_label4
_kefir_func_shl_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i16_label2
_kefir_func_shl_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shl_i16_end:

shl_i32:
__kefir_text_func_shl_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shl_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shl_i32_label4
_kefir_func_shl_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i32_label2
_kefir_func_shl_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shl_i32_end:

shl_i64:
__kefir_text_func_shl_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_shl_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %r10, %rcx
    mov %rax, %r11
    shl %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shl_i64_label4
_kefir_func_shl_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shl_i64_label2
_kefir_func_shl_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shl_i64_end:

shr_i16:
__kefir_text_func_shr_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11w
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shr_i16_label4
_kefir_func_shr_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i16_label2
_kefir_func_shr_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shr_i16_end:

shr_i32:
__kefir_text_func_shr_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_shr_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shr_i32_label4
_kefir_func_shr_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i32_label2
_kefir_func_shr_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shr_i32_end:

shr_i64:
__kefir_text_func_shr_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_shr_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %r10, %rcx
    mov %rax, %r11
    sar %cl, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_shr_i64_label4
_kefir_func_shr_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_shr_i64_label2
_kefir_func_shr_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_shr_i64_end:

iand_i16:
__kefir_text_func_iand_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    and %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_iand_i16_label4
_kefir_func_iand_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i16_label2
_kefir_func_iand_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_iand_i16_end:

iand_i32:
__kefir_text_func_iand_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_iand_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    and %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_iand_i32_label4
_kefir_func_iand_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i32_label2
_kefir_func_iand_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_iand_i32_end:

iand_i64:
__kefir_text_func_iand_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_iand_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    and %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_iand_i64_label4
_kefir_func_iand_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_iand_i64_label2
_kefir_func_iand_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_iand_i64_end:

ixor_i16:
__kefir_text_func_ixor_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    xor %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ixor_i16_label4
_kefir_func_ixor_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i16_label2
_kefir_func_ixor_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ixor_i16_end:

ixor_i32:
__kefir_text_func_ixor_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_ixor_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    xor %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ixor_i32_label4
_kefir_func_ixor_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i32_label2
_kefir_func_ixor_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ixor_i32_end:

ixor_i64:
__kefir_text_func_ixor_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_ixor_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    xor %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_ixor_i64_label4
_kefir_func_ixor_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_ixor_i64_label2
_kefir_func_ixor_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_ixor_i64_end:

divide_i8:
__kefir_text_func_divide_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_divide_i8_label4
_kefir_func_divide_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i8_label2
_kefir_func_divide_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_i8_end:

divide_ld:
__kefir_text_func_divide_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $208, %rsp
    fstcw -8(%rbp)
    lea 16(%rbp), %rax
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -208(%rbp)
    fnstenv -192(%rbp)
    stmxcsr -164(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_divide_ld_label2:
    movq %r10, -144(%rbp)
    lea -160(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -144(%rbp), %r10
    fldt -208(%rbp)
    fldt -160(%rbp)
    fdivp
    fstpt -128(%rbp)
    movq %r10, -112(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -160(%rbp)
    movq $0, -152(%rbp)
    fstpt -160(%rbp)
    lea -160(%rbp), %rdx
    fldt -128(%rbp)
    movq $0, -136(%rbp)
    fstpt -144(%rbp)
    lea -144(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_divide_ld_label5
    movq -192(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -184(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -176(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_divide_ld_label4
_kefir_func_divide_ld_label5:
    mov %r10, %rax
    movq -208(%rbp), %rcx
    movq %rcx, -160(%rbp)
    movq -200(%rbp), %rcx
    movq %rcx, -152(%rbp)
    movq -192(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -184(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -176(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -80(%rbp)
    fnclex
    mov %rax, %r10
    movq -160(%rbp), %rax
    movq %rax, -208(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -200(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -192(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -184(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -168(%rbp)
    jmp _kefir_func_divide_ld_label2
_kefir_func_divide_ld_label4:
    stmxcsr -208(%rbp)
    mov -208(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -160(%rbp)
    ldmxcsr -132(%rbp)
    stmxcsr -208(%rbp)
    orl %eax, -208(%rbp)
    ldmxcsr -208(%rbp)
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_ld_end:

modulo_i8:
__kefir_text_func_modulo_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_modulo_i8_label4
_kefir_func_modulo_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i8_label2
_kefir_func_modulo_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_modulo_i8_end:

divide_f32:
__kefir_text_func_divide_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_divide_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    divss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_divide_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_divide_f32_label4
_kefir_func_divide_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_divide_f32_label2
_kefir_func_divide_f32_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_f32_end:

divide_f64:
__kefir_text_func_divide_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_divide_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    divsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_divide_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_divide_f64_label4
_kefir_func_divide_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_divide_f64_label2
_kefir_func_divide_f64_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_f64_end:

divide_i16:
__kefir_text_func_divide_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_divide_i16_label4
_kefir_func_divide_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i16_label2
_kefir_func_divide_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_i16_end:

divide_i32:
__kefir_text_func_divide_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_divide_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_divide_i32_label4
_kefir_func_divide_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i32_label2
_kefir_func_divide_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_i32_end:

divide_i64:
__kefir_text_func_divide_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_divide_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    mov %rax, %rsi
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rsi, %rax
    cqo
    idiv %r10
    mov %rax, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_divide_i64_label4
_kefir_func_divide_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_divide_i64_label2
_kefir_func_divide_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_divide_i64_end:

modulo_i16:
__kefir_text_func_modulo_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_modulo_i16_label4
_kefir_func_modulo_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i16_label2
_kefir_func_modulo_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_modulo_i16_end:

modulo_i32:
__kefir_text_func_modulo_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_modulo_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rsi
    mov %rsi, %rax
    cdq
    idiv %r10d
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_modulo_i32_label4
_kefir_func_modulo_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i32_label2
_kefir_func_modulo_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_modulo_i32_end:

modulo_i64:
__kefir_text_func_modulo_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_modulo_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    mov %rax, %rsi
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rsi, %rax
    cqo
    idiv %r10
    mov %rdx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rsi, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_modulo_i64_label4
_kefir_func_modulo_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_modulo_i64_label2
_kefir_func_modulo_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_modulo_i64_end:

multiply_i8:
__kefir_text_func_multiply_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    imul %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_multiply_i8_label4
_kefir_func_multiply_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i8_label2
_kefir_func_multiply_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_i8_end:

multiply_ld:
__kefir_text_func_multiply_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $208, %rsp
    fstcw -8(%rbp)
    lea 16(%rbp), %rax
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -208(%rbp)
    fnstenv -192(%rbp)
    stmxcsr -164(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_multiply_ld_label2:
    movq %r10, -144(%rbp)
    lea -160(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -144(%rbp), %r10
    fldt -208(%rbp)
    fldt -160(%rbp)
    fmulp
    fstpt -128(%rbp)
    movq %r10, -112(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -160(%rbp)
    movq $0, -152(%rbp)
    fstpt -160(%rbp)
    lea -160(%rbp), %rdx
    fldt -128(%rbp)
    movq $0, -136(%rbp)
    fstpt -144(%rbp)
    lea -144(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_multiply_ld_label5
    movq -192(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -184(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -176(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_multiply_ld_label4
_kefir_func_multiply_ld_label5:
    mov %r10, %rax
    movq -208(%rbp), %rcx
    movq %rcx, -160(%rbp)
    movq -200(%rbp), %rcx
    movq %rcx, -152(%rbp)
    movq -192(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -184(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -176(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -80(%rbp)
    fnclex
    mov %rax, %r10
    movq -160(%rbp), %rax
    movq %rax, -208(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -200(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -192(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -184(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -168(%rbp)
    jmp _kefir_func_multiply_ld_label2
_kefir_func_multiply_ld_label4:
    stmxcsr -208(%rbp)
    mov -208(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -160(%rbp)
    ldmxcsr -132(%rbp)
    stmxcsr -208(%rbp)
    orl %eax, -208(%rbp)
    ldmxcsr -208(%rbp)
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_ld_end:

subtract_i8:
__kefir_text_func_subtract_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %sil, %rax
    movsx %al, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i8_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %al, %rax
    movsx %al, %rax
    mov %rax, %r11
    sub %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_subtract_i8_label4
_kefir_func_subtract_i8_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i8_label2
_kefir_func_subtract_i8_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_i8_end:

subtract_ld:
__kefir_text_func_subtract_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $208, %rsp
    fstcw -8(%rbp)
    lea 16(%rbp), %rax
    movq $0, -56(%rbp)
    fldt (%rax)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fstpt -208(%rbp)
    fnstenv -192(%rbp)
    stmxcsr -164(%rbp)
    fnclex
    mov %rdi, %r10
_kefir_func_subtract_ld_label2:
    movq %r10, -144(%rbp)
    lea -160(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -144(%rbp), %r10
    fldt -208(%rbp)
    fldt -160(%rbp)
    fsubp
    fstpt -128(%rbp)
    movq %r10, -112(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -160(%rbp)
    movq $0, -152(%rbp)
    fstpt -160(%rbp)
    lea -160(%rbp), %rdx
    fldt -128(%rbp)
    movq $0, -136(%rbp)
    fstpt -144(%rbp)
    lea -144(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_subtract_ld_label5
    movq -192(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -184(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -176(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_subtract_ld_label4
_kefir_func_subtract_ld_label5:
    mov %r10, %rax
    movq -208(%rbp), %rcx
    movq %rcx, -160(%rbp)
    movq -200(%rbp), %rcx
    movq %rcx, -152(%rbp)
    movq -192(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -184(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -176(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -80(%rbp)
    fnclex
    mov %rax, %r10
    movq -160(%rbp), %rax
    movq %rax, -208(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -200(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -192(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -184(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -168(%rbp)
    jmp _kefir_func_subtract_ld_label2
_kefir_func_subtract_ld_label4:
    stmxcsr -208(%rbp)
    mov -208(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -160(%rbp)
    ldmxcsr -132(%rbp)
    stmxcsr -208(%rbp)
    orl %eax, -208(%rbp)
    ldmxcsr -208(%rbp)
    fldt -128(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_ld_end:

multiply_f32:
__kefir_text_func_multiply_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_multiply_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    mulss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_multiply_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_multiply_f32_label4
_kefir_func_multiply_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_multiply_f32_label2
_kefir_func_multiply_f32_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_f32_end:

multiply_f64:
__kefir_text_func_multiply_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_multiply_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    mulsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_multiply_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_multiply_f64_label4
_kefir_func_multiply_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_multiply_f64_label2
_kefir_func_multiply_f64_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_f64_end:

multiply_i16:
__kefir_text_func_multiply_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    imul %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_multiply_i16_label4
_kefir_func_multiply_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i16_label2
_kefir_func_multiply_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_i16_end:

multiply_i32:
__kefir_text_func_multiply_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_multiply_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    imul %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_multiply_i32_label4
_kefir_func_multiply_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i32_label2
_kefir_func_multiply_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_i32_end:

multiply_i64:
__kefir_text_func_multiply_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_multiply_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    imul %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_multiply_i64_label4
_kefir_func_multiply_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_multiply_i64_label2
_kefir_func_multiply_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_multiply_i64_end:

subtract_f32:
__kefir_text_func_subtract_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_subtract_f32_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    subss %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_subtract_f32_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_subtract_f32_label4
_kefir_func_subtract_f32_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_subtract_f32_label2
_kefir_func_subtract_f32_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_f32_end:

subtract_f64:
__kefir_text_func_subtract_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $112, %rsp
    stmxcsr -8(%rbp)
    fnstenv -112(%rbp)
    stmxcsr -84(%rbp)
    fnclex
    mov %rdi, %r9
_kefir_func_subtract_f64_label2:
    movq %r9, -80(%rbp)
    movdqu %xmm0, -72(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -80(%rbp), %r9
    movdqu -72(%rbp), %xmm0
    movq %rax, %xmm1
    subsd %xmm0, %xmm1
    movq %r9, -56(%rbp)
    movdqu %xmm0, -48(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -80(%rbp)
    lea -80(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -56(%rbp), %r9
    movdqu -48(%rbp), %xmm0
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_subtract_f64_label5
    movq -112(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_subtract_f64_label4
_kefir_func_subtract_f64_label5:
    mov %r9, %rax
    movq %xmm0, %xmm2
    movq -112(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -96(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -88(%rbp), %rcx
    movq %rcx, -56(%rbp)
    fnclex
    mov %rax, %r9
    movq %xmm2, %xmm0
    movq -80(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -88(%rbp)
    jmp _kefir_func_subtract_f64_label2
_kefir_func_subtract_f64_label4:
    stmxcsr -112(%rbp)
    mov -112(%rbp), %rcx
    fnstsw %ax
    or %ecx, %eax
    and $63, %eax
    fldenv -80(%rbp)
    ldmxcsr -52(%rbp)
    stmxcsr -112(%rbp)
    orl %eax, -112(%rbp)
    ldmxcsr -112(%rbp)
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_f64_end:

subtract_i16:
__kefir_text_func_subtract_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %si, %rax
    movsx %ax, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i16_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %ax, %rax
    movsx %ax, %rax
    mov %rax, %r11
    sub %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_subtract_i16_label4
_kefir_func_subtract_i16_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i16_label2
_kefir_func_subtract_i16_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_i16_end:

subtract_i32:
__kefir_text_func_subtract_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movsx %esi, %rax
    mov %rdi, %r9
    mov %rax, %r10
_kefir_func_subtract_i32_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    movsx %eax, %rax
    mov %rax, %r11
    sub %r10d, %r11d
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_subtract_i32_label4
_kefir_func_subtract_i32_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i32_label2
_kefir_func_subtract_i32_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_i32_end:

subtract_i64:
__kefir_text_func_subtract_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_subtract_i64_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    mov %rax, %r11
    sub %r10, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_subtract_i64_label4
_kefir_func_subtract_i64_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_i64_label2
_kefir_func_subtract_i64_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_i64_end:

subtract_ptr:
__kefir_text_func_subtract_ptr_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdi, %r9
    mov %rsi, %r10
_kefir_func_subtract_ptr_label2:
    movq %r9, -48(%rbp)
    movq %r10, -40(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq -40(%rbp), %r10
    imul $4, %r10, %rcx
    mov %rax, %r11
    sub %rcx, %r11
    movq %r9, -32(%rbp)
    movq %r10, -24(%rbp)
    movq %r11, -16(%rbp)
    mov %r9, %rdi
    mov %r11, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -32(%rbp), %r9
    movq -24(%rbp), %r10
    movq -16(%rbp), %r11
    test %al, %al
    jnz _kefir_func_subtract_ptr_label4
_kefir_func_subtract_ptr_label5:
    mov %r9, %rax
    mov %r10, %rcx
    mov %rax, %r9
    mov %rcx, %r10
    jmp _kefir_func_subtract_ptr_label2
_kefir_func_subtract_ptr_label4:
    mov %r11, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_subtract_ptr_end:

__kefir_text_section_end:

