.att_syntax
.section .note.GNU-stack,"",%progbits

.global get
.type get, @function

.section .text
__kefir_text_section_begin:
get:
__kefir_text_func_get_begin:
    push %rbp
    mov %rsp, %rbp
    sub $288, %rsp
    stmxcsr -8(%rbp)
    mov %rdi, %rdx
    leaq (%rdx), %rdi
    xor %eax, %eax
    mov $71, %rcx
    rep stosq
    movw $10, (%rdx)
    movl $11, 8(%rdx)
    movq $12, 16(%rdx)
    mov $13, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 24(%rdx)
    mov $14, %rax
    cvtsi2sd %rax, %xmm0
    movq %xmm0, 32(%rdx)
    movl $15, 40(%rdx)
    movq $16, 48(%rdx)
    mov $17, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 56(%rdx)
    movl $18, 112(%rdx)
    movq $19, 120(%rdx)
    mov $20, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 128(%rdx)
    movl $21, 136(%rdx)
    movq $22, 144(%rdx)
    mov $23, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 152(%rdx)
    leaq -280(%rbp), %rdi
    xor %eax, %eax
    mov $17, %rcx
    rep stosq
    movw $-1, -280(%rbp)
    leaq -144(%rbp), %rdi
    leaq -280(%rbp), %rsi
    cld
    mov $17, %rcx
    rep movsq
    leaq 160(%rdx), %rdi
    leaq -280(%rbp), %rsi
    cld
    mov $17, %rcx
    rep movsq
    leaq 296(%rdx), %rdi
    leaq -144(%rbp), %rsi
    cld
    mov $17, %rcx
    rep movsq
    movw $24, 432(%rdx)
    movl $25, 440(%rdx)
    movq $26, 448(%rdx)
    mov $27, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 456(%rdx)
    mov $28, %rax
    cvtsi2sd %rax, %xmm0
    movq %xmm0, 464(%rdx)
    movl $29, 544(%rdx)
    movq $30, 552(%rdx)
    mov $31, %rax
    cvtsi2ss %rax, %xmm0
    movd %xmm0, 560(%rdx)
    mov %rdx, %rax
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get_end:

__kefir_text_section_end:

