.att_syntax
.section .note.GNU-stack,"",%progbits

.global custom_discriminant
.type custom_discriminant, @function
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
custom_discriminant:
__kefir_text_func_custom_discriminant_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func_custom_discriminant_label0:
_kefir_func_custom_discriminant_label1:
    movq %xmm2, -16(%rbp)
    movq %xmm1, -24(%rbp)
    movq %xmm0, -32(%rbp)
    movq %xmm0, -8(%rbp)
    lea -8(%rbp), %rax
    movq -24(%rbp), %rcx
    movq -32(%rbp), %rdx
    movq -16(%rbp), %rsi
    movq %rax, -48(%rbp)
    movq %rcx, %xmm1
    movq %rdx, %xmm2
    movq %rsi, %xmm3
mulsd %xmm1, %xmm1
movq %xmm2, %xmm0
mulsd %xmm3, %xmm0
addsd %xmm0, %xmm0
addsd %xmm0, %xmm0
subsd %xmm0, %xmm1
    movq -48(%rbp), %rax
    movq %xmm1, (%rax)
    movq -8(%rbp), %rax
    movq %rax, %xmm0
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_custom_discriminant_end:

__kefir_text_section_end:

