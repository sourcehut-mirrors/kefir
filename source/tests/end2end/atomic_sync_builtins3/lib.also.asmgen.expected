.att_syntax
.section .note.GNU-stack,"",%progbits

.global test_sync_bool_compare_and_swap16
.type test_sync_bool_compare_and_swap16, @function
.global test_sync_bool_compare_and_swap32
.type test_sync_bool_compare_and_swap32, @function
.global test_sync_bool_compare_and_swap64
.type test_sync_bool_compare_and_swap64, @function
.global test_sync_bool_compare_and_swap8
.type test_sync_bool_compare_and_swap8, @function
.global test_sync_val_compare_and_swap8
.type test_sync_val_compare_and_swap8, @function
.global test_sync_val_compare_and_swap16
.type test_sync_val_compare_and_swap16, @function
.global test_sync_val_compare_and_swap32
.type test_sync_val_compare_and_swap32, @function
.global test_sync_val_compare_and_swap64
.type test_sync_val_compare_and_swap64, @function

.section .text
__kefir_text_section_begin:
test_sync_bool_compare_and_swap16:
__kefir_text_func_test_sync_bool_compare_and_swap16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movw %si, -2(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movw -2(%rbp), %ax
    lock     cmpxchgw %cx, (%rdx)
    je _kefir_func_test_sync_bool_compare_and_swap16_label1
    movw %ax, -2(%rbp)
_kefir_func_test_sync_bool_compare_and_swap16_label1:
    sete %al
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_bool_compare_and_swap16_end:

test_sync_bool_compare_and_swap32:
__kefir_text_func_test_sync_bool_compare_and_swap32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movl %esi, -4(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movl -4(%rbp), %eax
    lock     cmpxchgl %ecx, (%rdx)
    je _kefir_func_test_sync_bool_compare_and_swap32_label1
    movl %eax, -4(%rbp)
_kefir_func_test_sync_bool_compare_and_swap32_label1:
    sete %al
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_bool_compare_and_swap32_end:

test_sync_bool_compare_and_swap64:
__kefir_text_func_test_sync_bool_compare_and_swap64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movq %rsi, -8(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movq -8(%rbp), %rax
    lock     cmpxchgq %rcx, (%rdx)
    je _kefir_func_test_sync_bool_compare_and_swap64_label1
    movq %rax, -8(%rbp)
_kefir_func_test_sync_bool_compare_and_swap64_label1:
    sete %al
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_bool_compare_and_swap64_end:

test_sync_bool_compare_and_swap8:
__kefir_text_func_test_sync_bool_compare_and_swap8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movb %sil, -1(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movb -1(%rbp), %al
    lock     cmpxchgb %cl, (%rdx)
    je _kefir_func_test_sync_bool_compare_and_swap8_label1
    movb %al, -1(%rbp)
_kefir_func_test_sync_bool_compare_and_swap8_label1:
    sete %al
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_bool_compare_and_swap8_end:

test_sync_val_compare_and_swap8:
__kefir_text_func_test_sync_val_compare_and_swap8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movb %sil, -1(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movb -1(%rbp), %al
    lock     cmpxchgb %cl, (%rdx)
    je _kefir_func_test_sync_val_compare_and_swap8_label1
    movb %al, -1(%rbp)
_kefir_func_test_sync_val_compare_and_swap8_label1:
    sete %al
    movb -1(%rbp), %al
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_val_compare_and_swap8_end:

test_sync_val_compare_and_swap16:
__kefir_text_func_test_sync_val_compare_and_swap16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movw %si, -2(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movw -2(%rbp), %ax
    lock     cmpxchgw %cx, (%rdx)
    je _kefir_func_test_sync_val_compare_and_swap16_label1
    movw %ax, -2(%rbp)
_kefir_func_test_sync_val_compare_and_swap16_label1:
    sete %al
    movw -2(%rbp), %ax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_val_compare_and_swap16_end:

test_sync_val_compare_and_swap32:
__kefir_text_func_test_sync_val_compare_and_swap32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movl %esi, -4(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movl -4(%rbp), %eax
    lock     cmpxchgl %ecx, (%rdx)
    je _kefir_func_test_sync_val_compare_and_swap32_label1
    movl %eax, -4(%rbp)
_kefir_func_test_sync_val_compare_and_swap32_label1:
    sete %al
    movl -4(%rbp), %eax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_val_compare_and_swap32_end:

test_sync_val_compare_and_swap64:
__kefir_text_func_test_sync_val_compare_and_swap64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdx, %rax
    movq %rsi, -8(%rbp)
    mov %rdi, %rdx
    mov %rax, %rcx
    movq -8(%rbp), %rax
    lock     cmpxchgq %rcx, (%rdx)
    je _kefir_func_test_sync_val_compare_and_swap64_label1
    movq %rax, -8(%rbp)
_kefir_func_test_sync_val_compare_and_swap64_label1:
    sete %al
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_sync_val_compare_and_swap64_end:

__kefir_text_section_end:

