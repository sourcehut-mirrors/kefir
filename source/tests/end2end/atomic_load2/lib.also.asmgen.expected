.att_syntax
.section .note.GNU-stack,"",%progbits

.global load_b
.global load_u8
.global load_f32
.global load_f64
.global load_u16
.global load_u32
.global load_u64
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
load_b:
    mov $5, %rsi
    call __atomic_load_1@PLT
    ret

load_u8:
    mov $5, %rsi
    call __atomic_load_1@PLT
    ret

load_f32:
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq %rax, %xmm0
    ret

load_f64:
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq %rax, %xmm0
    ret

load_u16:
    mov $5, %rsi
    call __atomic_load_2@PLT
    ret

load_u32:
    mov $5, %rsi
    call __atomic_load_4@PLT
    ret

load_u64:
    mov $5, %rsi
    call __atomic_load_8@PLT
    ret


