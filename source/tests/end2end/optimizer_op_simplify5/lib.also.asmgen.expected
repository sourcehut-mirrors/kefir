.att_syntax
.section .note.GNU-stack,"",%progbits

.global less_or_equalsld
.type less_or_equalsld, @function
.global greater_or_equalsd
.type greater_or_equalsd, @function
.global less_or_equalsd
.type less_or_equalsd, @function
.global greater_or_equalsld
.type greater_or_equalsld, @function

.section .text
__kefir_text_section_begin:
less_or_equalsld:
__kefir_text_func_less_or_equalsld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    fstcw -8(%rbp)
_kefir_func_less_or_equalsld_label0:
_kefir_func_less_or_equalsld_label1:
    lea 32(%rbp), %rax
    lea 16(%rbp), %rcx
    movq $0, -40(%rbp)
    fldt (%rax)
    fstpt -48(%rbp)
    movq $0, -24(%rbp)
    fldt (%rcx)
    fstpt -32(%rbp)
    fldt -32(%rbp)
    fstpt -80(%rbp)
    fldt -48(%rbp)
    fstpt -64(%rbp)
    fldt -80(%rbp)
    fldt -64(%rbp)
    mov $0, %rax
    fcomip %st(1)
    fstp %st(0)
    seta %al
    fldt -80(%rbp)
    fldt -64(%rbp)
    mov $0, %rcx
    mov $0, %rdx
    fucomip %st(1)
    fstp %st(0)
    setnp %cl
    cmovne %rdx, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_less_or_equalsld_end:

greater_or_equalsd:
__kefir_text_func_greater_or_equalsd_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    stmxcsr -8(%rbp)
_kefir_func_greater_or_equalsd_label0:
_kefir_func_greater_or_equalsd_label1:
    movq %xmm1, -24(%rbp)
    movq %xmm0, -16(%rbp)
    movq -16(%rbp), %rcx
    movq -24(%rbp), %rdx
    mov $0, %rax
    movq %rcx, %xmm0
    movq %rdx, %xmm1
    comisd %xmm1, %xmm0
    setae %al
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater_or_equalsd_end:

less_or_equalsd:
__kefir_text_func_less_or_equalsd_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    stmxcsr -8(%rbp)
_kefir_func_less_or_equalsd_label0:
_kefir_func_less_or_equalsd_label1:
    movq %xmm1, -24(%rbp)
    movq %xmm0, -16(%rbp)
    movq -16(%rbp), %rcx
    movq -24(%rbp), %rdx
    mov $0, %rax
    movq %rdx, %xmm0
    movq %rcx, %xmm1
    comisd %xmm1, %xmm0
    setae %al
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_less_or_equalsd_end:

greater_or_equalsld:
__kefir_text_func_greater_or_equalsld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    fstcw -8(%rbp)
_kefir_func_greater_or_equalsld_label0:
_kefir_func_greater_or_equalsld_label1:
    lea 32(%rbp), %rax
    lea 16(%rbp), %rcx
    movq $0, -40(%rbp)
    fldt (%rax)
    fstpt -48(%rbp)
    movq $0, -24(%rbp)
    fldt (%rcx)
    fstpt -32(%rbp)
    fldt -32(%rbp)
    fstpt -80(%rbp)
    fldt -48(%rbp)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fldt -80(%rbp)
    mov $0, %rax
    fcomip %st(1)
    fstp %st(0)
    seta %al
    fldt -80(%rbp)
    fldt -64(%rbp)
    mov $0, %rcx
    mov $0, %rdx
    fucomip %st(1)
    fstp %st(0)
    setnp %cl
    cmovne %rdx, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater_or_equalsld_end:

__kefir_text_section_end:

