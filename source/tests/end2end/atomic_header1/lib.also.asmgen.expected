.att_syntax
.section .note.GNU-stack,"",%progbits

.global clear
.global test_compare_exchange_char
.global test_compare_exchange_long
.global test_load_short
.global test_store_char
.global test_store_long
.global test_exchange_short
.global test_compare_exchange_int
.global test_load_char
.global test_load_long
.global test_store_int
.global test_atomic_signal_fence
.global test_atomic_thread_fence
.global test_load_int
.global test_and_set
.global test_fetch_add_short
.global test_fetch_and_short
.global test_fetch_sub_short
.global test_fetch_xor_short
.global test_exchange_int
.global test_fetch_or_int
.global test_is_lock_free
.global test_compare_exchange_short
.global test_fetch_add_char
.global test_fetch_add_long
.global test_fetch_and_char
.global test_fetch_and_long
.global test_fetch_or_short
.global test_fetch_sub_char
.global test_fetch_sub_long
.global test_fetch_xor_char
.global test_fetch_xor_long
.global test_store_short
.global test_exchange_char
.global test_exchange_long
.global test_fetch_add_int
.global test_fetch_and_int
.global test_fetch_or_char
.global test_fetch_or_long
.global test_fetch_sub_int
.global test_fetch_xor_int
.extern __atomic_exchange
.extern __atomic_fetch_add_1
.extern __atomic_fetch_add_2
.extern __atomic_fetch_add_4
.extern __atomic_fetch_add_8
.extern __atomic_fetch_and_1
.extern __atomic_fetch_and_2
.extern __atomic_fetch_and_4
.extern __atomic_fetch_and_8
.extern __atomic_fetch_sub_1
.extern __atomic_fetch_sub_2
.extern __atomic_fetch_sub_4
.extern __atomic_fetch_sub_8
.extern __atomic_fetch_xor_1
.extern __atomic_fetch_xor_2
.extern __atomic_fetch_xor_4
.extern __atomic_fetch_xor_8
.extern __atomic_store
.extern __atomic_load
.extern __atomic_fetch_or_1
.extern __atomic_fetch_or_2
.extern __atomic_fetch_or_4
.extern __atomic_fetch_or_8
.extern __kefir_atomic_seq_cst_test_and_set
.extern __atomic_is_lock_free
.extern __atomic_compare_exchange
.extern __kefir_atomic_seq_cst_clear
.extern __kefir_atomic_seq_cst_fence
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint

.section .text
clear:
    push %rbp
    mov %rsp, %rbp
_kefir_func_clear_label0:
_kefir_func_clear_label1:
    call __kefir_atomic_seq_cst_clear@PLT
    pop %rbp
    ret

test_compare_exchange_char:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_compare_exchange_char_label0:
    mov %rsi, %rax
    mov %rdi, %rcx
_kefir_func_test_compare_exchange_char_label1:
    lea -1(%rbp), %rsi
    movsx %dl, %rdx
    movb %dl, (%rsi)
    mov $1, %rdx
    lea -1(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rcx, %rsi
    mov %rax, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    mov %rax, %rcx
    and $1, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_compare_exchange_long:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_compare_exchange_long_label0:
    mov %rsi, %rax
    mov %rdi, %rcx
_kefir_func_test_compare_exchange_long_label1:
    lea -8(%rbp), %rsi
    movq %rdx, (%rsi)
    mov $8, %rdx
    lea -8(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rcx, %rsi
    mov %rax, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    mov %rax, %rcx
    and $1, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_load_short:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_load_short_label0:
    mov %rdi, %rax
_kefir_func_test_load_short_label1:
    lea -2(%rbp), %rcx
    movw %dx, (%rcx)
    mov $2, %rcx
    lea -2(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_load@PLT
    lea -2(%rbp), %rax
    movsxw (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_store_char:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_store_char_label0:
    mov %rdi, %rax
_kefir_func_test_store_char_label1:
    lea -1(%rbp), %rcx
    movsx %sil, %rdx
    movb %dl, (%rcx)
    mov $1, %rcx
    lea -1(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret

test_store_long:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_store_long_label0:
    mov %rdi, %rax
_kefir_func_test_store_long_label1:
    lea -8(%rbp), %rcx
    movq %rsi, (%rcx)
    mov $8, %rcx
    lea -8(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret

test_exchange_short:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_exchange_short_label0:
    mov %rdi, %rax
_kefir_func_test_exchange_short_label1:
    lea -2(%rbp), %rcx
    movsx %si, %rdx
    movw %dx, (%rcx)
    lea -4(%rbp), %rcx
    movw %dx, (%rcx)
    mov $2, %rcx
    lea -2(%rbp), %rdx
    lea -4(%rbp), %r8
    mov $5, %r9
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    mov %r9, %r8
    call __atomic_exchange@PLT
    lea -4(%rbp), %rax
    movsxw (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_compare_exchange_int:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_compare_exchange_int_label0:
    mov %rsi, %rax
    mov %rdi, %rcx
_kefir_func_test_compare_exchange_int_label1:
    lea -4(%rbp), %rsi
    movsx %edx, %rdx
    movl %edx, (%rsi)
    mov $4, %rdx
    lea -4(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rcx, %rsi
    mov %rax, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    mov %rax, %rcx
    and $1, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_load_char:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_load_char_label0:
    mov %rdi, %rax
_kefir_func_test_load_char_label1:
    lea -1(%rbp), %rcx
    movb %dl, (%rcx)
    mov $1, %rcx
    lea -1(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_load@PLT
    lea -1(%rbp), %rax
    movsxb (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_load_long:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_load_long_label0:
    mov %rdi, %rax
_kefir_func_test_load_long_label1:
    lea -8(%rbp), %rcx
    movq %rdx, (%rcx)
    mov $8, %rcx
    lea -8(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_load@PLT
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_store_int:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_store_int_label0:
    mov %rdi, %rax
_kefir_func_test_store_int_label1:
    lea -4(%rbp), %rcx
    movsx %esi, %rdx
    movl %edx, (%rcx)
    mov $4, %rcx
    lea -4(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret

test_atomic_signal_fence:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_atomic_signal_fence_label0:
_kefir_func_test_atomic_signal_fence_label1:
    call __kefir_atomic_seq_cst_fence@PLT
    pop %rbp
    ret

test_atomic_thread_fence:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_atomic_thread_fence_label0:
_kefir_func_test_atomic_thread_fence_label1:
    call __kefir_atomic_seq_cst_fence@PLT
    pop %rbp
    ret

test_load_int:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_load_int_label0:
    mov %rdi, %rax
_kefir_func_test_load_int_label1:
    lea -4(%rbp), %rcx
    movl %edx, (%rcx)
    mov $4, %rcx
    lea -4(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_load@PLT
    lea -4(%rbp), %rax
    movsxl (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_and_set:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_and_set_label0:
_kefir_func_test_and_set_label1:
    call __kefir_atomic_seq_cst_test_and_set@PLT
    mov %rax, %rcx
    and $1, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_fetch_add_short:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_add_short_label0:
_kefir_func_test_fetch_add_short_label1:
    movq __atomic_fetch_add_2@GOTPCREL(%rip), %rax
    movsx %si, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cx, %rax
    pop %rbp
    ret

test_fetch_and_short:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_and_short_label0:
_kefir_func_test_fetch_and_short_label1:
    movq __atomic_fetch_and_2@GOTPCREL(%rip), %rax
    movsx %si, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cx, %rax
    pop %rbp
    ret

test_fetch_sub_short:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_sub_short_label0:
_kefir_func_test_fetch_sub_short_label1:
    movq __atomic_fetch_sub_2@GOTPCREL(%rip), %rax
    movsx %si, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cx, %rax
    pop %rbp
    ret

test_fetch_xor_short:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_xor_short_label0:
_kefir_func_test_fetch_xor_short_label1:
    movq __atomic_fetch_xor_2@GOTPCREL(%rip), %rax
    movsx %si, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cx, %rax
    pop %rbp
    ret

test_exchange_int:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_exchange_int_label0:
    mov %rdi, %rax
_kefir_func_test_exchange_int_label1:
    lea -4(%rbp), %rcx
    movsx %esi, %rdx
    movl %edx, (%rcx)
    lea -8(%rbp), %rcx
    movl %edx, (%rcx)
    mov $4, %rcx
    lea -4(%rbp), %rdx
    lea -8(%rbp), %r8
    mov $5, %r9
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    mov %r9, %r8
    call __atomic_exchange@PLT
    lea -8(%rbp), %rax
    movsxl (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_fetch_or_int:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_or_int_label0:
_kefir_func_test_fetch_or_int_label1:
    movq __atomic_fetch_or_4@GOTPCREL(%rip), %rax
    movsx %esi, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret

test_is_lock_free:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_is_lock_free_label0:
_kefir_func_test_is_lock_free_label1:
    mov $1, %rax
    xor %rcx, %rcx
    mov %rax, %rdi
    mov %rcx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rcx
    and $1, %rcx
    movsx %ecx, %rax
    xor %rcx, %rcx
    cmp $2, %rax
    sete %cl
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label20
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label3
_kefir_func_test_is_lock_free_label20:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label2:
    mov $1, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label3:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label21
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label5
_kefir_func_test_is_lock_free_label21:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label4:
    mov $2, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label5:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label22
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label7
_kefir_func_test_is_lock_free_label22:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label6:
    mov $4, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label7:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label23
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label9
_kefir_func_test_is_lock_free_label23:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label8:
    mov $4, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label9:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label24
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label11
_kefir_func_test_is_lock_free_label24:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label10:
    mov $2, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label11:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label25
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label13
_kefir_func_test_is_lock_free_label25:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label12:
    mov $4, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label13:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label26
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label15
_kefir_func_test_is_lock_free_label26:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label14:
    mov $8, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label15:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label27
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label17
_kefir_func_test_is_lock_free_label27:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label16:
    mov $8, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label17:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    xor %rcx, %rcx
    test %rax, %rax
    sete %cl
    test %rcx, %rcx
    jz _kefir_func_test_is_lock_free_label28
    mov %rax, %rcx
    jmp _kefir_func_test_is_lock_free_label19
_kefir_func_test_is_lock_free_label28:
    mov %rax, %rcx
_kefir_func_test_is_lock_free_label18:
    mov $8, %rax
    xor %rdx, %rdx
    movq %rcx, -16(%rbp)
    mov %rax, %rdi
    mov %rdx, %rsi
    call __atomic_is_lock_free@PLT
    mov %rax, %rdx
    movq -16(%rbp), %rcx
    and $1, %rdx
    movsx %edx, %rax
    xor %rdx, %rdx
    cmp $2, %rax
    sete %dl
    test %rdx, %rdx
    setne %al
    movzx %al, %rax
    test %rcx, %rcx
    setne %dl
    test %rax, %rax
    setne %al
    and %dl, %al
    movzx %al, %rdx
    mov %rdx, %rcx
_kefir_func_test_is_lock_free_label19:
    test %rcx, %rcx
    setne %al
    movzx %al, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_compare_exchange_short:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_compare_exchange_short_label0:
    mov %rsi, %rax
    mov %rdi, %rcx
_kefir_func_test_compare_exchange_short_label1:
    lea -2(%rbp), %rsi
    movsx %dx, %rdx
    movw %dx, (%rsi)
    mov $2, %rdx
    lea -2(%rbp), %r8
    mov $5, %r9
    mov $5, %r10
    mov %rdx, %rdi
    mov %rcx, %rsi
    mov %rax, %rdx
    mov %r8, %rcx
    mov %r9, %r8
    mov %r10, %r9
    call __atomic_compare_exchange@PLT
    mov %rax, %rcx
    and $1, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_fetch_add_char:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_add_char_label0:
_kefir_func_test_fetch_add_char_label1:
    movq __atomic_fetch_add_1@GOTPCREL(%rip), %rax
    movsx %sil, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cl, %rax
    pop %rbp
    ret

test_fetch_add_long:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_add_long_label0:
_kefir_func_test_fetch_add_long_label1:
    movq __atomic_fetch_add_8@GOTPCREL(%rip), %rax
    mov $5, %rcx
    mov %rcx, %rdx
    call *%rax
    mov %rax, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_fetch_and_char:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_and_char_label0:
_kefir_func_test_fetch_and_char_label1:
    movq __atomic_fetch_and_1@GOTPCREL(%rip), %rax
    movsx %sil, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cl, %rax
    pop %rbp
    ret

test_fetch_and_long:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_and_long_label0:
_kefir_func_test_fetch_and_long_label1:
    movq __atomic_fetch_and_8@GOTPCREL(%rip), %rax
    mov $5, %rcx
    mov %rcx, %rdx
    call *%rax
    mov %rax, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_fetch_or_short:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_or_short_label0:
_kefir_func_test_fetch_or_short_label1:
    movq __atomic_fetch_or_2@GOTPCREL(%rip), %rax
    movsx %si, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cx, %rax
    pop %rbp
    ret

test_fetch_sub_char:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_sub_char_label0:
_kefir_func_test_fetch_sub_char_label1:
    movq __atomic_fetch_sub_1@GOTPCREL(%rip), %rax
    movsx %sil, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cl, %rax
    pop %rbp
    ret

test_fetch_sub_long:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_sub_long_label0:
_kefir_func_test_fetch_sub_long_label1:
    movq __atomic_fetch_sub_8@GOTPCREL(%rip), %rax
    mov $5, %rcx
    mov %rcx, %rdx
    call *%rax
    mov %rax, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_fetch_xor_char:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_xor_char_label0:
_kefir_func_test_fetch_xor_char_label1:
    movq __atomic_fetch_xor_1@GOTPCREL(%rip), %rax
    movsx %sil, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cl, %rax
    pop %rbp
    ret

test_fetch_xor_long:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_xor_long_label0:
_kefir_func_test_fetch_xor_long_label1:
    movq __atomic_fetch_xor_8@GOTPCREL(%rip), %rax
    mov $5, %rcx
    mov %rcx, %rdx
    call *%rax
    mov %rax, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_store_short:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_store_short_label0:
    mov %rdi, %rax
_kefir_func_test_store_short_label1:
    lea -2(%rbp), %rcx
    movsx %si, %rdx
    movw %dx, (%rcx)
    mov $2, %rcx
    lea -2(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret

test_exchange_char:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_exchange_char_label0:
    mov %rdi, %rax
_kefir_func_test_exchange_char_label1:
    lea -1(%rbp), %rcx
    movsx %sil, %rdx
    movb %dl, (%rcx)
    lea -2(%rbp), %rcx
    movb %dl, (%rcx)
    mov $1, %rcx
    lea -1(%rbp), %rdx
    lea -2(%rbp), %r8
    mov $5, %r9
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    mov %r9, %r8
    call __atomic_exchange@PLT
    lea -2(%rbp), %rax
    movsxb (%rax), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_exchange_long:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test_exchange_long_label0:
    mov %rdi, %rax
_kefir_func_test_exchange_long_label1:
    lea -8(%rbp), %rcx
    movq %rsi, (%rcx)
    lea -16(%rbp), %rcx
    movq %rdx, (%rcx)
    mov $8, %rcx
    lea -8(%rbp), %rdx
    lea -16(%rbp), %r8
    mov $5, %r9
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    mov %r9, %r8
    call __atomic_exchange@PLT
    movq -16(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret

test_fetch_add_int:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_add_int_label0:
_kefir_func_test_fetch_add_int_label1:
    movq __atomic_fetch_add_4@GOTPCREL(%rip), %rax
    movsx %esi, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret

test_fetch_and_int:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_and_int_label0:
_kefir_func_test_fetch_and_int_label1:
    movq __atomic_fetch_and_4@GOTPCREL(%rip), %rax
    movsx %esi, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret

test_fetch_or_char:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_or_char_label0:
_kefir_func_test_fetch_or_char_label1:
    movq __atomic_fetch_or_1@GOTPCREL(%rip), %rax
    movsx %sil, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %cl, %rax
    pop %rbp
    ret

test_fetch_or_long:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_or_long_label0:
_kefir_func_test_fetch_or_long_label1:
    movq __atomic_fetch_or_8@GOTPCREL(%rip), %rax
    mov $5, %rcx
    mov %rcx, %rdx
    call *%rax
    mov %rax, %rcx
    mov %rcx, %rax
    pop %rbp
    ret

test_fetch_sub_int:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_sub_int_label0:
_kefir_func_test_fetch_sub_int_label1:
    movq __atomic_fetch_sub_4@GOTPCREL(%rip), %rax
    movsx %esi, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret

test_fetch_xor_int:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test_fetch_xor_int_label0:
_kefir_func_test_fetch_xor_int_label1:
    movq __atomic_fetch_xor_4@GOTPCREL(%rip), %rax
    movsx %esi, %rcx
    mov $5, %rdx
    mov %rcx, %rsi
    call *%rax
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret


