.att_syntax
.section .note.GNU-stack,"",%progbits

.extern fn1
.extern fn2
.extern fn3
.extern fn4
.extern fn5
.extern fn6
.global test1
.type test1, @function
.global test2
.type test2, @function
.global test3
.type test3, @function
.global test4
.type test4, @function
.global test5
.type test5, @function
.global test6
.type test6, @function

.section .text
__kefir_text_section_begin:
test1:
__kefir_text_func_test1_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test1_label0:
    call fn1@PLT
    pop %rbp
    ret
__kefir_text_func_test1_end:

test2:
__kefir_text_func_test2_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test2_label0:
    call fn2@PLT
    pop %rbp
    ret
__kefir_text_func_test2_end:

test3:
__kefir_text_func_test3_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test3_label0:
    call fn3@PLT
    pop %rbp
    ret
__kefir_text_func_test3_end:

test4:
__kefir_text_func_test4_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_test4_label0:
    call fn4@PLT
    pop %rbp
    ret
__kefir_text_func_test4_end:

test5:
__kefir_text_func_test5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_test5_label0:
    call fn5@PLT
    movq %rax, -16(%rbp)
    movq %rdx, -8(%rbp)
    movq -16(%rbp), %rax
    movq -8(%rbp), %rdx
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test5_end:

test6:
__kefir_text_func_test6_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %rcx
_kefir_func_test6_label0:
    movq %rcx, -16(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    call fn6@PLT
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    movq -16(%rbp), %rcx
    mov %rcx, %rax
    movdqu (%rdi), %xmm0
    movdqu %xmm0, (%rax)
    movdqu 16(%rdi), %xmm0
    movdqu %xmm0, 16(%rax)
    movdqu 32(%rdi), %xmm0
    movdqu %xmm0, 32(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test6_end:

__kefir_text_section_end:

