.att_syntax
.section .note.GNU-stack,"",%progbits

.global test1
.type test1, @function
.global test2
.type test2, @function
.global test3
.type test3, @function
.global test4
.type test4, @function
.global test5
.type test5, @function
.global test6
.type test6, @function

.section .text
__kefir_text_section_begin:
test1:
__kefir_text_func_test1_begin:
    mov %rdi, %rax
    shl $47, %rax
    shr $47, %rax
    xor %ecx, %ecx
    cmp $0, %eax
    sete %cl
    shl $47, %rdi
    shr $47, %rdi
    xor %eax, %eax
    rep bsf %edi, %eax
    test %cl, %cl
    cmovnz %rsi, %rax
    ret
__kefir_text_func_test1_end:

test2:
__kefir_text_func_test2_begin:
    mov %rdi, %rax
    shl $32, %rax
    shr $32, %rax
    xor %ecx, %ecx
    cmp $0, %eax
    sete %cl
    xor %eax, %eax
    rep bsf %edi, %eax
    test %cl, %cl
    cmovnz %rsi, %rax
    ret
__kefir_text_func_test2_end:

test3:
__kefir_text_func_test3_begin:
    mov %rdi, %rax
    shl $5, %rax
    shr $5, %rax
    xor %ecx, %ecx
    cmp $0, %rax
    sete %cl
    shl $5, %rdi
    shr $5, %rdi
    xor %eax, %eax
    rep bsf %rdi, %rax
    test %cl, %cl
    cmovnz %rsi, %rax
    ret
__kefir_text_func_test3_end:

test4:
__kefir_text_func_test4_begin:
    mov %rdi, %rax
    shl $0, %rax
    shr $0, %rax
    xor %ecx, %ecx
    cmp $0, %rax
    sete %cl
    xor %eax, %eax
    rep bsf %rdi, %rax
    test %cl, %cl
    cmovnz %rsi, %rax
    ret
__kefir_text_func_test4_end:

test5:
__kefir_text_func_test5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    mov %rdx, %r8
    movq %rdi, -32(%rbp)
    movq %rsi, -24(%rbp)
    movl $0, -48(%rbp)
    movl $0, -44(%rbp)
    movl $0, -40(%rbp)
    movl $0, -36(%rbp)
    movq %r8, -16(%rbp)
    leaq -32(%rbp), %rax
    mov %rax, %rdi
    leaq -48(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -16(%rbp), %r8
    xor %ecx, %ecx
    cmp $0, %al
    sete %cl
    movq %r8, -48(%rbp)
    movq %rcx, -40(%rbp)
    leaq -32(%rbp), %rax
    mov %rax, %rdi
    mov $120, %rsi
    xor %edx, %edx
    call __kefir_bigint_trailing_zeros
    movq -48(%rbp), %r8
    movq -40(%rbp), %rcx
    mov %r8, %rdx
    test %cl, %cl
    cmovnz %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test5_end:

test6:
__kefir_text_func_test6_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %r9
    lea 16(%rbp), %rcx
    movl $0, -64(%rbp)
    movl $0, -60(%rbp)
    movl $0, -56(%rbp)
    movl $0, -52(%rbp)
    movl $0, -48(%rbp)
    movl $0, -44(%rbp)
    movl $0, -40(%rbp)
    movl $0, -36(%rbp)
    movl $0, -32(%rbp)
    movl $0, -28(%rbp)
    movq %r9, -24(%rbp)
    movq %rcx, -16(%rbp)
    mov %rcx, %rdi
    leaq -64(%rbp), %rax
    mov %rax, %rsi
    mov $315, %rdx
    call __kefir_bigint_unsigned_compare
    movq -24(%rbp), %r9
    movq -16(%rbp), %rcx
    xor %r8d, %r8d
    cmp $0, %al
    sete %r8b
    movq %r9, -64(%rbp)
    movq %r8, -56(%rbp)
    mov %rcx, %rdi
    mov $315, %rsi
    xor %edx, %edx
    call __kefir_bigint_trailing_zeros
    movq -64(%rbp), %r9
    movq -56(%rbp), %r8
    mov %r9, %rdi
    test %r8b, %r8b
    cmovnz %rdi, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test6_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_unsigned_compare:
__kefir_text_func___kefir_bigint_unsigned_compare_begin:
    push %rbx
    push %r12
    push %r13
    push %r14
    mov %rdx, %r13
    mov %rsi, %r14
    mov %rdi, %r11
    mov %r13, %rdx
    sub $-7, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %rcx
    div %rcx
    mov %rax, %rbx
    mov %rbx, %r12
_kefir_func___kefir_bigint_unsigned_compare_label1:
    cmp $0, %r12
    ja _kefir_func___kefir_bigint_unsigned_compare_label3
    xor %eax, %eax
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    ret
_kefir_func___kefir_bigint_unsigned_compare_label3:
    mov %r12, %rax
    sub $1, %rax
    mov %r11, %rdi
    add %rax, %rdi
    movzxb (%rdi), %r10
    mov %r12, %rax
    sub $1, %rax
    mov %r14, %rsi
    add %rax, %rsi
    movzxb (%rsi), %r9
    cmp %rbx, %r12
    je _kefir_func___kefir_bigint_unsigned_compare_label8
    mov %r10, %rcx
    mov %r9, %r8
_kefir_func___kefir_bigint_unsigned_compare_label4:
    cmp %r8d, %ecx
    ja _kefir_func___kefir_bigint_unsigned_compare_label7
    mov %r12, %rax
    add $-1, %rax
    cmp %r8d, %ecx
    jb _kefir_func___kefir_bigint_unsigned_compare_label6
    mov %rax, %r12
    jmp _kefir_func___kefir_bigint_unsigned_compare_label1
_kefir_func___kefir_bigint_unsigned_compare_label6:
    mov $-1, %rax
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    ret
_kefir_func___kefir_bigint_unsigned_compare_label7:
    mov $1, %rax
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    ret
_kefir_func___kefir_bigint_unsigned_compare_label8:
    mov %r13, %rcx
    sub $1, %rcx
    mov %r13, %rdx
    sub $1, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %rsi
    div %rsi
    imul $8, %rax, %r8
    mov %rcx, %rdx
    sub %r8, %rdx
    add $1, %rdx
    mov %edx, %ecx
    mov $1, %r8
    shl %cl, %r8
    sub $1, %r8
    mov %r10, %rcx
    and %r8d, %ecx
    and %r8d, %r9d
    mov %r9, %r8
    jmp _kefir_func___kefir_bigint_unsigned_compare_label4
__kefir_text_func___kefir_bigint_unsigned_compare_end:

__kefir_bigint_trailing_zeros:
__kefir_text_func___kefir_bigint_trailing_zeros_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    push %r12
    push %r13
    push %r14
    push %r15
    sub $24, %rsp
    movq %rdx, -64(%rbp)
    movq %rsi, -56(%rbp)
    movq %rdi, -48(%rbp)
    cmpq $0, -56(%rbp)
    je _kefir_func___kefir_bigint_trailing_zeros_label9
    movq -56(%rbp), %rsi
    sub $-7, %rsi
    mov %rsi, %rax
    xor %edx, %edx
    mov $8, %rcx
    div %rcx
    mov %rax, %r14
    xor %r15d, %r15d
    xor %r10d, %r10d
_kefir_func___kefir_bigint_trailing_zeros_label2:
    cmp %r14, %r15
    jb _kefir_func___kefir_bigint_trailing_zeros_label4
    movq -64(%rbp), %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_trailing_zeros_label4:
    movq -48(%rbp), %rdi
    add %r15, %rdi
    movb (%rdi), %r12b
    mov %r15, %rcx
    add $1, %rcx
    mov %r14, %rax
    sub $1, %rax
    imul $8, %rax, %r8
    movq -56(%rbp), %rsi
    sub %r8, %rsi
    mov $8, %r8
    cmp %r14, %rcx
    cmovae %rsi, %r8
    mov %r10, %r9
    add $8, %r9
    movzx %r12b, %rcx
    cmp $0, %ecx
    je _kefir_func___kefir_bigint_trailing_zeros_label6
    xor %ebx, %ebx
    mov %r10, %r13
    jmp _kefir_func___kefir_bigint_trailing_zeros_label5
_kefir_func___kefir_bigint_trailing_zeros_label5:
    cmp %r8, %rbx
    jb _kefir_func___kefir_bigint_trailing_zeros_label7
    mov %r13, %r9
_kefir_func___kefir_bigint_trailing_zeros_label6:
    mov %r15, %rcx
    add $1, %rcx
    mov %rcx, %r15
    mov %r9, %r10
    jmp _kefir_func___kefir_bigint_trailing_zeros_label2
_kefir_func___kefir_bigint_trailing_zeros_label7:
    mov %rbx, %r9
    add $1, %r9
    mov %r13, %r10
    add $1, %r10
    movzx %r12b, %r11
    mov %rbx, %rcx
    sar %cl, %r11d
    and $1, %r11d
    cmp $1, %r11d
    je _kefir_func___kefir_bigint_trailing_zeros_label8
    mov %r9, %rbx
    mov %r10, %r13
    jmp _kefir_func___kefir_bigint_trailing_zeros_label5
_kefir_func___kefir_bigint_trailing_zeros_label8:
    mov %r13, %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_trailing_zeros_label9:
    movq -64(%rbp), %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_trailing_zeros_end:


