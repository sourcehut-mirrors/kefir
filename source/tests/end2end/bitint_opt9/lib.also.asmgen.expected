.att_syntax
.section .note.GNU-stack,"",%progbits

.global get1
.type get1, @function
.global get2
.type get2, @function
.global get3
.type get3, @function
.global get4
.type get4, @function

.section .text
__kefir_text_section_begin:
get1:
__kefir_text_func_get1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %r8
_kefir_func_get1_label0:
    movl $3956159045, -64(%rbp)
    movl $3168730847, -60(%rbp)
    movl $1164413194, -56(%rbp)
    movl $291, -52(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -48(%rbp)
    movq %r8, -64(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $106, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_signed
    movq -64(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, -24(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -16(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -8(%rbp)
    movq %r8, -64(%rbp)
    leaq -24(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    call __kefir_bigint_invert
    movq -64(%rbp), %r8
    mov %r8, %rax
    movq -24(%rbp), %rcx
    movq %rcx, (%rax)
    movq -16(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -8(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get1_end:

get2:
__kefir_text_func_get2_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %r8
_kefir_func_get2_label0:
    movl $3956159045, -64(%rbp)
    movl $3168730847, -60(%rbp)
    movl $1164413194, -56(%rbp)
    movl $291, -52(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -48(%rbp)
    movq %r8, -64(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $105, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_unsigned
    movq -64(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, -24(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -16(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -8(%rbp)
    movq %r8, -64(%rbp)
    leaq -24(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    call __kefir_bigint_invert
    movq -64(%rbp), %r8
    movq -24(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -48(%rbp)
    movq %r8, -40(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_unsigned
    movq -40(%rbp), %r8
    mov %r8, %rax
    movq -64(%rbp), %rcx
    movq %rcx, (%rax)
    movq -56(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -48(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get2_end:

get3:
__kefir_text_func_get3_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %r8
_kefir_func_get3_label0:
    movl $3956159045, -64(%rbp)
    movl $3168730847, -60(%rbp)
    movl $1164413194, -56(%rbp)
    movl $291, -52(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -48(%rbp)
    movq %r8, -64(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $106, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_signed
    movq -64(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, -24(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -16(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -8(%rbp)
    movq %r8, -64(%rbp)
    leaq -24(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    call __kefir_bigint_negate
    movq -64(%rbp), %r8
    mov %r8, %rax
    movq -24(%rbp), %rcx
    movq %rcx, (%rax)
    movq -16(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -8(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get3_end:

get4:
__kefir_text_func_get4_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %r8
_kefir_func_get4_label0:
    movl $3956159045, -64(%rbp)
    movl $3168730847, -60(%rbp)
    movl $1164413194, -56(%rbp)
    movl $291, -52(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -48(%rbp)
    movq %r8, -64(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    mov $105, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_unsigned
    movq -64(%rbp), %r8
    movq -48(%rbp), %rax
    movq %rax, -24(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -16(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -8(%rbp)
    movq %r8, -64(%rbp)
    leaq -24(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    call __kefir_bigint_negate
    movq -64(%rbp), %r8
    movq -24(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -48(%rbp)
    movq %r8, -40(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    mov $150, %rsi
    mov $150, %rdx
    call __kefir_bigint_cast_unsigned
    movq -40(%rbp), %r8
    mov %r8, %rax
    movq -64(%rbp), %rcx
    movq %rcx, (%rax)
    movq -56(%rbp), %rcx
    movq %rcx, 8(%rax)
    movq -48(%rbp), %rcx
    movq %rcx, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get4_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_invert:
__kefir_text_func___kefir_bigint_invert_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
_kefir_func___kefir_bigint_invert_label0:
    movq %rsi, -32(%rbp)
    movq %rdi, -24(%rbp)
    movq -32(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_invert_label1:
    movq -8(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_invert_label3
_kefir_func___kefir_bigint_invert_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_invert_label3:
    movq -24(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -24(%rbp), %rcx
    movq -8(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    and $255, %rax
    not %eax
    movb %al, (%rcx)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_invert_label1
__kefir_text_func___kefir_bigint_invert_end:

__kefir_bigint_negate:
__kefir_text_func___kefir_bigint_negate_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func___kefir_bigint_negate_label0:
    movq %rsi, -16(%rbp)
    movq %rdi, -8(%rbp)
    movq -8(%rbp), %rdi
    movq -16(%rbp), %rsi
    call __kefir_bigint_invert
    movq -8(%rbp), %rdi
    movq -16(%rbp), %rdx
    mov $1, %rsi
    call __kefir_bigint_util_add_digit_zero_extended
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_negate_end:

__kefir_bigint_cast_signed:
__kefir_text_func___kefir_bigint_cast_signed_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func___kefir_bigint_cast_signed_label0:
    movq %rdx, -32(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -88(%rbp)
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -56(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label17
_kefir_func___kefir_bigint_cast_signed_label1:
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label13
_kefir_func___kefir_bigint_cast_signed_label2:
    movq -40(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -24(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -88(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -64(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -80(%rbp)
    movq -64(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    mov $0, %rcx
    cmp %rdx, %rax
    setb %cl
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label10
_kefir_func___kefir_bigint_cast_signed_label3:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_signed_label4:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label6
_kefir_func___kefir_bigint_cast_signed_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label6:
    movl -80(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label9
_kefir_func___kefir_bigint_cast_signed_label7:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
_kefir_func___kefir_bigint_cast_signed_label8:
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_signed_label4
_kefir_func___kefir_bigint_cast_signed_label9:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    mov $0, %rcx
    and $255, %rcx
    not %ecx
    movb %cl, (%rax)
    jmp _kefir_func___kefir_bigint_cast_signed_label8
_kefir_func___kefir_bigint_cast_signed_label10:
    movl -80(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label12
_kefir_func___kefir_bigint_cast_signed_label11:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label3
_kefir_func___kefir_bigint_cast_signed_label12:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label3
_kefir_func___kefir_bigint_cast_signed_label13:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_signed_label14:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label16
_kefir_func___kefir_bigint_cast_signed_label15:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label16:
    movq -88(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_signed_label14
_kefir_func___kefir_bigint_cast_signed_label17:
    movq -88(%rbp), %rax
    movq -48(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -56(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -76(%rbp)
    movl -76(%rbp), %eax
    test %eax, %eax
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_signed_label20
_kefir_func___kefir_bigint_cast_signed_label18:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
_kefir_func___kefir_bigint_cast_signed_label19:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_signed_label20:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    not %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -88(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    or %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_signed_label19
__kefir_text_func___kefir_bigint_cast_signed_end:

__kefir_bigint_cast_unsigned:
__kefir_text_func___kefir_bigint_cast_unsigned_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
_kefir_func___kefir_bigint_cast_unsigned_label0:
    movq %rdx, -32(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -80(%rbp)
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -32(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -56(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label12
_kefir_func___kefir_bigint_cast_unsigned_label1:
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label8
_kefir_func___kefir_bigint_cast_unsigned_label2:
    movq -40(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -64(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    mov $0, %rcx
    cmp %rdx, %rax
    setb %cl
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label7
_kefir_func___kefir_bigint_cast_unsigned_label3:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label4:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label6
_kefir_func___kefir_bigint_cast_unsigned_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label6:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label4
_kefir_func___kefir_bigint_cast_unsigned_label7:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label3
_kefir_func___kefir_bigint_cast_unsigned_label8:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label9:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label11
_kefir_func___kefir_bigint_cast_unsigned_label10:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label11:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label9
_kefir_func___kefir_bigint_cast_unsigned_label12:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_cast_unsigned_end:

__kefir_bigint_util_add_digit_zero_extended:
__kefir_text_func___kefir_bigint_util_add_digit_zero_extended_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label0:
    movq %rdx, -48(%rbp)
    movb %sil, -52(%rbp)
    movq %rdi, -40(%rbp)
    movq -48(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -24(%rbp)
    movl $0, -32(%rbp)
    movl $0, -56(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -16(%rbp)
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label1:
    movq -16(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_util_add_digit_zero_extended_label3
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label3:
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -4(%rbp)
    movq -16(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    jz _kefir_func___kefir_bigint_util_add_digit_zero_extended_label7
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label4
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label7:
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label6
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label4:
    movb -52(%rbp), %al
    and $255, %rax
    mov %rax, %rsi
    leaq -28(%rbp), %rdi
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label5:
    movl %esi, (%rdi)
    movl -56(%rbp), %eax
    movl -4(%rbp), %ecx
    movl -28(%rbp), %edx
    add %ecx, %eax
    add %edx, %eax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -40(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb %al, (%rcx)
    movl -8(%rbp), %eax
    mov $8, %rcx
    movsx %ecx, %rdx
    mov $1, %rcx
    imul %rdx, %rcx
    shr %cl, %eax
    movl %eax, -56(%rbp)
    movq -16(%rbp), %rax
    add $1, %rax
    movq %rax, -16(%rbp)
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label1
_kefir_func___kefir_bigint_util_add_digit_zero_extended_label6:
    movl -32(%rbp), %eax
    mov %rax, %rsi
    leaq -28(%rbp), %rdi
    jmp _kefir_func___kefir_bigint_util_add_digit_zero_extended_label5
__kefir_text_func___kefir_bigint_util_add_digit_zero_extended_end:


