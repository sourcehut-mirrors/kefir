.att_syntax
.section .note.GNU-stack,"",%progbits

.extern i8
.extern ld
.extern f32
.extern f64
.extern i16
.extern i32
.extern i64
.extern ptr
.global predec_i8
.type predec_i8, @function
.global predec_ld
.type predec_ld, @function
.global preinc_i8
.type preinc_i8, @function
.global preinc_ld
.type preinc_ld, @function
.global predec_f32
.type predec_f32, @function
.global predec_f64
.type predec_f64, @function
.global predec_i16
.type predec_i16, @function
.global predec_i32
.type predec_i32, @function
.global predec_i64
.type predec_i64, @function
.global predec_ptr
.type predec_ptr, @function
.global preinc_f32
.type preinc_f32, @function
.global preinc_f64
.type preinc_f64, @function
.global preinc_i16
.type preinc_i16, @function
.global preinc_i32
.type preinc_i32, @function
.global preinc_i64
.type preinc_i64, @function
.global preinc_ptr
.type preinc_ptr, @function
.extern __kefirrt_fenv_update

.section .text
__kefir_text_section_begin:
predec_i8:
__kefir_text_func_predec_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i8@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_predec_i8_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -32(%rbp), %r9
    movsx %al, %rax
    mov %rax, %r10
    add $-1, %r10b
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_predec_i8_label4
_kefir_func_predec_i8_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_predec_i8_label2
_kefir_func_predec_i8_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_i8_end:

predec_ld:
__kefir_text_func_predec_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
    fstcw -8(%rbp)
    movq ld@GOTPCREL(%rip), %rax
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_predec_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt _kefir_func_predec_ld_label5(%rip)
    fstpt -96(%rbp)
    fldt -96(%rbp)
    fldt -128(%rbp)
    faddp
    fstpt -112(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -112(%rbp)
    movq $0, -88(%rbp)
    fstpt -96(%rbp)
    lea -96(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %al, %al
    jz _kefir_func_predec_ld_label6
    movq -160(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -48(%rbp)
    jmp _kefir_func_predec_ld_label4
_kefir_func_predec_ld_label6:
    mov %r10, %rax
    movq -160(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -72(%rbp)
    fnclex
    mov %rax, %r10
    movq -96(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_predec_ld_label2
_kefir_func_predec_ld_label4:
    lea -72(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -112(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_ld_end:
.section .rodata
    .align 8
_kefir_func_predec_ld_label5:
    .quad 9223372036854775808
    .quad 49151
.section .text

preinc_i8:
__kefir_text_func_preinc_i8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i8@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_preinc_i8_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    movq -32(%rbp), %r9
    movsx %al, %rax
    mov %rax, %r10
    add $1, %r10b
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_1@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_preinc_i8_label4
_kefir_func_preinc_i8_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_preinc_i8_label2
_kefir_func_preinc_i8_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_i8_end:

preinc_ld:
__kefir_text_func_preinc_ld_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
    fstcw -8(%rbp)
    movq ld@GOTPCREL(%rip), %rax
    fnstenv -160(%rbp)
    stmxcsr -132(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_preinc_ld_label2:
    movq %r10, -112(%rbp)
    lea -128(%rbp), %rdx
    mov %r10, %rsi
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -112(%rbp), %r10
    fldt _kefir_func_preinc_ld_label5(%rip)
    fstpt -96(%rbp)
    fldt -96(%rbp)
    fldt -128(%rbp)
    faddp
    fstpt -112(%rbp)
    movq %r10, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $10, %rdi
    fldt -128(%rbp)
    movq $0, -120(%rbp)
    fstpt -128(%rbp)
    lea -128(%rbp), %rdx
    fldt -112(%rbp)
    movq $0, -88(%rbp)
    fstpt -96(%rbp)
    lea -96(%rbp), %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %al, %al
    jz _kefir_func_preinc_ld_label6
    movq -160(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -48(%rbp)
    jmp _kefir_func_preinc_ld_label4
_kefir_func_preinc_ld_label6:
    mov %r10, %rax
    movq -160(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -144(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -72(%rbp)
    fnclex
    mov %rax, %r10
    movq -96(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -136(%rbp)
    jmp _kefir_func_preinc_ld_label2
_kefir_func_preinc_ld_label4:
    lea -72(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    fldt -112(%rbp)
    fldcw -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_ld_end:
.section .rodata
    .align 8
_kefir_func_preinc_ld_label5:
    .quad 9223372036854775808
    .quad 16383
.section .text

predec_f32:
__kefir_text_func_predec_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    movq f32@GOTPCREL(%rip), %rax
    fnstenv -80(%rbp)
    stmxcsr -52(%rbp)
    fnclex
    mov %rax, %r9
_kefir_func_predec_f32_label2:
    movq %r9, -48(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movd _kefir_func_predec_f32_label5(%rip), %xmm0
    movq %rax, %xmm1
    addss %xmm0, %xmm1
    movq %r9, -40(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -40(%rbp), %r9
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_predec_f32_label6
    movq -80(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -24(%rbp)
    jmp _kefir_func_predec_f32_label4
_kefir_func_predec_f32_label6:
    mov %r9, %rax
    movq -80(%rbp), %rcx
    movq %rcx, -48(%rbp)
    movq -72(%rbp), %rcx
    movq %rcx, -40(%rbp)
    movq -64(%rbp), %rcx
    movq %rcx, -32(%rbp)
    movq -56(%rbp), %rcx
    movq %rcx, -24(%rbp)
    fnclex
    mov %rax, %r9
    movq -48(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_predec_f32_label2
_kefir_func_predec_f32_label4:
    movdqu %xmm1, -80(%rbp)
    lea -48(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movdqu -80(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_f32_end:
.section .rodata
    .align 4
_kefir_func_predec_f32_label5:
    .long 3212836864
.section .text

predec_f64:
__kefir_text_func_predec_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    movq f64@GOTPCREL(%rip), %rax
    fnstenv -80(%rbp)
    stmxcsr -52(%rbp)
    fnclex
    mov %rax, %r9
_kefir_func_predec_f64_label2:
    movq %r9, -48(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq _kefir_func_predec_f64_label5(%rip), %xmm0
    movq %rax, %xmm1
    addsd %xmm0, %xmm1
    movq %r9, -40(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -40(%rbp), %r9
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_predec_f64_label6
    movq -80(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -24(%rbp)
    jmp _kefir_func_predec_f64_label4
_kefir_func_predec_f64_label6:
    mov %r9, %rax
    movq -80(%rbp), %rcx
    movq %rcx, -48(%rbp)
    movq -72(%rbp), %rcx
    movq %rcx, -40(%rbp)
    movq -64(%rbp), %rcx
    movq %rcx, -32(%rbp)
    movq -56(%rbp), %rcx
    movq %rcx, -24(%rbp)
    fnclex
    mov %rax, %r9
    movq -48(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_predec_f64_label2
_kefir_func_predec_f64_label4:
    movdqu %xmm1, -80(%rbp)
    lea -48(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movdqu -80(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_f64_end:
.section .rodata
    .align 8
_kefir_func_predec_f64_label5:
    .quad 13830554455654793216
.section .text

predec_i16:
__kefir_text_func_predec_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i16@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_predec_i16_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -32(%rbp), %r9
    movsx %ax, %rax
    mov %rax, %r10
    add $-1, %r10w
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_predec_i16_label4
_kefir_func_predec_i16_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_predec_i16_label2
_kefir_func_predec_i16_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_i16_end:

predec_i32:
__kefir_text_func_predec_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i32@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_predec_i32_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -32(%rbp), %r9
    movsx %eax, %rax
    mov %rax, %r10
    add $-1, %r10d
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_predec_i32_label4
_kefir_func_predec_i32_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_predec_i32_label2
_kefir_func_predec_i32_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_i32_end:

predec_i64:
__kefir_text_func_predec_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i64@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_predec_i64_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -32(%rbp), %r9
    mov %rax, %r10
    add $-1, %r10
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_predec_i64_label4
_kefir_func_predec_i64_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_predec_i64_label2
_kefir_func_predec_i64_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_i64_end:

predec_ptr:
__kefir_text_func_predec_ptr_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq ptr@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_predec_ptr_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -32(%rbp), %r9
    mov %rax, %r10
    add $-8, %r10
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_predec_ptr_label4
_kefir_func_predec_ptr_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_predec_ptr_label2
_kefir_func_predec_ptr_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_predec_ptr_end:

preinc_f32:
__kefir_text_func_preinc_f32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    movq f32@GOTPCREL(%rip), %rax
    fnstenv -80(%rbp)
    stmxcsr -52(%rbp)
    fnclex
    mov %rax, %r9
_kefir_func_preinc_f32_label2:
    movq %r9, -48(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -48(%rbp), %r9
    movd _kefir_func_preinc_f32_label5(%rip), %xmm0
    movq %rax, %xmm1
    addss %xmm0, %xmm1
    movq %r9, -40(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -40(%rbp), %r9
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_preinc_f32_label6
    movq -80(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -24(%rbp)
    jmp _kefir_func_preinc_f32_label4
_kefir_func_preinc_f32_label6:
    mov %r9, %rax
    movq -80(%rbp), %rcx
    movq %rcx, -48(%rbp)
    movq -72(%rbp), %rcx
    movq %rcx, -40(%rbp)
    movq -64(%rbp), %rcx
    movq %rcx, -32(%rbp)
    movq -56(%rbp), %rcx
    movq %rcx, -24(%rbp)
    fnclex
    mov %rax, %r9
    movq -48(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_preinc_f32_label2
_kefir_func_preinc_f32_label4:
    movdqu %xmm1, -80(%rbp)
    lea -48(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movdqu -80(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_f32_end:
.section .rodata
    .align 4
_kefir_func_preinc_f32_label5:
    .long 1065353216
.section .text

preinc_f64:
__kefir_text_func_preinc_f64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    movq f64@GOTPCREL(%rip), %rax
    fnstenv -80(%rbp)
    stmxcsr -52(%rbp)
    fnclex
    mov %rax, %r9
_kefir_func_preinc_f64_label2:
    movq %r9, -48(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -48(%rbp), %r9
    movq _kefir_func_preinc_f64_label5(%rip), %xmm0
    movq %rax, %xmm1
    addsd %xmm0, %xmm1
    movq %r9, -40(%rbp)
    movdqu %xmm1, -32(%rbp)
    mov %r9, %rdi
    movq %xmm1, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -48(%rbp)
    lea -48(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -40(%rbp), %r9
    movdqu -32(%rbp), %xmm1
    test %al, %al
    jz _kefir_func_preinc_f64_label6
    movq -80(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -24(%rbp)
    jmp _kefir_func_preinc_f64_label4
_kefir_func_preinc_f64_label6:
    mov %r9, %rax
    movq -80(%rbp), %rcx
    movq %rcx, -48(%rbp)
    movq -72(%rbp), %rcx
    movq %rcx, -40(%rbp)
    movq -64(%rbp), %rcx
    movq %rcx, -32(%rbp)
    movq -56(%rbp), %rcx
    movq %rcx, -24(%rbp)
    fnclex
    mov %rax, %r9
    movq -48(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -56(%rbp)
    jmp _kefir_func_preinc_f64_label2
_kefir_func_preinc_f64_label4:
    movdqu %xmm1, -80(%rbp)
    lea -48(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movdqu -80(%rbp), %xmm1
    movq %xmm1, %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_f64_end:
.section .rodata
    .align 8
_kefir_func_preinc_f64_label5:
    .quad 4607182418800017408
.section .text

preinc_i16:
__kefir_text_func_preinc_i16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i16@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_preinc_i16_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    movq -32(%rbp), %r9
    movsx %ax, %rax
    mov %rax, %r10
    add $1, %r10w
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_2@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_preinc_i16_label4
_kefir_func_preinc_i16_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_preinc_i16_label2
_kefir_func_preinc_i16_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_i16_end:

preinc_i32:
__kefir_text_func_preinc_i32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i32@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_preinc_i32_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq -32(%rbp), %r9
    movsx %eax, %rax
    mov %rax, %r10
    add $1, %r10d
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_4@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_preinc_i32_label4
_kefir_func_preinc_i32_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_preinc_i32_label2
_kefir_func_preinc_i32_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_i32_end:

preinc_i64:
__kefir_text_func_preinc_i64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq i64@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_preinc_i64_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -32(%rbp), %r9
    mov %rax, %r10
    add $1, %r10
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_preinc_i64_label4
_kefir_func_preinc_i64_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_preinc_i64_label2
_kefir_func_preinc_i64_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_i64_end:

preinc_ptr:
__kefir_text_func_preinc_ptr_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    movq ptr@GOTPCREL(%rip), %rax
    mov %rax, %r9
_kefir_func_preinc_ptr_label2:
    movq %r9, -32(%rbp)
    mov %r9, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq -32(%rbp), %r9
    mov %rax, %r10
    add $8, %r10
    movq %r9, -24(%rbp)
    movq %r10, -16(%rbp)
    mov %r9, %rdi
    mov %r10, %rdx
    mov $5, %rcx
    mov $5, %r8
    mov %rax, -32(%rbp)
    lea -32(%rbp), %rsi
    call __atomic_compare_exchange_8@PLT
    movq -24(%rbp), %r9
    movq -16(%rbp), %r10
    test %al, %al
    jnz _kefir_func_preinc_ptr_label4
_kefir_func_preinc_ptr_label5:
    mov %r9, %rax
    mov %rax, %r9
    jmp _kefir_func_preinc_ptr_label2
_kefir_func_preinc_ptr_label4:
    mov %r10, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_preinc_ptr_end:

__kefir_text_section_end:

