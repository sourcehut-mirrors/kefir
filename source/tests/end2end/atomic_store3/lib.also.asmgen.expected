.att_syntax
.section .note.GNU-stack,"",%progbits

.global set_a1
.type set_a1, @function
.global set_i8
.type set_i8, @function
.global set_f32
.type set_f32, @function
.global set_f64
.type set_f64, @function
.global set_i16
.type set_i16, @function
.global set_i32
.type set_i32, @function
.global set_i64
.type set_i64, @function
.global set_arr1_el
.type set_arr1_el, @function
.global set_arr2_el
.type set_arr2_el, @function
.extern __kefirrt_fenv_update

.section .text
__kefir_text_section_begin:
set_a1:
__kefir_text_func_set_a1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    lea 16(%rbp), %rax
    lea -128(%rbp), %rcx
    movdqu (%rax), %xmm0
    movdqu %xmm0, (%rcx)
    movdqu 16(%rax), %xmm0
    movdqu %xmm0, 16(%rcx)
    movdqu 32(%rax), %xmm0
    movdqu %xmm0, 32(%rcx)
    movdqu 48(%rax), %xmm0
    movdqu %xmm0, 48(%rcx)
    lea -128(%rbp), %rax
    add $32, %rdi
    mov %rdi, %rsi
    mov %rax, %rdx
    mov $64, %rdi
    mov $5, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set_a1_end:

set_i8:
__kefir_text_func_set_i8_begin:
    movsx %sil, %rax
    mov %rax, %rsi
    mov $5, %rdx
    call __atomic_store_1@PLT
    ret
__kefir_text_func_set_i8_end:

set_f32:
__kefir_text_func_set_f32_begin:
    add $16, %rdi
    movq %xmm0, %rsi
    mov $5, %rdx
    call __atomic_store_4@PLT
    ret
__kefir_text_func_set_f32_end:

set_f64:
__kefir_text_func_set_f64_begin:
    add $24, %rdi
    movq %xmm0, %rsi
    mov $5, %rdx
    call __atomic_store_8@PLT
    ret
__kefir_text_func_set_f64_end:

set_i16:
__kefir_text_func_set_i16_begin:
    movsx %si, %rax
    add $2, %rdi
    mov %rax, %rsi
    mov $5, %rdx
    call __atomic_store_2@PLT
    ret
__kefir_text_func_set_i16_end:

set_i32:
__kefir_text_func_set_i32_begin:
    movsx %esi, %rax
    add $4, %rdi
    mov %rax, %rsi
    mov $5, %rdx
    call __atomic_store_4@PLT
    ret
__kefir_text_func_set_i32_end:

set_i64:
__kefir_text_func_set_i64_begin:
    add $8, %rdi
    mov $5, %rdx
    call __atomic_store_8@PLT
    ret
__kefir_text_func_set_i64_end:

set_arr1_el:
__kefir_text_func_set_arr1_el_begin:
    add $96, %rdi
    movsx %esi, %rax
    movsx %eax, %rax
    imul $8, %rax, %rax
    add %rax, %rdi
    mov %rdx, %rsi
    mov $5, %rdx
    call __atomic_store_8@PLT
    ret
__kefir_text_func_set_arr1_el_end:

set_arr2_el:
__kefir_text_func_set_arr2_el_begin:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    lea 16(%rbp), %rax
    lea -128(%rbp), %rcx
    movdqu (%rax), %xmm0
    movdqu %xmm0, (%rcx)
    movdqu 16(%rax), %xmm0
    movdqu %xmm0, 16(%rcx)
    movdqu 32(%rax), %xmm0
    movdqu %xmm0, 32(%rcx)
    movdqu 48(%rax), %xmm0
    movdqu %xmm0, 48(%rcx)
    lea -128(%rbp), %rax
    add $160, %rdi
    movsx %esi, %rcx
    movsx %ecx, %rcx
    imul $64, %rcx, %rcx
    add %rcx, %rdi
    mov %rdi, %rsi
    mov %rax, %rdx
    mov $64, %rdi
    mov $5, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_set_arr2_el_end:

__kefir_text_section_end:

