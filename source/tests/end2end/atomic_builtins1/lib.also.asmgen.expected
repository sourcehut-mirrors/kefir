.att_syntax
.section .note.GNU-stack,"",%progbits

.global test_atomic_store128
.type test_atomic_store128, @function
.global test_atomic_store256
.type test_atomic_store256, @function
.extern __atomic_store
.global test2_atomic_store128
.type test2_atomic_store128, @function
.global test2_atomic_store256
.type test2_atomic_store256, @function
.global test2_atomic_store16
.type test2_atomic_store16, @function
.global test2_atomic_store32
.type test2_atomic_store32, @function
.global test2_atomic_store64
.type test2_atomic_store64, @function
.global test_atomic_store8
.type test_atomic_store8, @function
.global test_atomic_store16
.type test_atomic_store16, @function
.global test_atomic_store32
.type test_atomic_store32, @function
.global test_atomic_store64
.type test_atomic_store64, @function
.global test2_atomic_store8
.type test2_atomic_store8, @function

.section .text
__kefir_text_section_begin:
test_atomic_store128:
__kefir_text_func_test_atomic_store128_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    mov %rdi, %rax
    lea 16(%rbp), %rcx
    movq $0, -24(%rbp)
    fldt (%rcx)
    fstpt -32(%rbp)
    mov $16, %rcx
    lea -32(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store128_end:

test_atomic_store256:
__kefir_text_func_test_atomic_store256_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    mov %rdi, %rax
    lea 16(%rbp), %rcx
    lea -80(%rbp), %rdx
    movq $0, 8(%rdx)
    movq $0, 24(%rdx)
    fldt (%rcx)
    fstpt (%rdx)
    fldt 16(%rcx)
    fstpt 16(%rdx)
    mov $32, %rcx
    lea -80(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store256_end:

test2_atomic_store128:
__kefir_text_func_test2_atomic_store128_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %rax
    lea 16(%rbp), %rcx
    movq $0, -40(%rbp)
    fldt (%rcx)
    fstpt -48(%rbp)
    fldt -48(%rbp)
    fstpt -64(%rbp)
    movq $0, -8(%rbp)
    fldt -64(%rbp)
    fstpt -16(%rbp)
    mov $16, %rcx
    lea -16(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store128_end:

test2_atomic_store256:
__kefir_text_func_test2_atomic_store256_begin:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
    stmxcsr -8(%rbp)
    mov %rdi, %rax
    lea 16(%rbp), %rcx
    lea -112(%rbp), %rdx
    movq $0, 8(%rdx)
    movq $0, 24(%rdx)
    fldt (%rcx)
    fstpt (%rdx)
    fldt 16(%rcx)
    fstpt 16(%rdx)
    lea -80(%rbp), %rcx
    lea -112(%rbp), %rdx
    fldt (%rdx)
    fstpt -144(%rbp)
    fldt 16(%rdx)
    fstpt -128(%rbp)
    movq $0, 8(%rcx)
    movq $0, 24(%rcx)
    fldt -144(%rbp)
    fstpt (%rcx)
    fldt -128(%rbp)
    fstpt 16(%rcx)
    mov $32, %rcx
    lea -80(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store256_end:

test2_atomic_store16:
__kefir_text_func_test2_atomic_store16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movsx %si, %rcx
    movw %cx, -2(%rbp)
    mov $2, %rcx
    lea -2(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store16_end:

test2_atomic_store32:
__kefir_text_func_test2_atomic_store32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movsx %esi, %rcx
    movl %ecx, -4(%rbp)
    mov $4, %rcx
    lea -4(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store32_end:

test2_atomic_store64:
__kefir_text_func_test2_atomic_store64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movq %rsi, -8(%rbp)
    mov $8, %rcx
    lea -8(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store64_end:

test_atomic_store8:
__kefir_text_func_test_atomic_store8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movb %sil, -1(%rbp)
    mov $1, %rcx
    lea -1(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store8_end:

test_atomic_store16:
__kefir_text_func_test_atomic_store16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movw %si, -2(%rbp)
    mov $2, %rcx
    lea -2(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store16_end:

test_atomic_store32:
__kefir_text_func_test_atomic_store32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movl %esi, -4(%rbp)
    mov $4, %rcx
    lea -4(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store32_end:

test_atomic_store64:
__kefir_text_func_test_atomic_store64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movq %rsi, -8(%rbp)
    mov $8, %rcx
    lea -8(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_store64_end:

test2_atomic_store8:
__kefir_text_func_test2_atomic_store8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movsx %sil, %rcx
    movb %cl, -1(%rbp)
    mov $1, %rcx
    lea -1(%rbp), %rdx
    mov $5, %r8
    mov %rcx, %rdi
    mov %rax, %rsi
    mov %r8, %rcx
    call __atomic_store@PLT
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_store8_end:

__kefir_text_section_end:

