.att_syntax
.section .note.GNU-stack,"",%progbits

.global greater1
.type greater1, @function
.global greater2
.type greater2, @function
.global greater3
.type greater3, @function
.global greater4
.type greater4, @function
.global greater5
.type greater5, @function
.global greater6
.type greater6, @function

.section .text
__kefir_text_section_begin:
greater1:
__kefir_text_func_greater1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_greater1_label0:
    movb %sil, -1(%rbp)
    movb %dil, -2(%rbp)
    movb -2(%rbp), %al
    movb -1(%rbp), %cl
    shl $58, %rax
    sar $58, %rax
    shl $58, %rax
    sar $58, %rax
    shl $58, %rcx
    sar $58, %rcx
    shl $58, %rcx
    sar $58, %rcx
    mov $0, %rdx
    cmp %cl, %al
    setg %dl
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater1_end:

greater2:
__kefir_text_func_greater2_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_greater2_label0:
    movw %si, -2(%rbp)
    movw %di, -4(%rbp)
    movw -4(%rbp), %ax
    movw -2(%rbp), %cx
    shl $50, %rax
    sar $50, %rax
    shl $50, %rax
    sar $50, %rax
    shl $50, %rcx
    sar $50, %rcx
    shl $50, %rcx
    sar $50, %rcx
    mov $0, %rdx
    cmp %cx, %ax
    setg %dl
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater2_end:

greater3:
__kefir_text_func_greater3_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_greater3_label0:
    movl %esi, -4(%rbp)
    movl %edi, -8(%rbp)
    movl -8(%rbp), %eax
    movl -4(%rbp), %ecx
    shl $35, %rax
    sar $35, %rax
    shl $35, %rax
    sar $35, %rax
    shl $35, %rcx
    sar $35, %rcx
    shl $35, %rcx
    sar $35, %rcx
    mov $0, %rdx
    cmp %ecx, %eax
    setg %dl
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater3_end:

greater4:
__kefir_text_func_greater4_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_greater4_label0:
    movq %rsi, -8(%rbp)
    movq %rdi, -16(%rbp)
    movq -16(%rbp), %rax
    movq -8(%rbp), %rcx
    shl $6, %rax
    sar $6, %rax
    shl $6, %rax
    sar $6, %rax
    shl $6, %rcx
    sar $6, %rcx
    shl $6, %rcx
    sar $6, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setg %dl
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater4_end:

greater5:
__kefir_text_func_greater5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func_greater5_label0:
    movq %rdx, -64(%rbp)
    movq %rcx, -56(%rbp)
    movq %rdi, -48(%rbp)
    movq %rsi, -40(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -16(%rbp)
    movdqu -48(%rbp), %xmm0
    movdqu %xmm0, -32(%rbp)
    movdqu -32(%rbp), %xmm0
    movdqu %xmm0, -96(%rbp)
    movdqu -16(%rbp), %xmm0
    movdqu %xmm0, -80(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    leaq -80(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_signed_compare
    mov $0, %rcx
    cmp $1, %al
    sete %cl
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater5_end:

greater6:
__kefir_text_func_greater6_begin:
    push %rbp
    mov %rsp, %rbp
    sub $160, %rsp
_kefir_func_greater6_label0:
    lea 56(%rbp), %rax
    lea 16(%rbp), %rcx
    movq (%rax), %rdx
    movq %rdx, -40(%rbp)
    movq 8(%rax), %rdx
    movq %rdx, -32(%rbp)
    movq 16(%rax), %rdx
    movq %rdx, -24(%rbp)
    movq 24(%rax), %rdx
    movq %rdx, -16(%rbp)
    movq 32(%rax), %rdx
    movq %rdx, -8(%rbp)
    movq (%rcx), %rax
    movq %rax, -80(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -72(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -64(%rbp)
    movq 24(%rcx), %rax
    movq %rax, -56(%rbp)
    movq 32(%rcx), %rax
    movq %rax, -48(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -152(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -48(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -40(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -24(%rbp), %rax
    movq %rax, -104(%rbp)
    movq -16(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -8(%rbp), %rax
    movq %rax, -88(%rbp)
    leaq -160(%rbp), %rax
    mov %rax, %rdi
    leaq -120(%rbp), %rax
    mov %rax, %rsi
    mov $310, %rdx
    call __kefir_bigint_signed_compare
    mov $0, %rcx
    cmp $1, %al
    sete %cl
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_greater6_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_signed_compare:
__kefir_text_func___kefir_bigint_signed_compare_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
_kefir_func___kefir_bigint_signed_compare_label0:
    movq %rdx, -48(%rbp)
    movq %rsi, -8(%rbp)
    movq %rdi, -24(%rbp)
    movq -48(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -32(%rbp)
    movq -48(%rbp), %rax
    movq -32(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -16(%rbp)
    movq -24(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -16(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -40(%rbp)
    movq -8(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movq -16(%rbp), %rcx
    and $255, %rax
    sar %cl, %eax
    and $1, %eax
    movl %eax, -36(%rbp)
    movl -40(%rbp), %eax
    test %eax, %eax
    setne %al
    movzx %al, %rax
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func___kefir_bigint_signed_compare_label8
    mov %rax, %rdx
_kefir_func___kefir_bigint_signed_compare_label1:
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_compare_label7
_kefir_func___kefir_bigint_signed_compare_label2:
    movl -40(%rbp), %eax
    mov $0, %rcx
    test %eax, %eax
    sete %cl
    mov %rcx, %rax
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func___kefir_bigint_signed_compare_label6
    mov %rax, %rcx
_kefir_func___kefir_bigint_signed_compare_label3:
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_signed_compare_label5
_kefir_func___kefir_bigint_signed_compare_label4:
    movq -24(%rbp), %rdi
    movq -8(%rbp), %rsi
    movq -48(%rbp), %rdx
    call __kefir_bigint_unsigned_compare
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_compare_label5:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_compare_label6:
    movl -36(%rbp), %eax
    test %eax, %eax
    setne %al
    movzx %al, %rax
    mov %rax, %rcx
    jmp _kefir_func___kefir_bigint_signed_compare_label3
_kefir_func___kefir_bigint_signed_compare_label7:
    mov $1, %rax
    neg %eax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_signed_compare_label8:
    movl -36(%rbp), %eax
    mov $0, %rcx
    test %eax, %eax
    sete %cl
    mov %rcx, %rax
    mov %rax, %rdx
    jmp _kefir_func___kefir_bigint_signed_compare_label1
__kefir_text_func___kefir_bigint_signed_compare_end:

__kefir_bigint_unsigned_compare:
__kefir_text_func___kefir_bigint_unsigned_compare_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_unsigned_compare_label0:
    movq %rdx, -56(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -48(%rbp)
    movq -56(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -32(%rbp)
    movq -32(%rbp), %rax
    movq %rax, -24(%rbp)
_kefir_func___kefir_bigint_unsigned_compare_label1:
    movq -24(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_compare_label3
_kefir_func___kefir_bigint_unsigned_compare_label2:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label3:
    movq -48(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -16(%rbp)
    movq -40(%rbp), %rax
    movq -24(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    and $255, %rax
    movl %eax, -12(%rbp)
    movq -24(%rbp), %rax
    movq -32(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_compare_label9
_kefir_func___kefir_bigint_unsigned_compare_label4:
    movl -16(%rbp), %eax
    movl -12(%rbp), %ecx
    mov $0, %rdx
    cmp %ecx, %eax
    seta %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_compare_label8
_kefir_func___kefir_bigint_unsigned_compare_label5:
    movl -16(%rbp), %eax
    movl -12(%rbp), %ecx
    mov $0, %rdx
    cmp %ecx, %eax
    setb %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_unsigned_compare_label7
_kefir_func___kefir_bigint_unsigned_compare_label6:
    movq -24(%rbp), %rax
    add $-1, %rax
    movq %rax, -24(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_compare_label1
_kefir_func___kefir_bigint_unsigned_compare_label7:
    mov $1, %rax
    neg %eax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label8:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label9:
    movq -56(%rbp), %rcx
    movq -56(%rbp), %rax
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    mov $0, %rdx
    div %rsi
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rax
    sub %rax, %rcx
    mov $1, %rdx
    movsx %edx, %rax
    add %rax, %rcx
    movl %ecx, -4(%rbp)
    movl -4(%rbp), %ecx
    movabs $4294967295, %rax
    and %rax, %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movl -16(%rbp), %ecx
    and %eax, %ecx
    movl %ecx, -16(%rbp)
    movl -8(%rbp), %eax
    movl -12(%rbp), %ecx
    and %eax, %ecx
    movl %ecx, -12(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_compare_label4
__kefir_text_func___kefir_bigint_unsigned_compare_end:


