.att_syntax
.section .note.GNU-stack,"",%progbits

.global greater_or_equalsf
.type greater_or_equalsf, @function
.global less_or_equalsf
.type less_or_equalsf, @function
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
greater_or_equalsf:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    stmxcsr -8(%rbp)
_kefir_func_greater_or_equalsf_label0:
_kefir_func_greater_or_equalsf_label1:
    movd %xmm1, -12(%rbp)
    movd %xmm0, -16(%rbp)
    movl -16(%rbp), %eax
    movl -12(%rbp), %ecx
    mov $0, %rdx
    movd %eax, %xmm0
    movd %ecx, %xmm1
    comiss %xmm1, %xmm0
    setae %dl
    mov %rdx, %rax
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

less_or_equalsf:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    stmxcsr -8(%rbp)
_kefir_func_less_or_equalsf_label0:
_kefir_func_less_or_equalsf_label1:
    movd %xmm1, -12(%rbp)
    movd %xmm0, -16(%rbp)
    movl -16(%rbp), %eax
    movl -12(%rbp), %ecx
    mov $0, %rdx
    movd %ecx, %xmm0
    movd %eax, %xmm1
    comiss %xmm1, %xmm0
    setae %dl
    mov %rdx, %rax
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret

__kefir_text_section_end:

