.att_syntax
.section .note.GNU-stack,"",%progbits

.global f32_predec
.type f32_predec, @function
.global f32_preinc
.type f32_preinc, @function
.global f64_predec
.type f64_predec, @function
.global f64_preinc
.type f64_preinc, @function
.global f32_postdec
.type f32_postdec, @function
.global f32_postinc
.type f32_postinc, @function
.global f64_postdec
.type f64_postdec, @function
.global f64_postinc
.type f64_postinc, @function
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
f32_predec:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f32_predec_label0:
_kefir_func_f32_predec_label1:
    movq %rdi, -24(%rbp)
    movq -24(%rbp), %rax
    fnstenv -128(%rbp)
    stmxcsr -100(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f32_predec_label2:
    movq %r10, -88(%rbp)
    mov %r10, %rsi
    lea -96(%rbp), %rdx
    mov $8, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -88(%rbp), %r10
    movd _kefir_func_f32_predec_label5(%rip), %xmm0
    movd _kefir_func_f32_predec_label6(%rip), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movd -96(%rbp), %xmm0
    movd -92(%rbp), %xmm1
    addss -88(%rbp), %xmm0
    addss -84(%rbp), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movq %r10, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $8, %rdi
    lea -80(%rbp), %rdx
    leaq -88(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -72(%rbp), %r10
    test %al, %al
    jz _kefir_func_f32_predec_label7
    movq -128(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -40(%rbp)
    jmp _kefir_func_f32_predec_label4
_kefir_func_f32_predec_label7:
    mov %r10, %rax
    movq -128(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -112(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_f32_predec_label3:
    fnclex
    mov %rax, %r10
    movq -80(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -104(%rbp)
    jmp _kefir_func_f32_predec_label2
_kefir_func_f32_predec_label4:
    lea -64(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -88(%rbp), %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 4
_kefir_func_f32_predec_label5:
    .long 3212836864
    .align 4
_kefir_func_f32_predec_label6:
    .long 0
.section .text

f32_preinc:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f32_preinc_label0:
_kefir_func_f32_preinc_label1:
    movq %rdi, -24(%rbp)
    movq -24(%rbp), %rax
    fnstenv -128(%rbp)
    stmxcsr -100(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f32_preinc_label2:
    movq %r10, -88(%rbp)
    mov %r10, %rsi
    lea -96(%rbp), %rdx
    mov $8, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -88(%rbp), %r10
    movd _kefir_func_f32_preinc_label5(%rip), %xmm0
    movd _kefir_func_f32_preinc_label6(%rip), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movd -96(%rbp), %xmm0
    movd -92(%rbp), %xmm1
    addss -88(%rbp), %xmm0
    addss -84(%rbp), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movq %r10, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $8, %rdi
    lea -80(%rbp), %rdx
    leaq -88(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -72(%rbp), %r10
    test %al, %al
    jz _kefir_func_f32_preinc_label7
    movq -128(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -40(%rbp)
    jmp _kefir_func_f32_preinc_label4
_kefir_func_f32_preinc_label7:
    mov %r10, %rax
    movq -128(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -112(%rbp), %rcx
    movq %rcx, -64(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -56(%rbp)
_kefir_func_f32_preinc_label3:
    fnclex
    mov %rax, %r10
    movq -80(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -104(%rbp)
    jmp _kefir_func_f32_preinc_label2
_kefir_func_f32_preinc_label4:
    lea -64(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -88(%rbp), %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 4
_kefir_func_f32_preinc_label5:
    .long 1065353216
    .align 4
_kefir_func_f32_preinc_label6:
    .long 0
.section .text

f64_predec:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f64_predec_label0:
_kefir_func_f64_predec_label1:
    movq %rdi, -48(%rbp)
    movq -48(%rbp), %rax
    fnstenv -176(%rbp)
    stmxcsr -148(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f64_predec_label2:
    movq %r10, -128(%rbp)
    mov %r10, %rsi
    lea -144(%rbp), %rdx
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -128(%rbp), %r10
    movq _kefir_func_f64_predec_label5(%rip), %xmm0
    movq _kefir_func_f64_predec_label6(%rip), %xmm1
    movq %xmm0, -120(%rbp)
    movq %xmm1, -112(%rbp)
    movq -144(%rbp), %xmm0
    movq -136(%rbp), %xmm1
    addsd -120(%rbp), %xmm0
    addsd -112(%rbp), %xmm1
    movq %xmm0, -128(%rbp)
    movq %xmm1, -120(%rbp)
    movq %r10, -112(%rbp)
    movdqu -144(%rbp), %xmm0
    movdqu %xmm0, -104(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $16, %rdi
    lea -104(%rbp), %rdx
    leaq -128(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_f64_predec_label7
    movq -176(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -64(%rbp)
    jmp _kefir_func_f64_predec_label4
_kefir_func_f64_predec_label7:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_f64_predec_label3:
    fnclex
    mov %rax, %r10
    movq -112(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -152(%rbp)
    jmp _kefir_func_f64_predec_label2
_kefir_func_f64_predec_label4:
    lea -88(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -128(%rbp), %xmm0
    movq -120(%rbp), %xmm1
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 8
_kefir_func_f64_predec_label5:
    .quad 13830554455654793216
    .align 8
_kefir_func_f64_predec_label6:
    .quad 0
.section .text

f64_preinc:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f64_preinc_label0:
_kefir_func_f64_preinc_label1:
    movq %rdi, -48(%rbp)
    movq -48(%rbp), %rax
    fnstenv -176(%rbp)
    stmxcsr -148(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f64_preinc_label2:
    movq %r10, -128(%rbp)
    mov %r10, %rsi
    lea -144(%rbp), %rdx
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -128(%rbp), %r10
    movq _kefir_func_f64_preinc_label5(%rip), %xmm0
    movq _kefir_func_f64_preinc_label6(%rip), %xmm1
    movq %xmm0, -120(%rbp)
    movq %xmm1, -112(%rbp)
    movq -144(%rbp), %xmm0
    movq -136(%rbp), %xmm1
    addsd -120(%rbp), %xmm0
    addsd -112(%rbp), %xmm1
    movq %xmm0, -128(%rbp)
    movq %xmm1, -120(%rbp)
    movq %r10, -112(%rbp)
    movdqu -144(%rbp), %xmm0
    movdqu %xmm0, -104(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $16, %rdi
    lea -104(%rbp), %rdx
    leaq -128(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -112(%rbp), %r10
    test %al, %al
    jz _kefir_func_f64_preinc_label7
    movq -176(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -72(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -64(%rbp)
    jmp _kefir_func_f64_preinc_label4
_kefir_func_f64_preinc_label7:
    mov %r10, %rax
    movq -176(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq -168(%rbp), %rcx
    movq %rcx, -104(%rbp)
    movq -160(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -152(%rbp), %rcx
    movq %rcx, -88(%rbp)
_kefir_func_f64_preinc_label3:
    fnclex
    mov %rax, %r10
    movq -112(%rbp), %rax
    movq %rax, -176(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -168(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -160(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -152(%rbp)
    jmp _kefir_func_f64_preinc_label2
_kefir_func_f64_preinc_label4:
    lea -88(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -128(%rbp), %xmm0
    movq -120(%rbp), %xmm1
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 8
_kefir_func_f64_preinc_label5:
    .quad 4607182418800017408
    .align 8
_kefir_func_f64_preinc_label6:
    .quad 0
.section .text

f32_postdec:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f32_postdec_label0:
_kefir_func_f32_postdec_label1:
    movq %rdi, -24(%rbp)
    movq -24(%rbp), %rax
    fnstenv -128(%rbp)
    stmxcsr -100(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f32_postdec_label2:
    movq %r10, -88(%rbp)
    mov %r10, %rsi
    lea -96(%rbp), %rdx
    mov $8, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -88(%rbp), %r10
    movd _kefir_func_f32_postdec_label5(%rip), %xmm0
    movd _kefir_func_f32_postdec_label6(%rip), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movd -96(%rbp), %xmm0
    movd -92(%rbp), %xmm1
    addss -88(%rbp), %xmm0
    addss -84(%rbp), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movq %r10, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $8, %rdi
    lea -80(%rbp), %rdx
    leaq -88(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -72(%rbp), %r10
    test %al, %al
    jz _kefir_func_f32_postdec_label7
    movq -128(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -40(%rbp)
    jmp _kefir_func_f32_postdec_label4
_kefir_func_f32_postdec_label7:
    mov %r10, %rax
    movq -128(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -112(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -64(%rbp)
_kefir_func_f32_postdec_label3:
    fnclex
    mov %rax, %r10
    movq -88(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -104(%rbp)
    jmp _kefir_func_f32_postdec_label2
_kefir_func_f32_postdec_label4:
    lea -64(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -96(%rbp), %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 4
_kefir_func_f32_postdec_label5:
    .long 3212836864
    .align 4
_kefir_func_f32_postdec_label6:
    .long 0
.section .text

f32_postinc:
    push %rbp
    mov %rsp, %rbp
    sub $128, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f32_postinc_label0:
_kefir_func_f32_postinc_label1:
    movq %rdi, -24(%rbp)
    movq -24(%rbp), %rax
    fnstenv -128(%rbp)
    stmxcsr -100(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f32_postinc_label2:
    movq %r10, -88(%rbp)
    mov %r10, %rsi
    lea -96(%rbp), %rdx
    mov $8, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -88(%rbp), %r10
    movd _kefir_func_f32_postinc_label5(%rip), %xmm0
    movd _kefir_func_f32_postinc_label6(%rip), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movd -96(%rbp), %xmm0
    movd -92(%rbp), %xmm1
    addss -88(%rbp), %xmm0
    addss -84(%rbp), %xmm1
    movd %xmm0, -88(%rbp)
    movd %xmm1, -84(%rbp)
    movq %r10, -72(%rbp)
    movq -96(%rbp), %rax
    movq %rax, -80(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $8, %rdi
    lea -80(%rbp), %rdx
    leaq -88(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -72(%rbp), %r10
    test %al, %al
    jz _kefir_func_f32_postinc_label7
    movq -128(%rbp), %rax
    movq %rax, -64(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -56(%rbp)
    movq -112(%rbp), %rax
    movq %rax, -48(%rbp)
    movq -104(%rbp), %rax
    movq %rax, -40(%rbp)
    jmp _kefir_func_f32_postinc_label4
_kefir_func_f32_postinc_label7:
    mov %r10, %rax
    movq -128(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -112(%rbp), %rcx
    movq %rcx, -72(%rbp)
    movq -104(%rbp), %rcx
    movq %rcx, -64(%rbp)
_kefir_func_f32_postinc_label3:
    fnclex
    mov %rax, %r10
    movq -88(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -104(%rbp)
    jmp _kefir_func_f32_postinc_label2
_kefir_func_f32_postinc_label4:
    lea -64(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -96(%rbp), %xmm0
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 4
_kefir_func_f32_postinc_label5:
    .long 1065353216
    .align 4
_kefir_func_f32_postinc_label6:
    .long 0
.section .text

f64_postdec:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f64_postdec_label0:
_kefir_func_f64_postdec_label1:
    movq %rdi, -48(%rbp)
    movq -48(%rbp), %rax
    fnstenv -144(%rbp)
    stmxcsr -116(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f64_postdec_label2:
    movq %r10, -96(%rbp)
    mov %r10, %rsi
    lea -112(%rbp), %rdx
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -96(%rbp), %r10
    movq _kefir_func_f64_postdec_label5(%rip), %xmm0
    movq _kefir_func_f64_postdec_label6(%rip), %xmm1
    movq %xmm0, -88(%rbp)
    movq %xmm1, -80(%rbp)
    movq -112(%rbp), %xmm0
    movq -104(%rbp), %xmm1
    addsd -88(%rbp), %xmm0
    addsd -80(%rbp), %xmm1
    movq %xmm0, -96(%rbp)
    movq %xmm1, -88(%rbp)
    movq %r10, -80(%rbp)
    movdqu -112(%rbp), %xmm0
    movdqu %xmm0, -72(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $16, %rdi
    lea -72(%rbp), %rdx
    leaq -96(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %al, %al
    jz _kefir_func_f64_postdec_label7
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -128(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -72(%rbp)
    jmp _kefir_func_f64_postdec_label4
_kefir_func_f64_postdec_label7:
    mov %r10, %rax
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -128(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -72(%rbp)
_kefir_func_f64_postdec_label3:
    fnclex
    mov %rax, %r10
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -120(%rbp)
    jmp _kefir_func_f64_postdec_label2
_kefir_func_f64_postdec_label4:
    lea -96(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm0
    movq -104(%rbp), %xmm1
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 8
_kefir_func_f64_postdec_label5:
    .quad 13830554455654793216
    .align 8
_kefir_func_f64_postdec_label6:
    .quad 0
.section .text

f64_postinc:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
    stmxcsr -8(%rbp)
_kefir_func_f64_postinc_label0:
_kefir_func_f64_postinc_label1:
    movq %rdi, -48(%rbp)
    movq -48(%rbp), %rax
    fnstenv -144(%rbp)
    stmxcsr -116(%rbp)
    fnclex
    mov %rax, %r10
_kefir_func_f64_postinc_label2:
    movq %r10, -96(%rbp)
    mov %r10, %rsi
    lea -112(%rbp), %rdx
    mov $16, %rdi
    mov $5, %rcx
    call __atomic_load@PLT
    movq -96(%rbp), %r10
    movq _kefir_func_f64_postinc_label5(%rip), %xmm0
    movq _kefir_func_f64_postinc_label6(%rip), %xmm1
    movq %xmm0, -88(%rbp)
    movq %xmm1, -80(%rbp)
    movq -112(%rbp), %xmm0
    movq -104(%rbp), %xmm1
    addsd -88(%rbp), %xmm0
    addsd -80(%rbp), %xmm1
    movq %xmm0, -96(%rbp)
    movq %xmm1, -88(%rbp)
    movq %r10, -80(%rbp)
    movdqu -112(%rbp), %xmm0
    movdqu %xmm0, -72(%rbp)
    mov %r10, %rsi
    mov $5, %r8
    mov $5, %r9
    mov $16, %rdi
    lea -72(%rbp), %rdx
    leaq -96(%rbp), %rax
    mov %rax, %rcx
    call __atomic_compare_exchange@PLT
    movq -80(%rbp), %r10
    test %al, %al
    jz _kefir_func_f64_postinc_label7
    movq -144(%rbp), %rax
    movq %rax, -96(%rbp)
    movq -136(%rbp), %rax
    movq %rax, -88(%rbp)
    movq -128(%rbp), %rax
    movq %rax, -80(%rbp)
    movq -120(%rbp), %rax
    movq %rax, -72(%rbp)
    jmp _kefir_func_f64_postinc_label4
_kefir_func_f64_postinc_label7:
    mov %r10, %rax
    movq -144(%rbp), %rcx
    movq %rcx, -96(%rbp)
    movq -136(%rbp), %rcx
    movq %rcx, -88(%rbp)
    movq -128(%rbp), %rcx
    movq %rcx, -80(%rbp)
    movq -120(%rbp), %rcx
    movq %rcx, -72(%rbp)
_kefir_func_f64_postinc_label3:
    fnclex
    mov %rax, %r10
    movq -96(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -88(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -120(%rbp)
    jmp _kefir_func_f64_postinc_label2
_kefir_func_f64_postinc_label4:
    lea -96(%rbp), %rdi
    call __kefirrt_fenv_update@PLT
    movq -112(%rbp), %xmm0
    movq -104(%rbp), %xmm1
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
    .align 8
_kefir_func_f64_postinc_label5:
    .quad 4607182418800017408
    .align 8
_kefir_func_f64_postinc_label6:
    .quad 0
.section .text

__kefir_text_section_end:

