.att_syntax
.section .note.GNU-stack,"",%progbits

.global getb
.type getb, @function
.extern getinteger

.section .text
__kefir_text_section_begin:
getb:
__kefir_text_func_getb_begin:
    push %rbp
    mov %rsp, %rbp
    sub $288, %rsp
    movq %rdi, -288(%rbp)
_kefir_func_getb_label0:
_kefir_func_getb_label1:
    movl %esi, -260(%rbp)
    lea -248(%rbp), %rdx
    mov %rdx, %rdi
    mov $0, %rax
    mov $240, %rcx
    rep stosb
    movsxl -260(%rbp), %rax
    movq %rdx, -280(%rbp)
    mov %rax, %rdi
    call getinteger@PLT
    movq -280(%rbp), %rdx
    movl %eax, -8(%rbp)
    movl %eax, -248(%rbp)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $40, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $80, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $120, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $160, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $4, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $44, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $84, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $124, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $164, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $8, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $48, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $88, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $128, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $168, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $12, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $52, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $92, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $132, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $172, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $16, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $56, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $96, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $136, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $176, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $20, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $60, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $100, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $140, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $180, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $24, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $64, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $104, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $144, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $184, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $28, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $68, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $108, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $148, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $188, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $32, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $72, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $112, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $152, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $192, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $36, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $76, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $116, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $156, %rcx
    movl %eax, (%rcx)
    movsxl -8(%rbp), %rax
    mov %rdx, %rcx
    add $196, %rcx
    movl %eax, (%rcx)
    movsxl -260(%rbp), %rax
    imul $2, %eax, %eax
    movq %rdx, -280(%rbp)
    mov %rax, %rdi
    call getinteger@PLT
    movq -280(%rbp), %rdx
    movl %eax, -4(%rbp)
    mov %rdx, %rcx
    add $200, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $204, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $208, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $212, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $216, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $220, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $224, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $228, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $232, %rcx
    movl %eax, (%rcx)
    movsxl -4(%rbp), %rax
    mov %rdx, %rcx
    add $236, %rcx
    movl %eax, (%rcx)
    movq -288(%rbp), %rax
    mov %rax, %rdi
    mov %rdx, %rsi
    cld
    mov $30, %rcx
    rep movsq
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_getb_end:

__kefir_text_section_end:

