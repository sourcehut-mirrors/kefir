.att_syntax
.section .note.GNU-stack,"",%progbits

.global b
.global u8
.global f32
.global f64
.global u16
.global u32
.global u64
.global get_b
.global get_u8
.global get_f32
.global get_f64
.global get_u16
.global get_u32
.global get_u64
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
get_b:
    movq b@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    ret

get_u8:
    movq u8@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_1@PLT
    ret

get_f32:
    movq f32@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    movq %rax, %xmm0
    ret

get_f64:
    movq f64@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    movq %rax, %xmm0
    ret

get_u16:
    movq u16@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_2@PLT
    ret

get_u32:
    movq u32@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_4@PLT
    ret

get_u64:
    movq u64@GOTPCREL(%rip), %rax
    mov %rax, %rdi
    mov $5, %rsi
    call __atomic_load_8@PLT
    ret


.section .bss
b:
    .skip 1

u8:
    .skip 1

    .align 4
f32:
    .skip 4

    .align 8
f64:
    .skip 8

    .align 2
u16:
    .skip 2

    .align 4
u32:
    .skip 4

    .align 8
u64:
    .skip 8

