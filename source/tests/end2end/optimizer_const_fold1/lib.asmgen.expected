.att_syntax
.section .note.GNU-stack,"",%progbits

.global int_or
.type int_or, @function
.global int_add
.type int_add, @function
.global int_and
.type int_and, @function
.global int_div
.type int_div, @function
.global int_mod
.type int_mod, @function
.global int_mul
.type int_mul, @function
.global int_neg
.type int_neg, @function
.global int_not
.type int_not, @function
.global int_shl
.type int_shl, @function
.global int_shr
.type int_shr, @function
.global int_sub
.type int_sub, @function
.global int_xor
.type int_xor, @function
.global bool_not
.type bool_not, @function
.global int_ashr
.type int_ashr, @function
.global int_div2
.type int_div2, @function
.global int_div3
.type int_div3, @function
.global int_less
.type int_less, @function
.global int_mod2
.type int_mod2, @function
.global int_mod3
.type int_mod3, @function
.global int_sub2
.type int_sub2, @function
.global bool_not2
.type bool_not2, @function
.global int_above
.type int_above, @function
.global int_ashr2
.type int_ashr2, @function
.global int_below
.type int_below, @function
.global int_less2
.type int_less2, @function
.global truct1bit
.type truct1bit, @function
.global int_above2
.type int_above2, @function
.global int_below2
.type int_below2, @function
.global int_equals
.type int_equals, @function
.global truct1bit2
.type truct1bit2, @function
.global int_equals2
.type int_equals2, @function
.global int_equals3
.type int_equals3, @function
.global int_greater
.type int_greater, @function
.global int_less_or_equals2
.type int_less_or_equals2, @function
.global int_greater_or_equals2
.type int_greater_or_equals2, @function
.global sign_extend16
.type sign_extend16, @function
.global sign_extend32
.type sign_extend32, @function
.global int_greater2
.type int_greater2, @function
.global sign_extend8
.type sign_extend8, @function
.global zero_extend8
.type zero_extend8, @function
.global int_below_or_equals
.type int_below_or_equals, @function
.global int_less_or_equals
.type int_less_or_equals, @function
.global int_greater_or_equals
.type int_greater_or_equals, @function
.global zero_extend16
.type zero_extend16, @function
.global zero_extend32
.type zero_extend32, @function
.global int_above_or_equals
.type int_above_or_equals, @function
.global int_below_or_equals2
.type int_below_or_equals2, @function
.global int_above_or_equals2
.type int_above_or_equals2, @function
.extern __kefirrt_opt_amd64_sysv_vararg_save
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
int_or:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_or_label0:
_kefir_func_int_or_label1:
    movabs $3741317886, %rax
    pop %rbp
    ret

int_add:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_add_label0:
_kefir_func_int_add_label1:
    mov $14, %rax
    pop %rbp
    ret

int_and:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_and_label0:
_kefir_func_int_and_label1:
    movabs $3400302782, %rax
    pop %rbp
    ret

int_div:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div_label0:
_kefir_func_int_div_label1:
    mov $-50, %rax
    pop %rbp
    ret

int_mod:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod_label0:
_kefir_func_int_mod_label1:
    mov $19, %rax
    pop %rbp
    ret

int_mul:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mul_label0:
_kefir_func_int_mul_label1:
    mov $3000, %rax
    pop %rbp
    ret

int_neg:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_neg_label0:
_kefir_func_int_neg_label1:
    mov $-1234, %rax
    pop %rbp
    ret

int_not:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_not_label0:
_kefir_func_int_not_label1:
    mov $-1235, %rax
    pop %rbp
    ret

int_shl:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_shl_label0:
_kefir_func_int_shl_label1:
    mov $4096, %rax
    pop %rbp
    ret

int_shr:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_shr_label0:
_kefir_func_int_shr_label1:
    movabs $4611686018427387903, %rax
    pop %rbp
    ret

int_sub:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_sub_label0:
_kefir_func_int_sub_label1:
    movabs $4294967146, %rax
    pop %rbp
    ret

int_xor:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_xor_label0:
_kefir_func_int_xor_label1:
    mov $341015104, %rax
    pop %rbp
    ret

bool_not:
    push %rbp
    mov %rsp, %rbp
_kefir_func_bool_not_label0:
_kefir_func_bool_not_label1:
    mov $0, %rax
    pop %rbp
    ret

int_ashr:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_ashr_label0:
_kefir_func_int_ashr_label1:
    mov $-1, %rax
    pop %rbp
    ret

int_div2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div2_label0:
_kefir_func_int_div2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_div3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div3_label0:
_kefir_func_int_div3_label1:
    mov $25, %rax
    pop %rbp
    ret

int_less:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_label0:
_kefir_func_int_less_label1:
    mov $1, %rax
    pop %rbp
    ret

int_mod2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod2_label0:
_kefir_func_int_mod2_label1:
    mov $-19, %rax
    pop %rbp
    ret

int_mod3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod3_label0:
_kefir_func_int_mod3_label1:
    mov $2147483647, %rax
    pop %rbp
    ret

int_sub2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_sub2_label0:
_kefir_func_int_sub2_label1:
    movabs $18446744073709551615, %rax
    pop %rbp
    ret

bool_not2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_bool_not2_label0:
_kefir_func_bool_not2_label1:
    mov $1, %rax
    pop %rbp
    ret

int_above:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_label0:
_kefir_func_int_above_label1:
    mov $1, %rax
    pop %rbp
    ret

int_ashr2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_ashr2_label0:
_kefir_func_int_ashr2_label1:
    mov $-256, %rax
    pop %rbp
    ret

int_below:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_label0:
_kefir_func_int_below_label1:
    mov $0, %rax
    pop %rbp
    ret

int_less2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less2_label0:
_kefir_func_int_less2_label1:
    mov $0, %rax
    pop %rbp
    ret

truct1bit:
    push %rbp
    mov %rsp, %rbp
_kefir_func_truct1bit_label0:
_kefir_func_truct1bit_label1:
    mov $1, %rax
    pop %rbp
    ret

int_above2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above2_label0:
_kefir_func_int_above2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_below2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below2_label0:
_kefir_func_int_below2_label1:
    mov $1, %rax
    pop %rbp
    ret

int_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals_label0:
_kefir_func_int_equals_label1:
    mov $1, %rax
    pop %rbp
    ret

truct1bit2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_truct1bit2_label0:
_kefir_func_truct1bit2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals2_label0:
_kefir_func_int_equals2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_equals3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals3_label0:
_kefir_func_int_equals3_label1:
    mov $1, %rax
    pop %rbp
    ret

int_greater:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_label0:
_kefir_func_int_greater_label1:
    mov $0, %rax
    pop %rbp
    ret

int_less_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_or_equals2_label0:
_kefir_func_int_less_or_equals2_label1:
    mov $0, %rax
    mov $0, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

int_greater_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_or_equals2_label0:
_kefir_func_int_greater_or_equals2_label1:
    mov $0, %rax
    mov $0, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

sign_extend16:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend16_label0:
_kefir_func_sign_extend16_label1:
    mov $102398, %rax
    pop %rbp
    ret

sign_extend32:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend32_label0:
_kefir_func_sign_extend32_label1:
    movabs $282162171478014, %rax
    pop %rbp
    ret

int_greater2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater2_label0:
_kefir_func_int_greater2_label1:
    mov $1, %rax
    pop %rbp
    ret

sign_extend8:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend8_label0:
_kefir_func_sign_extend8_label1:
    mov $384, %rax
    pop %rbp
    ret

zero_extend8:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend8_label0:
_kefir_func_zero_extend8_label1:
    mov $384, %rax
    pop %rbp
    ret

int_below_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_or_equals_label0:
_kefir_func_int_below_or_equals_label1:
    mov $0, %rax
    mov $1, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

int_less_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_or_equals_label0:
_kefir_func_int_less_or_equals_label1:
    mov $0, %rax
    mov $1, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

int_greater_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_or_equals_label0:
_kefir_func_int_greater_or_equals_label1:
    mov $0, %rax
    mov $1, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

zero_extend16:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend16_label0:
_kefir_func_zero_extend16_label1:
    mov $102398, %rax
    pop %rbp
    ret

zero_extend32:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend32_label0:
_kefir_func_zero_extend32_label1:
    movabs $282162171478014, %rax
    pop %rbp
    ret

int_above_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_or_equals_label0:
_kefir_func_int_above_or_equals_label1:
    mov $0, %rax
    mov $1, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

int_below_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_or_equals2_label0:
_kefir_func_int_below_or_equals2_label1:
    mov $0, %rax
    mov $0, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

int_above_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_or_equals2_label0:
_kefir_func_int_above_or_equals2_label1:
    mov $0, %rax
    mov $0, %rcx
    or %rcx, %rax
    setne %al
    movzx %al, %rax
    pop %rbp
    ret

__kefir_text_section_end:

