.att_syntax
.section .note.GNU-stack,"",%progbits

.global int_or
.global int_add
.global int_and
.global int_div
.global int_mod
.global int_mul
.global int_neg
.global int_not
.global int_shl
.global int_shr
.global int_sub
.global int_xor
.global bool_not
.global int_ashr
.global int_div2
.global int_div3
.global int_less
.global int_mod2
.global int_mod3
.global int_sub2
.global bool_not2
.global int_above
.global int_ashr2
.global int_below
.global int_less2
.global truct1bit
.global int_above2
.global int_below2
.global int_equals
.global truct1bit2
.global int_equals2
.global int_equals3
.global int_greater
.global int_less_or_equals2
.global int_greater_or_equals2
.global sign_extend16
.global sign_extend32
.global int_greater2
.global sign_extend8
.global zero_extend8
.global int_below_or_equals
.global int_less_or_equals
.global int_greater_or_equals
.global zero_extend16
.global zero_extend32
.global int_above_or_equals
.global int_below_or_equals2
.global int_above_or_equals2
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint

.section .text
int_or:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_or_label0:
_kefir_func_int_or_label1:
    movabs $3405691582, %rax
    movabs $3735929086, %rcx
    or %rcx, %rax
    pop %rbp
    ret

int_add:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_add_label0:
_kefir_func_int_add_label1:
    mov $2, %rax
    add $3, %rax
    movsx %eax, %rax
    mov $4, %rcx
    add $5, %rcx
    movsx %ecx, %rcx
    add %rcx, %rax
    movsx %eax, %rax
    pop %rbp
    ret

int_and:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_and_label0:
_kefir_func_int_and_label1:
    movabs $3405691582, %rax
    movabs $3735929086, %rcx
    and %rcx, %rax
    pop %rbp
    ret

int_div:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div_label0:
_kefir_func_int_div_label1:
    mov $100, %rax
    mov $0, %rcx
    sub $2, %rcx
    movsx %ecx, %rcx
    cqo
    idiv %rcx
    mov %rax, %rcx
    movsx %ecx, %rax
    pop %rbp
    ret

int_mod:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod_label0:
_kefir_func_int_mod_label1:
    mov $19, %rax
    pop %rbp
    ret

int_mul:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mul_label0:
_kefir_func_int_mul_label1:
    mov $100, %rax
    imul $2, %rax, %rax
    movsx %eax, %rax
    mov $5, %rcx
    imul $3, %rcx, %rcx
    movsx %ecx, %rcx
    imul %rcx, %rax
    movsx %eax, %rax
    pop %rbp
    ret

int_neg:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_neg_label0:
_kefir_func_int_neg_label1:
    mov $-1234, %rax
    pop %rbp
    ret

int_not:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_not_label0:
_kefir_func_int_not_label1:
    mov $-1235, %rax
    pop %rbp
    ret

int_shl:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_shl_label0:
_kefir_func_int_shl_label1:
    mov $4096, %rax
    pop %rbp
    ret

int_shr:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_shr_label0:
_kefir_func_int_shr_label1:
    movabs $4611686018427387903, %rax
    pop %rbp
    ret

int_sub:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_sub_label0:
_kefir_func_int_sub_label1:
    mov $0, %rax
    sub $100, %rax
    movsx %eax, %rax
    sub $55, %rax
    movsx %eax, %rax
    mov $1, %rcx
    sub $6, %rcx
    movsx %ecx, %rcx
    sub %rcx, %rax
    movsx %eax, %rax
    pop %rbp
    ret

int_xor:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_xor_label0:
_kefir_func_int_xor_label1:
    movabs $3405691582, %rax
    movabs $3735929086, %rcx
    xor %rcx, %rax
    pop %rbp
    ret

bool_not:
    push %rbp
    mov %rsp, %rbp
_kefir_func_bool_not_label0:
_kefir_func_bool_not_label1:
    mov $0, %rax
    pop %rbp
    ret

int_ashr:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_ashr_label0:
_kefir_func_int_ashr_label1:
    mov $-1, %rax
    pop %rbp
    ret

int_div2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div2_label0:
_kefir_func_int_div2_label1:
    mov $100, %rax
    mov $0, %rcx
    sub $2, %rcx
    movsx %ecx, %rcx
    mov %ecx, %ecx
    mov $0, %rdx
    div %rcx
    mov %rax, %rcx
    mov %ecx, %eax
    movsx %eax, %rax
    pop %rbp
    ret

int_div3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_div3_label0:
_kefir_func_int_div3_label1:
    mov $25, %rax
    pop %rbp
    ret

int_less:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_label0:
_kefir_func_int_less_label1:
    mov $1, %rax
    pop %rbp
    ret

int_mod2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod2_label0:
_kefir_func_int_mod2_label1:
    mov $-19, %rax
    pop %rbp
    ret

int_mod3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_mod3_label0:
_kefir_func_int_mod3_label1:
    mov $2147483647, %rax
    pop %rbp
    ret

int_sub2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_sub2_label0:
_kefir_func_int_sub2_label1:
    mov $0, %rax
    sub $1, %rax
    movsx %eax, %rax
    pop %rbp
    ret

bool_not2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_bool_not2_label0:
_kefir_func_bool_not2_label1:
    mov $1, %rax
    pop %rbp
    ret

int_above:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_label0:
_kefir_func_int_above_label1:
    mov $1, %rax
    pop %rbp
    ret

int_ashr2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_ashr2_label0:
_kefir_func_int_ashr2_label1:
    mov $-256, %rax
    pop %rbp
    ret

int_below:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_label0:
_kefir_func_int_below_label1:
    mov $0, %rax
    pop %rbp
    ret

int_less2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less2_label0:
_kefir_func_int_less2_label1:
    mov $0, %rax
    pop %rbp
    ret

truct1bit:
    push %rbp
    mov %rsp, %rbp
_kefir_func_truct1bit_label0:
_kefir_func_truct1bit_label1:
    mov $1, %rax
    pop %rbp
    ret

int_above2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above2_label0:
_kefir_func_int_above2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_below2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below2_label0:
_kefir_func_int_below2_label1:
    mov $1, %rax
    pop %rbp
    ret

int_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals_label0:
_kefir_func_int_equals_label1:
    mov $2, %rax
    imul $2, %rax, %rax
    movsx %eax, %rax
    add $2, %rax
    movsx %eax, %rax
    mov $3, %rcx
    add $2, %rcx
    movsx %ecx, %rcx
    add $1, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    pop %rbp
    ret

truct1bit2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_truct1bit2_label0:
_kefir_func_truct1bit2_label1:
    mov $0, %rax
    pop %rbp
    ret

int_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals2_label0:
_kefir_func_int_equals2_label1:
    mov $2, %rax
    imul $2, %rax, %rax
    movsx %eax, %rax
    add $2, %rax
    movsx %eax, %rax
    mov $4, %rcx
    add $2, %rcx
    movsx %ecx, %rcx
    add $1, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_equals3:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_equals3_label0:
_kefir_func_int_equals3_label1:
    mov $2, %rax
    imul $2, %rax, %rax
    movsx %eax, %rax
    add $2, %rax
    movsx %eax, %rax
    mov $3, %rcx
    add $2, %rcx
    movsx %ecx, %rcx
    add $1, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_greater:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_label0:
_kefir_func_int_greater_label1:
    mov $0, %rax
    pop %rbp
    ret

int_less_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_or_equals2_label0:
_kefir_func_int_less_or_equals2_label1:
    mov $1000, %rax
    mov $1, %rcx
    add $99, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setle %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_greater_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_or_equals2_label0:
_kefir_func_int_greater_or_equals2_label1:
    mov $-1, %rax
    mov $1, %rcx
    add $99, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setge %dl
    mov %rdx, %rax
    pop %rbp
    ret

sign_extend16:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend16_label0:
_kefir_func_sign_extend16_label1:
    mov $65535, %rax
    add $36863, %rax
    movsx %eax, %rax
    movsx %ax, %rax
    pop %rbp
    ret

sign_extend32:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend32_label0:
_kefir_func_sign_extend32_label1:
    movabs $281474976710655, %rax
    movabs $687194767359, %rcx
    add %rcx, %rax
    movsx %eax, %rax
    pop %rbp
    ret

int_greater2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater2_label0:
_kefir_func_int_greater2_label1:
    mov $1, %rax
    pop %rbp
    ret

sign_extend8:
    push %rbp
    mov %rsp, %rbp
_kefir_func_sign_extend8_label0:
_kefir_func_sign_extend8_label1:
    mov $256, %rax
    add $128, %rax
    movsx %eax, %rax
    movsx %al, %rax
    pop %rbp
    ret

zero_extend8:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend8_label0:
_kefir_func_zero_extend8_label1:
    mov $256, %rax
    add $128, %rax
    movsx %eax, %rax
    movzx %al, %rax
    pop %rbp
    ret

int_below_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_or_equals_label0:
_kefir_func_int_below_or_equals_label1:
    mov $-3, %rax
    mov $0, %rcx
    mov $4, %rdx
    sub $1, %rdx
    movsx %edx, %rdx
    sub %rdx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setbe %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_less_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_less_or_equals_label0:
_kefir_func_int_less_or_equals_label1:
    mov $100, %rax
    mov $1, %rcx
    add $99, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setle %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_greater_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_greater_or_equals_label0:
_kefir_func_int_greater_or_equals_label1:
    mov $100, %rax
    mov $1, %rcx
    add $99, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setge %dl
    mov %rdx, %rax
    pop %rbp
    ret

zero_extend16:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend16_label0:
_kefir_func_zero_extend16_label1:
    mov $65535, %rax
    add $36863, %rax
    movsx %eax, %rax
    movzx %ax, %rax
    pop %rbp
    ret

zero_extend32:
    push %rbp
    mov %rsp, %rbp
_kefir_func_zero_extend32_label0:
_kefir_func_zero_extend32_label1:
    movabs $281474976710655, %rax
    movabs $687194767359, %rcx
    add %rcx, %rax
    mov %eax, %eax
    pop %rbp
    ret

int_above_or_equals:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_or_equals_label0:
_kefir_func_int_above_or_equals_label1:
    mov $-3, %rax
    mov $-1, %rcx
    mov $2, %rdx
    add $1, %rdx
    movsx %edx, %rdx
    imul %rdx, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setge %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_below_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_below_or_equals2_label0:
_kefir_func_int_below_or_equals2_label1:
    mov $-1, %rax
    mov $0, %rcx
    mov $4, %rdx
    sub $1, %rdx
    movsx %edx, %rdx
    sub %rdx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setbe %dl
    mov %rdx, %rax
    pop %rbp
    ret

int_above_or_equals2:
    push %rbp
    mov %rsp, %rbp
_kefir_func_int_above_or_equals2_label0:
_kefir_func_int_above_or_equals2_label1:
    mov $-10, %rax
    mov $-1, %rcx
    mov $2, %rdx
    add $1, %rdx
    movsx %edx, %rdx
    imul %rdx, %rcx
    movsx %ecx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setge %dl
    mov %rdx, %rax
    pop %rbp
    ret


