.att_syntax
.section .note.GNU-stack,"",%progbits

.global get1
.type get1, @function
.global get2
.type get2, @function
.global get3
.type get3, @function
.global get4
.type get4, @function
.global get5
.type get5, @function
.global get6
.type get6, @function
.global get7
.type get7, @function

.section .text
__kefir_text_section_begin:
get1:
__kefir_text_func_get1_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_get1_label0:
    mov $30, %rax
    shl $59, %rax
    shr $59, %rax
    pop %rbp
    ret
__kefir_text_func_get1_end:

get2:
__kefir_text_func_get2_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_get2_label0:
    mov $1024, %rax
    shl $53, %rax
    shr $53, %rax
    pop %rbp
    ret
__kefir_text_func_get2_end:

get3:
__kefir_text_func_get3_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_get3_label0:
    mov $16777214, %rax
    pop %rbp
    ret
__kefir_text_func_get3_end:

get4:
__kefir_text_func_get4_begin:
    push %rbp
    mov %rsp, %rbp
_kefir_func_get4_label0:
    movabs $13949712720163, %rax
    shl $20, %rax
    shr $20, %rax
    pop %rbp
    ret
__kefir_text_func_get4_end:

get5:
__kefir_text_func_get5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
_kefir_func_get5_label0:
    movl $159868227, -32(%rbp)
    movl $1269486369, -28(%rbp)
    movl $267165987, -24(%rbp)
    movl $0, -20(%rbp)
    movdqu -32(%rbp), %xmm0
    movdqu %xmm0, -16(%rbp)
    leaq -16(%rbp), %rax
    mov %rax, %rdi
    mov $92, %rsi
    mov $120, %rdx
    call __kefir_bigint_cast_unsigned
    movq -16(%rbp), %rax
    movq -8(%rbp), %rdx
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get5_end:

get6:
__kefir_text_func_get6_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    mov %rdi, %rcx
_kefir_func_get6_label0:
    movl $3741244362, -64(%rbp)
    movl $1412569788, -60(%rbp)
    movl $2022742134, -56(%rbp)
    movl $2266117206, -52(%rbp)
    movl $2882400009, -48(%rbp)
    movl $0, -44(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -40(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -32(%rbp)
    movq -48(%rbp), %rax
    movq %rax, -24(%rbp)
    movq %rcx, -64(%rbp)
    leaq -40(%rbp), %rax
    mov %rax, %rdi
    mov $160, %rsi
    mov $200, %rdx
    call __kefir_bigint_cast_unsigned
    movq -64(%rbp), %rcx
    mov %rcx, %rax
    movdqu -40(%rbp), %xmm0
    movdqu %xmm0, (%rax)
    movdqu -24(%rbp), %xmm0
    movdqu %xmm0, 16(%rax)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get6_end:

get7:
__kefir_text_func_get7_begin:
    push %rbp
    mov %rsp, %rbp
    sub $176, %rsp
    mov %rdi, %r8
_kefir_func_get7_label0:
    movl $2004313702, -176(%rbp)
    movl $2576976008, -172(%rbp)
    movl $4026466304, -168(%rbp)
    movl $3436043758, -164(%rbp)
    movl $11185083, -160(%rbp)
    movl $1719109785, -156(%rbp)
    movl $573785173, -152(%rbp)
    movl $3723427601, -148(%rbp)
    movl $11189196, -144(%rbp)
    movl $0, -140(%rbp)
    movq -176(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -168(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -160(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -152(%rbp), %rax
    movq %rax, -112(%rbp)
    movq -144(%rbp), %rax
    movq %rax, -104(%rbp)
    movq %r8, -176(%rbp)
    leaq -136(%rbp), %rax
    mov %rax, %rdi
    mov $280, %rsi
    mov $1024, %rdx
    call __kefir_bigint_cast_unsigned
    movq -176(%rbp), %r8
    mov %r8, %rax
    mov %rax, %rdi
    leaq -136(%rbp), %rcx
    mov %rcx, %rsi
    cld
    mov $16, %rcx
    rep movsq
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_get7_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_cast_unsigned:
__kefir_text_func___kefir_bigint_cast_unsigned_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
_kefir_func___kefir_bigint_cast_unsigned_label0:
    movq %rdx, -32(%rbp)
    movq %rsi, -40(%rbp)
    movq %rdi, -80(%rbp)
    movq -32(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -48(%rbp)
    movq -32(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -56(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label12
_kefir_func___kefir_bigint_cast_unsigned_label1:
    movq -40(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label8
_kefir_func___kefir_bigint_cast_unsigned_label2:
    movq -40(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movq %rax, -24(%rbp)
    movq -24(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -40(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -64(%rbp)
    movq -64(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    mov $0, %rcx
    cmp %rdx, %rax
    setb %cl
    test %ecx, %ecx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label7
_kefir_func___kefir_bigint_cast_unsigned_label3:
    movq -16(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    add %rcx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label4:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label6
_kefir_func___kefir_bigint_cast_unsigned_label5:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label6:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label4
_kefir_func___kefir_bigint_cast_unsigned_label7:
    movq -64(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -16(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label3
_kefir_func___kefir_bigint_cast_unsigned_label8:
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -8(%rbp)
_kefir_func___kefir_bigint_cast_unsigned_label9:
    movq -8(%rbp), %rax
    movq -48(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rsi
    cmp %rax, %rcx
    sete %sil
    or %rsi, %rdx
    setne %dl
    movzx %dl, %rdx
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_cast_unsigned_label11
_kefir_func___kefir_bigint_cast_unsigned_label10:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label11:
    movq -80(%rbp), %rax
    movq -8(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb $0, (%rax)
    movq -8(%rbp), %rax
    add $1, %rax
    movq %rax, -8(%rbp)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label9
_kefir_func___kefir_bigint_cast_unsigned_label12:
    movq -56(%rbp), %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -8(%rbp)
    movl -8(%rbp), %eax
    movq -80(%rbp), %rcx
    movq -48(%rbp), %rdx
    imul $1, %rdx, %rdx
    add %rdx, %rcx
    movb (%rcx), %dl
    and $255, %rdx
    and %eax, %edx
    movb %dl, (%rcx)
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_cast_unsigned_end:


