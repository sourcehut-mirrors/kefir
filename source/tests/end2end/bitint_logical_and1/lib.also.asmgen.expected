.att_syntax
.section .note.GNU-stack,"",%progbits

.global and1
.type and1, @function
.global and2
.type and2, @function
.global and3
.type and3, @function
.global and4
.type and4, @function
.global and5
.type and5, @function
.global and6
.type and6, @function

.section .text
__kefir_text_section_begin:
and1:
__kefir_text_func_and1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_and1_label0:
    movb %sil, -1(%rbp)
    movb %dil, -2(%rbp)
    movb -2(%rbp), %al
    shl $58, %rax
    sar $58, %rax
    shl $58, %rax
    shr $58, %rax
    test %al, %al
    setne %al
    movzx %al, %rax
    mov $0, %rcx
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func_and1_label3
    mov %rax, %rdx
    jmp _kefir_func_and1_label1
_kefir_func_and1_label3:
    jmp _kefir_func_and1_label2
_kefir_func_and1_label1:
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and1_label2:
    movb -1(%rbp), %cl
    shl $58, %rcx
    sar $58, %rcx
    shl $58, %rcx
    shr $58, %rcx
    test %cl, %cl
    setne %cl
    movzx %cl, %rcx
    test %al, %al
    setne %al
    test %cl, %cl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %rdx
    jmp _kefir_func_and1_label1
__kefir_text_func_and1_end:

and2:
__kefir_text_func_and2_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_and2_label0:
    movw %si, -2(%rbp)
    movw %di, -4(%rbp)
    movw -4(%rbp), %ax
    shl $50, %rax
    sar $50, %rax
    shl $50, %rax
    shr $50, %rax
    test %ax, %ax
    setne %al
    movzx %al, %rax
    mov $0, %rcx
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func_and2_label3
    mov %rax, %rdx
    jmp _kefir_func_and2_label1
_kefir_func_and2_label3:
    jmp _kefir_func_and2_label2
_kefir_func_and2_label1:
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and2_label2:
    movw -2(%rbp), %cx
    shl $50, %rcx
    sar $50, %rcx
    shl $50, %rcx
    shr $50, %rcx
    test %cx, %cx
    setne %cl
    movzx %cl, %rcx
    test %al, %al
    setne %al
    test %cl, %cl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %rdx
    jmp _kefir_func_and2_label1
__kefir_text_func_and2_end:

and3:
__kefir_text_func_and3_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_and3_label0:
    movl %esi, -4(%rbp)
    movl %edi, -8(%rbp)
    movl -8(%rbp), %eax
    shl $35, %rax
    sar $35, %rax
    shl $35, %rax
    shr $35, %rax
    test %eax, %eax
    setne %al
    movzx %al, %rax
    mov $0, %rcx
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func_and3_label3
    mov %rax, %rdx
    jmp _kefir_func_and3_label1
_kefir_func_and3_label3:
    jmp _kefir_func_and3_label2
_kefir_func_and3_label1:
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and3_label2:
    movl -4(%rbp), %ecx
    shl $35, %rcx
    sar $35, %rcx
    shl $35, %rcx
    shr $35, %rcx
    test %ecx, %ecx
    setne %cl
    movzx %cl, %rcx
    test %al, %al
    setne %al
    test %cl, %cl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %rdx
    jmp _kefir_func_and3_label1
__kefir_text_func_and3_end:

and4:
__kefir_text_func_and4_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_and4_label0:
    movq %rsi, -8(%rbp)
    movq %rdi, -16(%rbp)
    movq -16(%rbp), %rax
    shl $6, %rax
    sar $6, %rax
    shl $6, %rax
    shr $6, %rax
    test %rax, %rax
    setne %al
    movzx %al, %rax
    mov $0, %rcx
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func_and4_label3
    mov %rax, %rdx
    jmp _kefir_func_and4_label1
_kefir_func_and4_label3:
    jmp _kefir_func_and4_label2
_kefir_func_and4_label1:
    mov %rdx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and4_label2:
    movq -8(%rbp), %rcx
    shl $6, %rcx
    sar $6, %rcx
    shl $6, %rcx
    shr $6, %rcx
    test %rcx, %rcx
    setne %cl
    movzx %cl, %rcx
    test %al, %al
    setne %al
    test %cl, %cl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %rdx
    jmp _kefir_func_and4_label1
__kefir_text_func_and4_end:

and5:
__kefir_text_func_and5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
_kefir_func_and5_label0:
    movq %rdx, -80(%rbp)
    movq %rcx, -72(%rbp)
    movq %rdi, -64(%rbp)
    movq %rsi, -56(%rbp)
    movdqu -80(%rbp), %xmm0
    movdqu %xmm0, -16(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -32(%rbp)
    movdqu -32(%rbp), %xmm0
    movdqu %xmm0, -96(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    mov $120, %rsi
    call __kefir_bigint_is_zero
    mov $0, %rdx
    test %al, %al
    sete %dl
    mov $0, %rcx
    test %dl, %dl
    sete %cl
    test %cl, %cl
    jz _kefir_func_and5_label3
    mov %rdx, %r8
    jmp _kefir_func_and5_label1
_kefir_func_and5_label3:
    jmp _kefir_func_and5_label2
_kefir_func_and5_label1:
    mov %r8, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and5_label2:
    movdqu -16(%rbp), %xmm0
    movdqu %xmm0, -96(%rbp)
    movq %rdx, -48(%rbp)
    movq %r8, -40(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    mov $120, %rsi
    call __kefir_bigint_is_zero
    movq -48(%rbp), %rdx
    movq -40(%rbp), %r8
    test %al, %al
    sete %cl
    test %dl, %dl
    setne %al
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %r8
    jmp _kefir_func_and5_label1
__kefir_text_func_and5_end:

and6:
__kefir_text_func_and6_begin:
    push %rbp
    mov %rsp, %rbp
    sub $144, %rsp
_kefir_func_and6_label0:
    lea 56(%rbp), %rax
    lea 16(%rbp), %rcx
    movq (%rax), %rdx
    movq %rdx, -40(%rbp)
    movq 8(%rax), %rdx
    movq %rdx, -32(%rbp)
    movq 16(%rax), %rdx
    movq %rdx, -24(%rbp)
    movq 24(%rax), %rdx
    movq %rdx, -16(%rbp)
    movq 32(%rax), %rdx
    movq %rdx, -8(%rbp)
    movq (%rcx), %rax
    movq %rax, -80(%rbp)
    movq 8(%rcx), %rax
    movq %rax, -72(%rbp)
    movq 16(%rcx), %rax
    movq %rax, -64(%rbp)
    movq 24(%rcx), %rax
    movq %rax, -56(%rbp)
    movq 32(%rcx), %rax
    movq %rax, -48(%rbp)
    movq -80(%rbp), %rax
    movq %rax, -144(%rbp)
    movq -72(%rbp), %rax
    movq %rax, -136(%rbp)
    movq -64(%rbp), %rax
    movq %rax, -128(%rbp)
    movq -56(%rbp), %rax
    movq %rax, -120(%rbp)
    movq -48(%rbp), %rax
    movq %rax, -112(%rbp)
    leaq -144(%rbp), %rax
    mov %rax, %rdi
    mov $310, %rsi
    call __kefir_bigint_is_zero
    mov $0, %rdx
    test %al, %al
    sete %dl
    mov $0, %rcx
    test %dl, %dl
    sete %cl
    test %cl, %cl
    jz _kefir_func_and6_label3
    mov %rdx, %r8
    jmp _kefir_func_and6_label1
_kefir_func_and6_label3:
    jmp _kefir_func_and6_label2
_kefir_func_and6_label1:
    mov %r8, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_and6_label2:
    movq -40(%rbp), %rcx
    movq %rcx, -144(%rbp)
    movq -32(%rbp), %rcx
    movq %rcx, -136(%rbp)
    movq -24(%rbp), %rcx
    movq %rcx, -128(%rbp)
    movq -16(%rbp), %rcx
    movq %rcx, -120(%rbp)
    movq -8(%rbp), %rcx
    movq %rcx, -112(%rbp)
    movq %rdx, -104(%rbp)
    movq %r8, -96(%rbp)
    leaq -144(%rbp), %rax
    mov %rax, %rdi
    mov $310, %rsi
    call __kefir_bigint_is_zero
    movq -104(%rbp), %rdx
    movq -96(%rbp), %r8
    test %al, %al
    sete %cl
    test %dl, %dl
    setne %al
    and %al, %cl
    movzx %cl, %rax
    mov %rax, %r8
    jmp _kefir_func_and6_label1
__kefir_text_func_and6_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_is_zero:
__kefir_text_func___kefir_bigint_is_zero_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
_kefir_func___kefir_bigint_is_zero_label0:
    movq %rsi, -56(%rbp)
    movq %rdi, -48(%rbp)
    movq -56(%rbp), %rax
    mov $0, %rdx
    movsx %edx, %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov $0, %rax
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label9
_kefir_func___kefir_bigint_is_zero_label1:
    movq -56(%rbp), %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rdx
    imul %rcx, %rdx
    add %rdx, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -40(%rbp)
    mov $0, %rcx
    movsx %ecx, %rax
    movq %rax, -32(%rbp)
_kefir_func___kefir_bigint_is_zero_label2:
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $0, %rdx
    cmp %rcx, %rax
    setb %dl
    mov $0, %rax
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label4
_kefir_func___kefir_bigint_is_zero_label3:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_is_zero_label4:
    movq -48(%rbp), %rax
    movq -32(%rbp), %rcx
    imul $1, %rcx, %rcx
    add %rcx, %rax
    movb (%rax), %al
    movb %al, -24(%rbp)
    movq -32(%rbp), %rax
    movq -40(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    add %rdx, %rax
    mov $0, %rdx
    cmp %rcx, %rax
    sete %dl
    mov $0, %rax
    test %edx, %edx
    sete %al
    test %al, %al
    jz _kefir_func___kefir_bigint_is_zero_label8
_kefir_func___kefir_bigint_is_zero_label5:
    movb -24(%rbp), %al
    mov $0, %rcx
    test %al, %al
    sete %cl
    test %cl, %cl
    jz _kefir_func___kefir_bigint_is_zero_label7
_kefir_func___kefir_bigint_is_zero_label6:
    movq -32(%rbp), %rax
    add $1, %rax
    movq %rax, -32(%rbp)
    jmp _kefir_func___kefir_bigint_is_zero_label2
_kefir_func___kefir_bigint_is_zero_label7:
    mov $0, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func___kefir_bigint_is_zero_label8:
    movq -56(%rbp), %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    mov $8, %rdx
    movsx %edx, %rcx
    mov $1, %rsi
    imul %rcx, %rsi
    mov $0, %rdx
    div %rsi
    movq %rax, -16(%rbp)
    movq -56(%rbp), %rax
    movq -16(%rbp), %rcx
    mov $1, %rsi
    movsx %esi, %rdx
    sub %rdx, %rax
    mov $8, %rsi
    movsx %esi, %rdx
    mov $1, %rsi
    imul %rdx, %rsi
    imul %rsi, %rcx
    sub %rcx, %rax
    movq %rax, -8(%rbp)
    movq -8(%rbp), %rcx
    mov $1, %rdx
    movsx %edx, %rax
    add %rax, %rcx
    mov $1, %rax
    shl %cl, %rax
    mov $1, %rdx
    movsx %edx, %rcx
    sub %rcx, %rax
    movl %eax, -20(%rbp)
    movl -20(%rbp), %eax
    movb -24(%rbp), %cl
    and $255, %rcx
    and %eax, %ecx
    movb %cl, -24(%rbp)
    jmp _kefir_func___kefir_bigint_is_zero_label5
_kefir_func___kefir_bigint_is_zero_label9:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_is_zero_end:


