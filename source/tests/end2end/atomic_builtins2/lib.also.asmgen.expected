.att_syntax
.section .note.GNU-stack,"",%progbits

.global test2_atomic_load8
.type test2_atomic_load8, @function
.extern __atomic_load
.global test2_atomic_load128
.type test2_atomic_load128, @function
.global test2_atomic_load256
.type test2_atomic_load256, @function
.global test_atomic_load8
.type test_atomic_load8, @function
.global test_atomic_load16
.type test_atomic_load16, @function
.global test_atomic_load32
.type test_atomic_load32, @function
.global test_atomic_load64
.type test_atomic_load64, @function
.global test_atomic_load128
.type test_atomic_load128, @function
.global test_atomic_load256
.type test_atomic_load256, @function
.global test2_atomic_load16
.type test2_atomic_load16, @function
.global test2_atomic_load32
.type test2_atomic_load32, @function
.global test2_atomic_load64
.type test2_atomic_load64, @function

.section .text
__kefir_text_section_begin:
test2_atomic_load8:
__kefir_text_func_test2_atomic_load8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movb $0, -1(%rbp)
    mov $1, %rdi
    mov %rax, %rsi
    leaq -1(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxb -1(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load8_end:

test2_atomic_load128:
__kefir_text_func_test2_atomic_load128_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    mov %rdi, %rax
    mov $16, %rdi
    mov %rax, %rsi
    leaq -16(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    fldt -16(%rbp)
    fstpt -32(%rbp)
    fldt -32(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load128_end:

test2_atomic_load256:
__kefir_text_func_test2_atomic_load256_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    mov %rdi, %rax
    mov $32, %rdi
    mov %rax, %rsi
    leaq -48(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    fldt -48(%rbp)
    fstpt -80(%rbp)
    fldt -32(%rbp)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fldt -80(%rbp)
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load256_end:

test_atomic_load8:
__kefir_text_func_test_atomic_load8_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movb $0, -1(%rbp)
    mov $1, %rdi
    mov %rax, %rsi
    leaq -1(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxb -1(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load8_end:

test_atomic_load16:
__kefir_text_func_test_atomic_load16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movw $0, -2(%rbp)
    mov $2, %rdi
    mov %rax, %rsi
    leaq -2(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxw -2(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load16_end:

test_atomic_load32:
__kefir_text_func_test_atomic_load32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movl $0, -4(%rbp)
    mov $4, %rdi
    mov %rax, %rsi
    leaq -4(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxl -4(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load32_end:

test_atomic_load64:
__kefir_text_func_test_atomic_load64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movq $0, -8(%rbp)
    mov $8, %rdi
    mov %rax, %rsi
    leaq -8(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load64_end:

test_atomic_load128:
__kefir_text_func_test_atomic_load128_begin:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
    mov %rdi, %rax
    mov $16, %rdi
    mov %rax, %rsi
    leaq -16(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    fldt -16(%rbp)
    fstpt -32(%rbp)
    fldt -32(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load128_end:

test_atomic_load256:
__kefir_text_func_test_atomic_load256_begin:
    push %rbp
    mov %rsp, %rbp
    sub $80, %rsp
    stmxcsr -8(%rbp)
    mov %rdi, %rax
    mov $32, %rdi
    mov %rax, %rsi
    leaq -48(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    fldt -48(%rbp)
    fstpt -80(%rbp)
    fldt -32(%rbp)
    fstpt -64(%rbp)
    fldt -64(%rbp)
    fldt -80(%rbp)
    ldmxcsr -8(%rbp)
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test_atomic_load256_end:

test2_atomic_load16:
__kefir_text_func_test2_atomic_load16_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movw $0, -2(%rbp)
    mov $2, %rdi
    mov %rax, %rsi
    leaq -2(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxw -2(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load16_end:

test2_atomic_load32:
__kefir_text_func_test2_atomic_load32_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movl $0, -4(%rbp)
    mov $4, %rdi
    mov %rax, %rsi
    leaq -4(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movsxl -4(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load32_end:

test2_atomic_load64:
__kefir_text_func_test2_atomic_load64_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    mov %rdi, %rax
    movq $0, -8(%rbp)
    mov $8, %rdi
    mov %rax, %rsi
    leaq -8(%rbp), %rdx
    mov $5, %rcx
    call __atomic_load@PLT
    movq -8(%rbp), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_atomic_load64_end:

__kefir_text_section_end:

