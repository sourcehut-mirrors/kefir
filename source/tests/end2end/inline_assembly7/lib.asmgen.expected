.att_syntax
.section .note.GNU-stack,"",%progbits

.global make_s1
.global cast_int
.global sum3_one
.global unwrap_s1
.extern __kefirrt_opt_save_registers
.extern __kefirrt_opt_load_int_vararg
.extern __kefirrt_opt_load_sse_vararg
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int

.section .text
make_s1:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
__kefir_func_make_s1_block0:
    lea -16(%rbp), %rax
    movl %edi, (%rax)
    lea -12(%rbp), %rax
    lea -16(%rbp), %rcx
    movl (%rcx), %edx
    mov %rdx, %rcx
    sub $16, %rsp
    mov %rax, (%rsp)
    mov %rcx, %rax

    mov (%rsp), %rcx
    mov %eax, (%rcx)
    add $16, %rsp
    lea -12(%rbp), %rax
    mov %rax, %rsi
    mov (%rsi), %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
.section .text

cast_int:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
__kefir_func_cast_int_block0:
    lea -16(%rbp), %rax
    movq %rdi, (%rax)
    lea -8(%rbp), %rax
    lea -16(%rbp), %rcx
    movq (%rcx), %rdx
    mov %rdx, %rcx
    sub $16, %rsp
    mov %rax, (%rsp)
    mov %rcx, %rax

    mov (%rsp), %rcx
    mov %eax, (%rcx)
    add $16, %rsp
    lea -8(%rbp), %rax
    movl (%rax), %ecx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
.section .text

sum3_one:
    push %rbp
    mov %rsp, %rbp
    sub $32, %rsp
__kefir_func_sum3_one_block0:
    lea -16(%rbp), %rax
    movq %rdx, (%rax)
    lea -24(%rbp), %rax
    movq %rsi, (%rax)
    lea -32(%rbp), %rax
    movq %rdi, (%rax)
    lea -8(%rbp), %rax
    lea -16(%rbp), %rcx
    lea -32(%rbp), %rdx
    movq (%rdx), %rsi
    mov %rsi, %rdx
    lea -24(%rbp), %rsi
    movq (%rsi), %rdi
    mov %rdi, %rsi
    lea -16(%rbp), %rdi
    movq (%rdi), %r8
    mov %r8, %rdi
    mov $1, %r8
    sub $16, %rsp
    mov %rax, (%rsp)
    mov %rcx, 8(%rsp)
    push %rdx
    push %rsi
    mov %r8, %rcx
    mov %rdi, %rdx
    mov 8(%rsp), %rsi
    mov (%rsp), %rdi
    add $16, %rsp
add %rsi, %rcx
add %rdi, %rdx
add %rdx, %rcx
    mov (%rsp), %r8
    mov %rcx, (%r8)
    mov 8(%rsp), %r8
    mov %rdx, (%r8)
    add $16, %rsp
    lea -8(%rbp), %rax
    movq (%rax), %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
.section .text

unwrap_s1:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
__kefir_func_unwrap_s1_block0:
    mov %rdi, -8(%rbp)
    lea -8(%rbp), %rax
    lea -16(%rbp), %rcx
    mov %rax, %rsi
    mov %rcx, %rdi
    mov $4, %rcx
    rep movsb
    lea -12(%rbp), %rcx
    lea -16(%rbp), %rdx
    sub $16, %rsp
    mov %rcx, (%rsp)
    mov %rdx, %rax
    mov (%rax), %eax

    mov (%rsp), %rcx
    mov %eax, (%rcx)
    add $16, %rsp
    lea -12(%rbp), %rcx
    movl (%rcx), %eax
    mov %rax, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
.section .rodata
.section .text


