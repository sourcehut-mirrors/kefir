.att_syntax
.section .note.GNU-stack,"",%progbits

.global eval1
.type eval1, @function
.global eval2
.type eval2, @function

.section .text
__kefir_text_section_begin:
eval1:
__kefir_text_func_eval1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
_kefir_func_eval1_label0:
_kefir_func_eval1_label1:
    movl %edi, -12(%rbp)
    movsxl -12(%rbp), %rax
    add $1, %eax
    movl %eax, -8(%rbp)
    movsxl -12(%rbp), %rax
    add $1, %eax
    movl %eax, -12(%rbp)
    movsxl -12(%rbp), %rax
    sub $1, %eax
    movl %eax, -4(%rbp)
    movsxl -8(%rbp), %rax
    movsxl -4(%rbp), %rcx
    add %ecx, %eax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_eval1_end:

eval2:
__kefir_text_func_eval2_begin:
    push %rbp
    mov %rsp, %rbp
    sub $48, %rsp
    movq $0, -48(%rbp)
_kefir_func_eval2_label0:
_kefir_func_eval2_label1:
    movl %edi, -24(%rbp)
    movsxl -24(%rbp), %rsi
    movq -48(%rbp), %rax
    sub $16, %rsp
    movq -48(%rbp), %rcx
    movq %rcx, (%rsp)
    movq %rsp, -48(%rbp)
    lea -32(%rbp), %rcx
    mov $0, %rdx
    add %rdx, %rcx
    movq %rax, (%rcx)
    movsxl -24(%rbp), %rax
    lea -16(%rbp), %rcx
    add $8, %rcx
    movsx %eax, %rax
    imul $8, %rax, %rax
    movq %rax, (%rcx)
    lea -16(%rbp), %rcx
    mov $8, %rdx
    sub %rax, %rsp
    mov $16, %rax
    cmp %rdx, %rax
    cmovl %rdx, %rax
    neg %rax
    and %rax, %rsp
    mov %rsp, %rax
    movq %rax, (%rcx)
    lea -16(%rbp), %rax
    add $8, %rax
    movq (%rax), %rax
    lea -32(%rbp), %rcx
    mov $0, %rdx
    add %rdx, %rcx
    movq (%rcx), %rcx
    cmpq $0, -48(%rbp)
    jz _kefir_func_eval2_label2
    movq -48(%rbp), %rsp
    movq (%rsp), %rcx
    movq %rcx, -48(%rbp)
    add $16, %rsp
_kefir_func_eval2_label2:
    movsx %esi, %rcx
    add %rax, %rcx
    mov %rcx, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_eval2_end:

__kefir_text_section_end:

