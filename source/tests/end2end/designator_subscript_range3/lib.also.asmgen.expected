.att_syntax
.section .note.GNU-stack,"",%progbits

.global getb
.type getb, @function
.extern getinteger
.extern __kefirrt_opt_float32_to_uint
.extern __kefirrt_opt_float64_to_uint
.extern __kefirrt_opt_long_double_to_int
.extern __kefirrt_opt_long_double_to_uint
.extern __kefirrt_opt_complex_long_double_equals
.extern __kefirrt_opt_complex_long_double_truncate_1bit
.extern __kefirrt_opt_complex_float32_mul
.extern __kefirrt_opt_complex_float32_div
.extern __kefirrt_opt_complex_float64_mul
.extern __kefirrt_opt_complex_float64_div
.extern __kefirrt_opt_complex_long_double_mul
.extern __kefirrt_opt_complex_long_double_div
.extern __kefirrt_fenv_update
.extern __kefir_opt_float32_neg
.extern __kefir_opt_float64_neg
.extern __kefir_opt_uint2long_double
.extern __kefir_opt_complex_float32_neg
.extern __kefir_opt_complex_float64_neg

.section .text
__kefir_text_section_begin:
getb:
__kefir_text_func_getb_begin:
    push %rbp
    mov %rsp, %rbp
    sub $224, %rsp
    movq %rdi, -224(%rbp)
_kefir_func_getb_label0:
_kefir_func_getb_label1:
    movl %esi, -8(%rbp)
    lea -208(%rbp), %rdx
    mov %rdx, %rdi
    mov $0, %rax
    mov $200, %rcx
    rep stosb
    movsxl -8(%rbp), %rax
    movq %rdx, -216(%rbp)
    mov %rax, %rdi
    call getinteger@PLT
    movq -216(%rbp), %rdx
    movl %eax, -4(%rbp)
    movl %eax, -208(%rbp)
    mov %rdx, %rax
    add $4, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $8, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $12, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $16, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $20, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $24, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $28, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $32, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $36, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $40, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $44, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $48, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $52, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $56, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $60, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $64, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $68, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $72, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $76, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $80, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $84, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $88, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $92, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $96, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $100, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $104, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $108, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $112, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $116, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $120, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $124, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $128, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $132, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $136, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $140, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $144, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $148, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $152, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $156, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $160, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $164, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $168, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $172, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $176, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $180, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $184, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $188, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    mov %rdx, %rax
    add $192, %rax
    movsxl -4(%rbp), %rcx
    movl %ecx, (%rax)
    add $196, %rdx
    movsxl -4(%rbp), %rax
    movl %eax, (%rdx)
    lea -208(%rbp), %rcx
    movq -224(%rbp), %rax
    mov %rax, %rdi
    mov %rcx, %rsi
    cld
    mov $25, %rcx
    rep movsq
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_getb_end:

__kefir_text_section_end:

