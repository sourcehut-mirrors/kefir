.att_syntax
.section .note.GNU-stack,"",%progbits

.global test1
.type test1, @function
.global test2
.type test2, @function
.global test3
.type test3, @function
.global test4
.type test4, @function
.global test5
.type test5, @function

.section .text
__kefir_text_section_begin:
test1:
__kefir_text_func_test1_begin:
    mov %rdi, %rax
    shl $58, %rax
    shr $58, %rax
    xor %ecx, %ecx
    cmp $48, %al
    seta %cl
    mov %rdi, %rax
    shl $58, %rax
    shr $58, %rax
    xor %edx, %edx
    mov $48, %rsi
    cmp %al, %sil
    sete %dl
    or %dl, %cl
    setne %cl
    movzx %cl, %rcx
    mov %rdi, %rax
    shl $58, %rax
    shr $58, %rax
    xor %edx, %edx
    cmp $63, %al
    setb %dl
    shl $58, %rdi
    shr $58, %rdi
    xor %eax, %eax
    mov $63, %rsi
    cmp %dil, %sil
    sete %al
    or %al, %dl
    setne %dl
    movzx %dl, %rdx
    test %cl, %cl
    setne %al
    test %dl, %dl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test1_label2
    mov $2, %rax
    ret
_kefir_func_test1_label2:
    mov $1, %rax
    ret
__kefir_text_func_test1_end:

test2:
__kefir_text_func_test2_begin:
    mov %rdi, %rax
    shl $50, %rax
    shr $50, %rax
    xor %ecx, %ecx
    cmp $16128, %ax
    seta %cl
    mov %rdi, %rax
    shl $50, %rax
    shr $50, %rax
    xor %edx, %edx
    mov $16128, %rsi
    cmp %ax, %si
    sete %dl
    or %dl, %cl
    setne %cl
    movzx %cl, %rcx
    mov %rdi, %rax
    shl $50, %rax
    shr $50, %rax
    xor %edx, %edx
    cmp $16383, %ax
    setb %dl
    shl $50, %rdi
    shr $50, %rdi
    xor %eax, %eax
    mov $16383, %rsi
    cmp %di, %si
    sete %al
    or %al, %dl
    setne %dl
    movzx %dl, %rdx
    test %cl, %cl
    setne %al
    test %dl, %dl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test2_label2
    mov $2, %rax
    ret
_kefir_func_test2_label2:
    mov $1, %rax
    ret
__kefir_text_func_test2_end:

test3:
__kefir_text_func_test3_begin:
    mov %rdi, %rax
    shl $35, %rax
    shr $35, %rax
    xor %ecx, %ecx
    cmp $536870656, %eax
    seta %cl
    mov %rdi, %rax
    shl $35, %rax
    shr $35, %rax
    xor %edx, %edx
    mov $536870656, %rsi
    cmp %eax, %esi
    sete %dl
    or %dl, %cl
    setne %cl
    movzx %cl, %rcx
    mov %rdi, %rax
    shl $35, %rax
    shr $35, %rax
    xor %edx, %edx
    cmp $536870911, %eax
    setb %dl
    shl $35, %rdi
    shr $35, %rdi
    xor %eax, %eax
    mov $536870911, %rsi
    cmp %edi, %esi
    sete %al
    or %al, %dl
    setne %dl
    movzx %dl, %rdx
    test %cl, %cl
    setne %al
    test %dl, %dl
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test3_label2
    mov $2, %rax
    ret
_kefir_func_test3_label2:
    mov $1, %rax
    ret
__kefir_text_func_test3_end:

test4:
__kefir_text_func_test4_begin:
    mov %rdi, %rax
    shl $4, %rax
    shr $4, %rax
    movabs $1152921504606846720, %rcx
    xor %edx, %edx
    cmp %rcx, %rax
    seta %dl
    movabs $1152921504606846720, %rax
    mov %rdi, %rcx
    shl $4, %rcx
    shr $4, %rcx
    xor %esi, %esi
    cmp %rcx, %rax
    sete %sil
    or %sil, %dl
    setne %dl
    movzx %dl, %rdx
    mov %rdi, %rax
    shl $4, %rax
    shr $4, %rax
    movabs $1152921504606846975, %rcx
    xor %esi, %esi
    cmp %rcx, %rax
    setb %sil
    movabs $1152921504606846975, %rax
    shl $4, %rdi
    shr $4, %rdi
    xor %ecx, %ecx
    cmp %rdi, %rax
    sete %cl
    or %cl, %sil
    setne %sil
    movzx %sil, %rsi
    test %dl, %dl
    setne %al
    test %sil, %sil
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test4_label2
    mov $2, %rax
    ret
_kefir_func_test4_label2:
    mov $1, %rax
    ret
__kefir_text_func_test4_end:

test5:
__kefir_text_func_test5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $64, %rsp
    movq %rdi, -48(%rbp)
    movq %rsi, -40(%rbp)
    movl $4294967040, -64(%rbp)
    movl $4294967295, -60(%rbp)
    movl $0, -56(%rbp)
    movl $0, -52(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -64(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    xor %ecx, %ecx
    cmp $1, %al
    sete %cl
    movq %rcx, -32(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    leaq -48(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -32(%rbp), %rcx
    xor %edx, %edx
    cmp $0, %al
    sete %dl
    or %dl, %cl
    setne %cl
    movzx %cl, %rcx
    movl $4294967295, -64(%rbp)
    movl $4294967295, -60(%rbp)
    movl $0, -56(%rbp)
    movl $0, -52(%rbp)
    movq %rcx, -32(%rbp)
    leaq -48(%rbp), %rax
    mov %rax, %rdi
    leaq -64(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -32(%rbp), %rcx
    xor %r8d, %r8d
    cmp $-1, %al
    sete %r8b
    movq %rcx, -24(%rbp)
    movq %r8, -16(%rbp)
    leaq -64(%rbp), %rax
    mov %rax, %rdi
    leaq -48(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -24(%rbp), %rcx
    movq -16(%rbp), %r8
    xor %edx, %edx
    cmp $0, %al
    sete %dl
    or %dl, %r8b
    setne %r8b
    movzx %r8b, %r8
    test %cl, %cl
    setne %al
    test %r8b, %r8b
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test5_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test5_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test5_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_unsigned_compare:
__kefir_text_func___kefir_bigint_unsigned_compare_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    push %r12
    push %r13
    push %r14
    push %r15
    sub $8, %rsp
    mov %rdx, %rcx
    mov %rcx, %rdx
    sub $-7, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %r8
    div %r8
    mov %rax, %r12
    mov %rcx, %r13
    mov %rdi, %r14
    mov %rsi, %r15
    movq %rax, -48(%rbp)
_kefir_func___kefir_bigint_unsigned_compare_label1:
    cmp $0, %r12
    ja _kefir_func___kefir_bigint_unsigned_compare_label3
    xor %eax, %eax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label3:
    mov %r12, %rax
    sub $1, %rax
    mov %r14, %rdi
    add %rax, %rdi
    movzxb (%rdi), %r10
    mov %r12, %rax
    sub $1, %rax
    mov %r15, %rsi
    add %rax, %rsi
    movzxb (%rsi), %r9
    movq -48(%rbp), %rax
    cmp %rax, %r12
    je _kefir_func___kefir_bigint_unsigned_compare_label9
    mov %r10, %r11
    mov %r9, %rbx
_kefir_func___kefir_bigint_unsigned_compare_label4:
    cmp %ebx, %r11d
    ja _kefir_func___kefir_bigint_unsigned_compare_label8
    cmp %ebx, %r11d
    jb _kefir_func___kefir_bigint_unsigned_compare_label7
    mov %r12, %rax
    mov %r13, %rdx
    mov %r14, %rdi
    mov %r15, %rsi
    movq -48(%rbp), %rcx
    add $-1, %rax
    mov %rax, %r12
    mov %rdx, %r13
    mov %rdi, %r14
    mov %rsi, %r15
    movq %rcx, -48(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_compare_label1
_kefir_func___kefir_bigint_unsigned_compare_label7:
    mov $-1, %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label8:
    mov $1, %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label9:
    mov %r13, %rcx
    sub $1, %rcx
    mov %r13, %rdx
    sub $1, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %rsi
    div %rsi
    imul $8, %rax, %r8
    mov %rcx, %rdx
    sub %r8, %rdx
    add $1, %rdx
    mov %edx, %ecx
    mov $1, %r8
    shl %cl, %r8
    sub $1, %r8
    mov %r10, %rcx
    and %r8d, %ecx
    and %r8d, %r9d
    mov %rcx, %r11
    mov %r9, %rbx
    jmp _kefir_func___kefir_bigint_unsigned_compare_label4
__kefir_text_func___kefir_bigint_unsigned_compare_end:


