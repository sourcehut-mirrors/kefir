.att_syntax
.section .note.GNU-stack,"",%progbits

.global test1
.type test1, @function
.global test2
.type test2, @function
.global test3
.type test3, @function
.global test4
.type test4, @function
.global test5
.type test5, @function

.section .text
__kefir_text_section_begin:
test1:
__kefir_text_func_test1_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    movb %dil, -1(%rbp)
    movb -1(%rbp), %al
    mov %rax, %r8
    shl $58, %r8
    shr $58, %r8
    mov %r8, %rax
    shl $58, %rax
    shr $58, %rax
    mov $240, %rcx
    shl $58, %rcx
    shr $58, %rcx
    mov %rcx, %rdx
    shl $58, %rdx
    shr $58, %rdx
    xor %esi, %esi
    cmp %dl, %al
    seta %sil
    shl $58, %rcx
    shr $58, %rcx
    mov %r8, %rax
    shl $58, %rax
    shr $58, %rax
    xor %edx, %edx
    cmp %al, %cl
    sete %dl
    or %dl, %sil
    setne %sil
    movzx %sil, %rsi
    mov %r8, %rax
    shl $58, %rax
    shr $58, %rax
    mov $255, %rcx
    shl $58, %rcx
    shr $58, %rcx
    mov %rcx, %rdx
    shl $58, %rdx
    shr $58, %rdx
    xor %edi, %edi
    cmp %dl, %al
    setb %dil
    shl $58, %rcx
    shr $58, %rcx
    mov %r8, %rax
    shl $58, %rax
    shr $58, %rax
    xor %edx, %edx
    cmp %al, %cl
    sete %dl
    or %dl, %dil
    setne %dil
    movzx %dil, %rdi
    test %sil, %sil
    setne %al
    test %dil, %dil
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test1_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test1_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test1_end:

test2:
__kefir_text_func_test2_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    movw %di, -2(%rbp)
    movw -2(%rbp), %ax
    mov %rax, %r8
    shl $50, %r8
    shr $50, %r8
    mov %r8, %rax
    shl $50, %rax
    shr $50, %rax
    mov $65280, %rcx
    shl $50, %rcx
    shr $50, %rcx
    mov %rcx, %rdx
    shl $50, %rdx
    shr $50, %rdx
    xor %esi, %esi
    cmp %dx, %ax
    seta %sil
    shl $50, %rcx
    shr $50, %rcx
    mov %r8, %rax
    shl $50, %rax
    shr $50, %rax
    xor %edx, %edx
    cmp %ax, %cx
    sete %dl
    or %dl, %sil
    setne %sil
    movzx %sil, %rsi
    mov %r8, %rax
    shl $50, %rax
    shr $50, %rax
    mov $65535, %rcx
    shl $50, %rcx
    shr $50, %rcx
    mov %rcx, %rdx
    shl $50, %rdx
    shr $50, %rdx
    xor %edi, %edi
    cmp %dx, %ax
    setb %dil
    shl $50, %rcx
    shr $50, %rcx
    mov %r8, %rax
    shl $50, %rax
    shr $50, %rax
    xor %edx, %edx
    cmp %ax, %cx
    sete %dl
    or %dl, %dil
    setne %dil
    movzx %dil, %rdi
    test %sil, %sil
    setne %al
    test %dil, %dil
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test2_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test2_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test2_end:

test3:
__kefir_text_func_test3_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    movl %edi, -4(%rbp)
    movl -4(%rbp), %eax
    mov %rax, %r8
    shl $35, %r8
    shr $35, %r8
    mov %r8, %rax
    shl $35, %rax
    shr $35, %rax
    movabs $4294967040, %rcx
    shl $35, %rcx
    shr $35, %rcx
    mov %rcx, %rdx
    shl $35, %rdx
    shr $35, %rdx
    xor %esi, %esi
    cmp %edx, %eax
    seta %sil
    shl $35, %rcx
    shr $35, %rcx
    mov %r8, %rax
    shl $35, %rax
    shr $35, %rax
    xor %edx, %edx
    cmp %eax, %ecx
    sete %dl
    or %dl, %sil
    setne %sil
    movzx %sil, %rsi
    mov %r8, %rax
    shl $35, %rax
    shr $35, %rax
    movabs $4294967295, %rcx
    shl $35, %rcx
    shr $35, %rcx
    mov %rcx, %rdx
    shl $35, %rdx
    shr $35, %rdx
    xor %edi, %edi
    cmp %edx, %eax
    setb %dil
    shl $35, %rcx
    shr $35, %rcx
    mov %r8, %rax
    shl $35, %rax
    shr $35, %rax
    xor %edx, %edx
    cmp %eax, %ecx
    sete %dl
    or %dl, %dil
    setne %dil
    movzx %dil, %rdi
    test %sil, %sil
    setne %al
    test %dil, %dil
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test3_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test3_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test3_end:

test4:
__kefir_text_func_test4_begin:
    push %rbp
    mov %rsp, %rbp
    sub $16, %rsp
    movq %rdi, -8(%rbp)
    movq -8(%rbp), %rax
    mov %rax, %r8
    shl $4, %r8
    shr $4, %r8
    mov %r8, %rax
    shl $4, %rax
    shr $4, %rax
    mov $-256, %rcx
    shl $4, %rcx
    shr $4, %rcx
    mov %rcx, %rdx
    shl $4, %rdx
    shr $4, %rdx
    xor %esi, %esi
    cmp %rdx, %rax
    seta %sil
    shl $4, %rcx
    shr $4, %rcx
    mov %r8, %rax
    shl $4, %rax
    shr $4, %rax
    xor %edx, %edx
    cmp %rax, %rcx
    sete %dl
    or %dl, %sil
    setne %sil
    movzx %sil, %rsi
    mov %r8, %rax
    shl $4, %rax
    shr $4, %rax
    mov $-1, %rcx
    shl $4, %rcx
    shr $4, %rcx
    mov %rcx, %rdx
    shl $4, %rdx
    shr $4, %rdx
    xor %edi, %edi
    cmp %rdx, %rax
    setb %dil
    shl $4, %rcx
    shr $4, %rcx
    mov %r8, %rax
    shl $4, %rax
    shr $4, %rax
    xor %edx, %edx
    cmp %rax, %rcx
    sete %dl
    or %dl, %dil
    setne %dil
    movzx %dil, %rdi
    test %sil, %sil
    setne %al
    test %dil, %dil
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test4_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test4_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test4_end:

test5:
__kefir_text_func_test5_begin:
    push %rbp
    mov %rsp, %rbp
    sub $96, %rsp
    movq %rdi, -64(%rbp)
    movq %rsi, -56(%rbp)
    movdqu -64(%rbp), %xmm0
    movdqu %xmm0, -16(%rbp)
    movdqu -16(%rbp), %xmm0
    movdqu %xmm0, -80(%rbp)
    mov $-256, %rdx
    shl $0, %rdx
    shr $0, %rdx
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    mov $120, %rsi
    call __kefir_bigint_set_unsigned_integer
    leaq -80(%rbp), %rax
    mov %rax, %rdi
    leaq -96(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    xor %ecx, %ecx
    cmp $1, %al
    sete %cl
    movq %rcx, -48(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    leaq -80(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -48(%rbp), %rcx
    xor %edx, %edx
    cmp $0, %al
    sete %dl
    or %dl, %cl
    setne %cl
    movzx %cl, %rcx
    mov $-1, %rdx
    shl $0, %rdx
    shr $0, %rdx
    movq %rcx, -48(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    mov $120, %rsi
    call __kefir_bigint_set_unsigned_integer
    movq -48(%rbp), %rcx
    movq %rcx, -48(%rbp)
    leaq -80(%rbp), %rax
    mov %rax, %rdi
    leaq -96(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -48(%rbp), %rcx
    xor %r8d, %r8d
    cmp $-1, %al
    sete %r8b
    movq %rcx, -40(%rbp)
    movq %r8, -32(%rbp)
    leaq -96(%rbp), %rax
    mov %rax, %rdi
    leaq -80(%rbp), %rax
    mov %rax, %rsi
    mov $120, %rdx
    call __kefir_bigint_unsigned_compare
    movq -40(%rbp), %rcx
    movq -32(%rbp), %r8
    xor %edx, %edx
    cmp $0, %al
    sete %dl
    or %dl, %r8b
    setne %r8b
    movzx %r8b, %r8
    test %cl, %cl
    setne %al
    test %r8b, %r8b
    setne %cl
    and %al, %cl
    movzx %cl, %rax
    test %al, %al
    jnz _kefir_func_test5_label2
    mov $2, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
_kefir_func_test5_label2:
    mov $1, %rax
    lea (%rbp), %rsp
    pop %rbp
    ret
__kefir_text_func_test5_end:

__kefir_text_section_end:

.att_syntax
.section .note.GNU-stack,"",%progbits


.section .text
__kefir_bigint_unsigned_compare:
__kefir_text_func___kefir_bigint_unsigned_compare_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    push %r12
    push %r13
    push %r14
    push %r15
    sub $8, %rsp
    mov %rdx, %rcx
    mov %rcx, %rdx
    sub $-7, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %r8
    div %r8
    mov %rax, %r12
    mov %rcx, %r13
    mov %rdi, %r14
    mov %rsi, %r15
    movq %rax, -48(%rbp)
_kefir_func___kefir_bigint_unsigned_compare_label1:
    cmp $0, %r12
    ja _kefir_func___kefir_bigint_unsigned_compare_label3
    xor %eax, %eax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label3:
    mov %r12, %rax
    sub $1, %rax
    mov %r14, %rdi
    add %rax, %rdi
    movzxb (%rdi), %r10
    mov %r12, %rax
    sub $1, %rax
    mov %r15, %rsi
    add %rax, %rsi
    movzxb (%rsi), %r9
    movq -48(%rbp), %rax
    cmp %rax, %r12
    je _kefir_func___kefir_bigint_unsigned_compare_label9
    mov %r10, %r11
    mov %r9, %rbx
_kefir_func___kefir_bigint_unsigned_compare_label4:
    cmp %ebx, %r11d
    ja _kefir_func___kefir_bigint_unsigned_compare_label8
    cmp %ebx, %r11d
    jb _kefir_func___kefir_bigint_unsigned_compare_label7
    mov %r12, %rax
    mov %r13, %rdx
    mov %r14, %rdi
    mov %r15, %rsi
    movq -48(%rbp), %rcx
    add $-1, %rax
    mov %rax, %r12
    mov %rdx, %r13
    mov %rdi, %r14
    mov %rsi, %r15
    movq %rcx, -48(%rbp)
    jmp _kefir_func___kefir_bigint_unsigned_compare_label1
_kefir_func___kefir_bigint_unsigned_compare_label7:
    mov $-1, %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label8:
    mov $1, %rax
    lea -40(%rbp), %rsp
    pop %r15
    pop %r14
    pop %r13
    pop %r12
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_unsigned_compare_label9:
    mov %r13, %rcx
    sub $1, %rcx
    mov %r13, %rdx
    sub $1, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %rsi
    div %rsi
    imul $8, %rax, %r8
    mov %rcx, %rdx
    sub %r8, %rdx
    add $1, %rdx
    mov %edx, %ecx
    mov $1, %r8
    shl %cl, %r8
    sub $1, %r8
    mov %r10, %rcx
    and %r8d, %ecx
    and %r8d, %r9d
    mov %rcx, %r11
    mov %r9, %rbx
    jmp _kefir_func___kefir_bigint_unsigned_compare_label4
__kefir_text_func___kefir_bigint_unsigned_compare_end:

__kefir_bigint_set_unsigned_integer:
__kefir_text_func___kefir_bigint_set_unsigned_integer_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    sub $24, %rsp
    mov %rdx, %rcx
    mov %rsi, %r10
    mov %rdi, %r11
    cmp $0, %r10
    je _kefir_func___kefir_bigint_set_unsigned_integer_label7
    mov %r10, %rsi
    mov $64, %rax
    cmp $64, %r10
    cmova %rax, %rsi
    mov %rsi, %rbx
    mov %rbx, %rsi
    sub $-7, %rsi
    mov %rsi, %rax
    xor %edx, %edx
    mov $8, %rsi
    div %rsi
    xor %r8d, %r8d
    mov %rcx, %r9
_kefir_func___kefir_bigint_set_unsigned_integer_label2:
    cmp %rax, %r8
    jb _kefir_func___kefir_bigint_set_unsigned_integer_label6
    cmp %r10, %rbx
    jb _kefir_func___kefir_bigint_set_unsigned_integer_label5
_kefir_func___kefir_bigint_set_unsigned_integer_label4:
    xor %eax, %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_set_unsigned_integer_label5:
    movq %r10, -32(%rbp)
    movq %r11, -24(%rbp)
    mov %r11, %rdi
    mov %rbx, %rsi
    mov %r10, %rdx
    call __kefir_bigint_cast_unsigned
    movq -32(%rbp), %r10
    movq -24(%rbp), %r11
    jmp _kefir_func___kefir_bigint_set_unsigned_integer_label4
_kefir_func___kefir_bigint_set_unsigned_integer_label6:
    mov %r11, %rdi
    add %r8, %rdi
    movb %r9b, (%rdi)
    mov %r8, %rcx
    add $1, %rcx
    mov %r9, %rdx
    shr $8, %rdx
    mov %rcx, %r8
    mov %rdx, %r9
    jmp _kefir_func___kefir_bigint_set_unsigned_integer_label2
_kefir_func___kefir_bigint_set_unsigned_integer_label7:
    xor %eax, %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_set_unsigned_integer_end:

__kefir_bigint_cast_unsigned:
__kefir_text_func___kefir_bigint_cast_unsigned_begin:
    push %rbp
    mov %rsp, %rbp
    push %rbx
    sub $8, %rsp
    mov %rdx, %rcx
    mov %rsi, %r9
    mov %rdi, %rbx
    mov %rcx, %rdx
    sub $1, %rdx
    mov %rdx, %rax
    xor %edx, %edx
    mov $8, %rsi
    div %rsi
    mov %rax, %r11
    imul $8, %r11, %r8
    mov %rcx, %rdx
    sub %r8, %rdx
    cmp %r9, %rcx
    jbe _kefir_func___kefir_bigint_cast_unsigned_label11
    cmp $0, %r9
    jne _kefir_func___kefir_bigint_cast_unsigned_label2
_kefir_func___kefir_bigint_cast_unsigned_label12:
    xor %eax, %eax
    jmp _kefir_func___kefir_bigint_cast_unsigned_label8
_kefir_func___kefir_bigint_cast_unsigned_label2:
    mov %r9, %rsi
    sub $1, %rsi
    mov %rsi, %rax
    xor %edx, %edx
    mov $8, %rcx
    div %rcx
    mov %rax, %r10
    imul $8, %r10, %rcx
    sub %rcx, %r9
    mov %r9, %rsi
    add $1, %rsi
    cmp $8, %rsi
    jb _kefir_func___kefir_bigint_cast_unsigned_label7
_kefir_func___kefir_bigint_cast_unsigned_label3:
    mov %r10, %rax
    add $1, %rax
_kefir_func___kefir_bigint_cast_unsigned_label4:
    cmp %r11, %rax
    jbe _kefir_func___kefir_bigint_cast_unsigned_label6
    xor %eax, %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label6:
    mov %rbx, %rdi
    add %rax, %rdi
    movb $0, (%rdi)
    mov %rax, %rcx
    add $1, %rcx
    mov %rcx, %rax
    jmp _kefir_func___kefir_bigint_cast_unsigned_label4
_kefir_func___kefir_bigint_cast_unsigned_label7:
    mov %rbx, %rdi
    add %r10, %rdi
    movzxb (%rdi), %rdx
    mov $1, %r8
    mov %r9, %rcx
    shl %cl, %r8
    sub $1, %r8
    and %r8d, %edx
    movb %dl, (%rdi)
    jmp _kefir_func___kefir_bigint_cast_unsigned_label3
_kefir_func___kefir_bigint_cast_unsigned_label8:
    cmp %r11, %rax
    jbe _kefir_func___kefir_bigint_cast_unsigned_label10
    xor %eax, %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
_kefir_func___kefir_bigint_cast_unsigned_label10:
    mov %rbx, %rdi
    add %rax, %rdi
    movb $0, (%rdi)
    mov %rax, %rcx
    add $1, %rcx
    mov %rcx, %rax
    jmp _kefir_func___kefir_bigint_cast_unsigned_label8
_kefir_func___kefir_bigint_cast_unsigned_label11:
    mov %rbx, %rdi
    add %r11, %rdi
    movzxb (%rdi), %rax
    mov $1, %rsi
    mov %rdx, %rcx
    shl %cl, %rsi
    sub $1, %rsi
    and %esi, %eax
    movb %al, (%rdi)
    xor %eax, %eax
    lea -8(%rbp), %rsp
    pop %rbx
    pop %rbp
    ret
__kefir_text_func___kefir_bigint_cast_unsigned_end:


