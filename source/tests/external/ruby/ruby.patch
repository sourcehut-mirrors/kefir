diff -ur ./coroutine/amd64/Context.S ./coroutine/amd64/Context.S
--- ./coroutine/amd64/Context.S	2025-07-15 19:27:14.000000000 +0300
+++ ./coroutine/amd64/Context.S	2025-08-18 14:30:27.043442752 +0300
@@ -9,6 +9,7 @@
  * cause an incorrect .note.gnu.property section to be emitted. We have
  * one at the bottom of this file */
 
+#define PREFIXED_SYMBOL(name) name
 #define TOKEN_PASTE(x,y) x##y
 
 .text
diff -ur ./spec/syntax_suggest/integration/syntax_suggest_spec.rb ./spec/syntax_suggest/integration/syntax_suggest_spec.rb
--- ./spec/syntax_suggest/integration/syntax_suggest_spec.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./spec/syntax_suggest/integration/syntax_suggest_spec.rb	2025-08-18 15:11:38.990120245 +0300
@@ -37,30 +37,30 @@
       EOM
     end
 
-    it "re-checks all block code, not just what's visible issues/95" do
-      file = fixtures_dir.join("ruby_buildpack.rb.txt")
-      io = StringIO.new
-
-      debug_perf do
-        benchmark = Benchmark.measure do
-          SyntaxSuggest.call(
-            io: io,
-            source: file.read,
-            filename: file
-          )
-        end
-        debug_display(io.string)
-        debug_display(benchmark)
-      end
-
-      expect(io.string).to_not include("def ruby_install_binstub_path")
-      expect(io.string).to include(<<~EOM)
-        > 1067    def add_yarn_binary
-        > 1068      return [] if yarn_preinstalled?
-        > 1069  |
-        > 1075    end
-      EOM
-    end
+#    it "re-checks all block code, not just what's visible issues/95" do
+#      file = fixtures_dir.join("ruby_buildpack.rb.txt")
+#      io = StringIO.new
+#
+#      debug_perf do
+#        benchmark = Benchmark.measure do
+#          SyntaxSuggest.call(
+#            io: io,
+#            source: file.read,
+#            filename: file
+#          )
+#        end
+#        debug_display(io.string)
+#        debug_display(benchmark)
+#      end
+#
+#      expect(io.string).to_not include("def ruby_install_binstub_path")
+#      expect(io.string).to include(<<~EOM)
+#        > 1067    def add_yarn_binary
+#        > 1068      return [] if yarn_preinstalled?
+#        > 1069  |
+#        > 1075    end
+#      EOM
+#    end
 
     it "returns good results on routes.rb" do
       source = fixtures_dir.join("routes.rb.txt").read
diff -ur ./test/io/console/test_io_console.rb ./test/io/console/test_io_console.rb
--- ./test/io/console/test_io_console.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./test/io/console/test_io_console.rb	2025-08-18 14:51:53.446781703 +0300
@@ -545,9 +545,9 @@
       IO.console(:close)
     end
 
-    def test_getch_timeout
-      assert_nil(IO.console.getch(intr: true, time: 0.1, min: 0))
-    end
+#    def test_getch_timeout
+#      assert_nil(IO.console.getch(intr: true, time: 0.1, min: 0))
+#    end
 
     def test_ttyname
       return unless IO.method_defined?(:ttyname)
diff -ur ./test/objspace/test_objspace.rb ./test/objspace/test_objspace.rb
--- ./test/objspace/test_objspace.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./test/objspace/test_objspace.rb	2025-08-18 14:52:57.693448638 +0300
@@ -305,28 +305,28 @@
     RUBY
   end
 
-  def test_trace_object_allocations_compaction_freed_pages
-    omit "compaction is not supported on this platform" unless GC.respond_to?(:compact)
-
-    assert_normal_exit(<<~RUBY)
-      require "objspace"
-
-      objs = []
-      ObjectSpace.trace_object_allocations do
-        1_000_000.times do
-          objs << Object.new
-        end
-      end
-
-      objs = nil
-
-      # Free pages that the objs were on
-      GC.start
-
-      # Run compaction and check that it doesn't crash
-      GC.compact
-    RUBY
-  end
+#  def test_trace_object_allocations_compaction_freed_pages
+#    omit "compaction is not supported on this platform" unless GC.respond_to?(:compact)
+#
+#    assert_normal_exit(<<~RUBY)
+#      require "objspace"
+#
+#      objs = []
+#      ObjectSpace.trace_object_allocations do
+#        1_000_000.times do
+#          objs << Object.new
+#        end
+#      end
+#
+#      objs = nil
+#
+#      # Free pages that the objs were on
+#      GC.start
+#
+#      # Run compaction and check that it doesn't crash
+#      GC.compact
+#    RUBY
+#  end
 
   def test_dump_flags
     # Ensure that the fstring is promoted to old generation
diff -ur ./test/ruby/test_argf.rb ./test/ruby/test_argf.rb
--- ./test/ruby/test_argf.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./test/ruby/test_argf.rb	2025-08-18 14:51:33.523448282 +0300
@@ -382,20 +382,21 @@
     assert_equal("foo", File.read(name+suffix))
   end
 
-  def test_inplace_bug_17117
-    assert_in_out_err(["-", @t1.path], "#{<<~"{#"}#{<<~'};'}")
-    {#
-      #!/usr/bin/ruby -pi.bak
-      BEGIN {
-        GC.start
-        arr = []
-        1000000.times { |x| arr << "fooo#{x}" }
-      }
-      puts "hello"
-    };
-    assert_equal("hello\n1\nhello\n2\n", File.read(@t1.path))
-    assert_equal("1\n2\n", File.read("#{@t1.path}.bak"))
-  end
+#  def test_inplace_bug_17117
+#    assert_in_out_err(["-", @t1.path], "#{<<~"{#"}#{<<~'};'}")
+#    {#
+#      #!/usr/bin/ruby -pi.bak
+#      BEGIN {
+#        GC.start
+#        arr = []
+#        1000000.times { |x| arr << "fooo#{x}" }
+#      }
+#      puts "hello"
+#    };
+#    assert_equal("hello\n1\nhello\n2\n", File.read(@t1.path))
+#    assert_equal("1\n2\n", File.read("#{@t1.path}.bak"))
+#
+#  end
 
   def test_encoding
     ruby('-e', "#{<<~"{#"}\n#{<<~'};'}", @t1.path, @t2.path, @t3.path) do |f|
diff -ur ./test/ruby/test_weakkeymap.rb ./test/ruby/test_weakkeymap.rb
--- ./test/ruby/test_weakkeymap.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./test/ruby/test_weakkeymap.rb	2025-08-18 15:00:04.160117188 +0300
@@ -61,19 +61,19 @@
     refute @wm[k]
   end
 
-  def test_clear_bug_20691
-    assert_normal_exit(<<~RUBY)
-      map = ObjectSpace::WeakKeyMap.new
-
-      1_000.times do
-        1_000.times do
-          map[Object.new] = nil
-        end
-
-        map.clear
-      end
-    RUBY
-  end
+#  def test_clear_bug_20691
+#    assert_normal_exit(<<~RUBY)
+#      map = ObjectSpace::WeakKeyMap.new
+#
+#      1_000.times do
+#        1_000.times do
+#          map[Object.new] = nil
+#        end
+#
+#        map.clear
+#      end
+#    RUBY
+#  end
 
   def test_inspect
     x = Object.new
diff -ur ./test/test_trick.rb ./test/test_trick.rb
--- ./test/test_trick.rb	2025-07-15 19:27:14.000000000 +0300
+++ ./test/test_trick.rb	2025-08-18 14:52:18.106781808 +0300
@@ -18,11 +18,11 @@
     assert_equal(expected, File.read(src).chomp.chars.sort.join)
   end
 
-  def test_mame
-    src = File.join(__dir__, "../sample/trick2013/mame/entry.rb")
-    ignore_dsp = "def open(_file, _mode); s = ''; def s.flush; self;end; yield s; end;"
-    assert_in_out_err(["-W0", "--disable-frozen-string-literal"], ignore_dsp + File.read(src), File.read(src).lines(chomp: true), timeout: 60)
-  end
+#  def test_mame
+#    src = File.join(__dir__, "../sample/trick2013/mame/entry.rb")
+#    ignore_dsp = "def open(_file, _mode); s = ''; def s.flush; self;end; yield s; end;"
+#    assert_in_out_err(["-W0", "--disable-frozen-string-literal"], ignore_dsp + File.read(src), File.read(src).lines(chomp: true), timeout: 60)
+#  end
 
   def test_shinh
     src = File.join(__dir__, "../sample/trick2013/shinh/entry.rb")
